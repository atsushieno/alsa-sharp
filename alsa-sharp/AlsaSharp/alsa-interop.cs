// This source file is mostly generated by nclang PInvokeGenerator.
using System;
using System.Runtime.InteropServices;
using delegate0 = AlsaSharp.Delegates.snd_async_callback_t; // global.h (121,16)
using delegate1 = AlsaSharp.Delegates.snd_lib_error_handler_t; // error.h (59,16)
//using delegate2 = AlsaSharp.Delegates.snd_local_error_handler_t; // error.h (78,16)
using delegate3 = AlsaSharp.Delegates.snd_pcm_hook_func_t; // pcm.h (1153,15)
using delegate6 = AlsaSharp.Delegates.snd_hctl_compare_t; // control.h (531,15)
using delegate7 = AlsaSharp.Delegates.snd_hctl_callback_t; // control.h (542,15)
using delegate8 = AlsaSharp.Delegates.snd_hctl_elem_callback_t; // control.h (551,15)
using delegate9 = AlsaSharp.Delegates.snd_mixer_callback_t; // mixer.h (55,15)
using delegate10 = AlsaSharp.Delegates.snd_mixer_elem_callback_t; // mixer.h (65,15)
using delegate11 = AlsaSharp.Delegates.snd_mixer_compare_t; // mixer.h (74,15)
using delegate12 = AlsaSharp.Delegates.snd_mixer_event_t; // mixer.h (85,15)
using snd_async_callback_t = AlsaSharp.Delegates.snd_async_callback_t;
using snd_lib_error_handler_t = AlsaSharp.Delegates.snd_lib_error_handler_t;
//using snd_local_error_handler_t = AlsaSharp.Delegates.snd_local_error_handler_t;
using snd_pcm_hook_func_t = AlsaSharp.Delegates.snd_pcm_hook_func_t;
using delegate4 = AlsaSharp.Delegates.delegate4;
using delegate5 = AlsaSharp.Delegates.delegate5;
using snd_hctl_compare_t = AlsaSharp.Delegates.snd_hctl_compare_t;
using snd_hctl_callback_t = AlsaSharp.Delegates.snd_hctl_callback_t;
using snd_hctl_elem_callback_t = AlsaSharp.Delegates.snd_hctl_elem_callback_t;
using snd_mixer_callback_t = AlsaSharp.Delegates.snd_mixer_callback_t;
using snd_mixer_elem_callback_t = AlsaSharp.Delegates.snd_mixer_elem_callback_t;
using snd_mixer_compare_t = AlsaSharp.Delegates.snd_mixer_compare_t;
using snd_mixer_event_t = AlsaSharp.Delegates.snd_mixer_event_t;
using delegate13 = AlsaSharp.Delegates.delegate13;
using delegate14 = AlsaSharp.Delegates.delegate14;

namespace AlsaSharp {
[StructLayout (LayoutKind.Sequential)]
struct snd_timestamp_t // hack_time.h (6, 8)
{
	public long @tv_sec;
	public long @tv_usec;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_htimestamp_t // hack_time.h (11, 8)
{
	public long @tv_sec;
	public long @tv_nsec;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_dlsym_link // global.h (66, 8)
{
	[CTypeDetails ("Pointer<snd_dlsym_link>")]public System.IntPtr @next;
	[CTypeDetails ("Pointer<byte>")]public System.IntPtr @dlsym_name;
	[CTypeDetails ("Pointer<void>")]public System.IntPtr @dlsym_ptr;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_async_handler_t // global.h (114, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_shm_area // global.h (130, 8)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_input_t // input.h (54, 16)
{
}

enum snd_input_type_t // input.h (57, 14)
{
	SND_INPUT_STDIO  = 0,
	SND_INPUT_BUFFER  = 1,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_output_t // output.h (54, 16)
{
}

enum snd_output_type_t // output.h (57, 14)
{
	SND_OUTPUT_STDIO  = 0,
	SND_OUTPUT_BUFFER  = 1,
}

enum snd_config_type_t // conf.h (48, 14)
{
	SND_CONFIG_TYPE_INTEGER  = 0,
	SND_CONFIG_TYPE_INTEGER64  = 1,
	SND_CONFIG_TYPE_REAL  = 2,
	SND_CONFIG_TYPE_STRING  = 3,
	SND_CONFIG_TYPE_POINTER  = 4,
	SND_CONFIG_TYPE_COMPOUND  = 1024,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_config_t // conf.h (69, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct _snd_config_iterator // conf.h (77, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_config_update_t // conf.h (83, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_devname_t // conf.h (197, 8)
{
	[CTypeDetails ("Pointer<byte>")]public System.IntPtr @name;
	[CTypeDetails ("Pointer<byte>")]public System.IntPtr @comment;
	[CTypeDetails ("Pointer<snd_devname_t>")]public System.IntPtr @next;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_pcm_info_t // pcm.h (46, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_pcm_hw_params_t // pcm.h (62, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_pcm_sw_params_t // pcm.h (65, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_pcm_status_t // pcm.h (67, 17)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_pcm_access_mask_t // pcm.h (69, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_pcm_format_mask_t // pcm.h (71, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_pcm_subformat_mask_t // pcm.h (73, 16)
{
}

enum snd_pcm_class_t // pcm.h (76, 14)
{
	SND_PCM_CLASS_GENERIC  = 0,
	SND_PCM_CLASS_MULTI  = 1,
	SND_PCM_CLASS_MODEM  = 2,
	SND_PCM_CLASS_DIGITIZER  = 3,
	SND_PCM_CLASS_LAST  = 3,
}

enum snd_pcm_subclass_t // pcm.h (90, 14)
{
	SND_PCM_SUBCLASS_GENERIC_MIX  = 0,
	SND_PCM_SUBCLASS_MULTI_MIX  = 1,
	SND_PCM_SUBCLASS_LAST  = 1,
}

enum snd_pcm_stream_t // pcm.h (99, 14)
{
	SND_PCM_STREAM_PLAYBACK  = 0,
	SND_PCM_STREAM_CAPTURE  = 1,
	SND_PCM_STREAM_LAST  = 1,
}

enum snd_pcm_access_t // pcm.h (108, 14)
{
	SND_PCM_ACCESS_MMAP_INTERLEAVED  = 0,
	SND_PCM_ACCESS_MMAP_NONINTERLEAVED  = 1,
	SND_PCM_ACCESS_MMAP_COMPLEX  = 2,
	SND_PCM_ACCESS_RW_INTERLEAVED  = 3,
	SND_PCM_ACCESS_RW_NONINTERLEAVED  = 4,
	SND_PCM_ACCESS_LAST  = 4,
}

enum snd_pcm_format_t // pcm.h (123, 14)
{
	SND_PCM_FORMAT_UNKNOWN  = -1,
	SND_PCM_FORMAT_S8  = 0,
	SND_PCM_FORMAT_U8  = 1,
	SND_PCM_FORMAT_S16_LE  = 2,
	SND_PCM_FORMAT_S16_BE  = 3,
	SND_PCM_FORMAT_U16_LE  = 4,
	SND_PCM_FORMAT_U16_BE  = 5,
	SND_PCM_FORMAT_S24_LE  = 6,
	SND_PCM_FORMAT_S24_BE  = 7,
	SND_PCM_FORMAT_U24_LE  = 8,
	SND_PCM_FORMAT_U24_BE  = 9,
	SND_PCM_FORMAT_S32_LE  = 10,
	SND_PCM_FORMAT_S32_BE  = 11,
	SND_PCM_FORMAT_U32_LE  = 12,
	SND_PCM_FORMAT_U32_BE  = 13,
	SND_PCM_FORMAT_FLOAT_LE  = 14,
	SND_PCM_FORMAT_FLOAT_BE  = 15,
	SND_PCM_FORMAT_FLOAT64_LE  = 16,
	SND_PCM_FORMAT_FLOAT64_BE  = 17,
	SND_PCM_FORMAT_IEC958_SUBFRAME_LE  = 18,
	SND_PCM_FORMAT_IEC958_SUBFRAME_BE  = 19,
	SND_PCM_FORMAT_MU_LAW  = 20,
	SND_PCM_FORMAT_A_LAW  = 21,
	SND_PCM_FORMAT_IMA_ADPCM  = 22,
	SND_PCM_FORMAT_MPEG  = 23,
	SND_PCM_FORMAT_GSM  = 24,
	SND_PCM_FORMAT_SPECIAL  = 31,
	SND_PCM_FORMAT_S24_3LE  = 32,
	SND_PCM_FORMAT_S24_3BE  = 33,
	SND_PCM_FORMAT_U24_3LE  = 34,
	SND_PCM_FORMAT_U24_3BE  = 35,
	SND_PCM_FORMAT_S20_3LE  = 36,
	SND_PCM_FORMAT_S20_3BE  = 37,
	SND_PCM_FORMAT_U20_3LE  = 38,
	SND_PCM_FORMAT_U20_3BE  = 39,
	SND_PCM_FORMAT_S18_3LE  = 40,
	SND_PCM_FORMAT_S18_3BE  = 41,
	SND_PCM_FORMAT_U18_3LE  = 42,
	SND_PCM_FORMAT_U18_3BE  = 43,
	SND_PCM_FORMAT_G723_24  = 44,
	SND_PCM_FORMAT_G723_24_1B  = 45,
	SND_PCM_FORMAT_G723_40  = 46,
	SND_PCM_FORMAT_G723_40_1B  = 47,
	SND_PCM_FORMAT_DSD_U8  = 48,
	SND_PCM_FORMAT_DSD_U16_LE  = 49,
	SND_PCM_FORMAT_DSD_U32_LE  = 50,
	SND_PCM_FORMAT_DSD_U16_BE  = 51,
	SND_PCM_FORMAT_DSD_U32_BE  = 52,
	SND_PCM_FORMAT_LAST  = 52,
	SND_PCM_FORMAT_S16  = 2,
	SND_PCM_FORMAT_U16  = 4,
	SND_PCM_FORMAT_S24  = 6,
	SND_PCM_FORMAT_U24  = 8,
	SND_PCM_FORMAT_S32  = 10,
	SND_PCM_FORMAT_U32  = 12,
	SND_PCM_FORMAT_FLOAT  = 14,
	SND_PCM_FORMAT_FLOAT64  = 16,
	SND_PCM_FORMAT_IEC958_SUBFRAME  = 18,
}

enum snd_pcm_subformat_t // pcm.h (266, 14)
{
	SND_PCM_SUBFORMAT_STD  = 0,
	SND_PCM_SUBFORMAT_LAST  = 0,
}

enum snd_pcm_state_t // pcm.h (273, 14)
{
	SND_PCM_STATE_OPEN  = 0,
	SND_PCM_STATE_SETUP  = 1,
	SND_PCM_STATE_PREPARED  = 2,
	SND_PCM_STATE_RUNNING  = 3,
	SND_PCM_STATE_XRUN  = 4,
	SND_PCM_STATE_DRAINING  = 5,
	SND_PCM_STATE_PAUSED  = 6,
	SND_PCM_STATE_SUSPENDED  = 7,
	SND_PCM_STATE_DISCONNECTED  = 8,
	SND_PCM_STATE_LAST  = 8,
}

enum snd_pcm_start_t // pcm.h (296, 14)
{
	SND_PCM_START_DATA  = 0,
	SND_PCM_START_EXPLICIT  = 1,
	SND_PCM_START_LAST  = 1,
}

enum snd_pcm_xrun_t // pcm.h (305, 14)
{
	SND_PCM_XRUN_NONE  = 0,
	SND_PCM_XRUN_STOP  = 1,
	SND_PCM_XRUN_LAST  = 1,
}

enum snd_pcm_tstamp_t // pcm.h (314, 14)
{
	SND_PCM_TSTAMP_NONE  = 0,
	SND_PCM_TSTAMP_ENABLE  = 1,
	SND_PCM_TSTAMP_MMAP  = 1,
	SND_PCM_TSTAMP_LAST  = 1,
}

enum snd_pcm_tstamp_type_t // pcm.h (326, 14)
{
	SND_PCM_TSTAMP_TYPE_GETTIMEOFDAY  = 0,
	SND_PCM_TSTAMP_TYPE_MONOTONIC  = 1,
	SND_PCM_TSTAMP_TYPE_MONOTONIC_RAW  = 2,
	SND_PCM_TSTAMP_TYPE_LAST  = 2,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_pcm_audio_tstamp_config_t // pcm.h (333, 16)
{
	public uint @type_requested;
	public uint @report_delay;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_pcm_audio_tstamp_report_t // pcm.h (339, 16)
{
	public uint @valid;
	public uint @actual_type;
	public uint @accuracy_report;
	public uint @accuracy;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_pcm_t // pcm.h (374, 16)
{
}

enum snd_pcm_type_t // pcm.h (377, 6)
{
	SND_PCM_TYPE_HW  = 0,
	SND_PCM_TYPE_HOOKS  = 1,
	SND_PCM_TYPE_MULTI  = 2,
	SND_PCM_TYPE_FILE  = 3,
	SND_PCM_TYPE_NULL  = 4,
	SND_PCM_TYPE_SHM  = 5,
	SND_PCM_TYPE_INET  = 6,
	SND_PCM_TYPE_COPY  = 7,
	SND_PCM_TYPE_LINEAR  = 8,
	SND_PCM_TYPE_ALAW  = 9,
	SND_PCM_TYPE_MULAW  = 10,
	SND_PCM_TYPE_ADPCM  = 11,
	SND_PCM_TYPE_RATE  = 12,
	SND_PCM_TYPE_ROUTE  = 13,
	SND_PCM_TYPE_PLUG  = 14,
	SND_PCM_TYPE_SHARE  = 15,
	SND_PCM_TYPE_METER  = 16,
	SND_PCM_TYPE_MIX  = 17,
	SND_PCM_TYPE_DROUTE  = 18,
	SND_PCM_TYPE_LBSERVER  = 19,
	SND_PCM_TYPE_LINEAR_FLOAT  = 20,
	SND_PCM_TYPE_LADSPA  = 21,
	SND_PCM_TYPE_DMIX  = 22,
	SND_PCM_TYPE_JACK  = 23,
	SND_PCM_TYPE_DSNOOP  = 24,
	SND_PCM_TYPE_DSHARE  = 25,
	SND_PCM_TYPE_IEC958  = 26,
	SND_PCM_TYPE_SOFTVOL  = 27,
	SND_PCM_TYPE_IOPLUG  = 28,
	SND_PCM_TYPE_EXTPLUG  = 29,
	SND_PCM_TYPE_MMAP_EMUL  = 30,
	SND_PCM_TYPE_LAST  = 30,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_pcm_channel_area_t // pcm.h (448, 16)
{
	[CTypeDetails ("Pointer<void>")]public System.IntPtr @addr;
	public uint @first;
	public uint @step;
}

[StructLayout (LayoutKind.Explicit)]
struct snd_pcm_sync_id_t // pcm.h (458, 15)
{
	[MarshalAs (UnmanagedType.ByValArray, SizeConst=16)]
	[FieldOffset (0)]
	[CTypeDetails ("ConstArrayOf<byte>")] public byte[] @id;
	[MarshalAs (UnmanagedType.ByValArray, SizeConst=8)]
	[FieldOffset (0)]
	[CTypeDetails ("ConstArrayOf<ushort>")] public ushort[] @id16;
	[MarshalAs (UnmanagedType.ByValArray, SizeConst=4)]
	[FieldOffset (0)]
	[CTypeDetails ("ConstArrayOf<uint>")] public uint[] @id32;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_pcm_scope_t // pcm.h (468, 16)
{
}

enum snd_pcm_chmap_type // pcm.h (529, 6)
{
	SND_CHMAP_TYPE_NONE  = 0,
	SND_CHMAP_TYPE_FIXED  = 1,
	SND_CHMAP_TYPE_VAR  = 2,
	SND_CHMAP_TYPE_PAIRED  = 3,
	SND_CHMAP_TYPE_LAST  = 3,
}

enum snd_pcm_chmap_position // pcm.h (538, 6)
{
	SND_CHMAP_UNKNOWN  = 0,
	SND_CHMAP_NA  = 1,
	SND_CHMAP_MONO  = 2,
	SND_CHMAP_FL  = 3,
	SND_CHMAP_FR  = 4,
	SND_CHMAP_RL  = 5,
	SND_CHMAP_RR  = 6,
	SND_CHMAP_FC  = 7,
	SND_CHMAP_LFE  = 8,
	SND_CHMAP_SL  = 9,
	SND_CHMAP_SR  = 10,
	SND_CHMAP_RC  = 11,
	SND_CHMAP_FLC  = 12,
	SND_CHMAP_FRC  = 13,
	SND_CHMAP_RLC  = 14,
	SND_CHMAP_RRC  = 15,
	SND_CHMAP_FLW  = 16,
	SND_CHMAP_FRW  = 17,
	SND_CHMAP_FLH  = 18,
	SND_CHMAP_FCH  = 19,
	SND_CHMAP_FRH  = 20,
	SND_CHMAP_TC  = 21,
	SND_CHMAP_TFL  = 22,
	SND_CHMAP_TFR  = 23,
	SND_CHMAP_TFC  = 24,
	SND_CHMAP_TRL  = 25,
	SND_CHMAP_TRR  = 26,
	SND_CHMAP_TRC  = 27,
	SND_CHMAP_TFLC  = 28,
	SND_CHMAP_TFRC  = 29,
	SND_CHMAP_TSL  = 30,
	SND_CHMAP_TSR  = 31,
	SND_CHMAP_LLFE  = 32,
	SND_CHMAP_RLFE  = 33,
	SND_CHMAP_BC  = 34,
	SND_CHMAP_BLC  = 35,
	SND_CHMAP_BRC  = 36,
	SND_CHMAP_LAST  = 36,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_pcm_chmap_t // pcm.h (588, 16)
{
	public uint @channels;
	[CTypeDetails ("ConstArrayOf<uint>")] public uint[] @pos;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_pcm_chmap_query_t // pcm.h (594, 16)
{
	public snd_pcm_chmap_type @type;
	public snd_pcm_chmap_t @map;
}

enum snd_pcm_hook_type_t // pcm.h (1143, 14)
{
	SND_PCM_HOOK_TYPE_HW_PARAMS  = 0,
	SND_PCM_HOOK_TYPE_HW_FREE  = 1,
	SND_PCM_HOOK_TYPE_CLOSE  = 2,
	SND_PCM_HOOK_TYPE_LAST  = 2,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_pcm_hook_t // pcm.h (1151, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_pcm_scope_ops_t // pcm.h (1172, 16)
{
	[CTypeDetails ("Pointer<int (snd_pcm_scope_t *)>")]public Delegates.delegate4 @enable;
	[CTypeDetails ("Pointer<void (snd_pcm_scope_t *)>")]public Delegates.delegate5 @disable;
	[CTypeDetails ("Pointer<void (snd_pcm_scope_t *)>")]public Delegates.delegate5 @start;
	[CTypeDetails ("Pointer<void (snd_pcm_scope_t *)>")]public Delegates.delegate5 @stop;
	[CTypeDetails ("Pointer<void (snd_pcm_scope_t *)>")]public Delegates.delegate5 @update;
	[CTypeDetails ("Pointer<void (snd_pcm_scope_t *)>")]public Delegates.delegate5 @reset;
	[CTypeDetails ("Pointer<void (snd_pcm_scope_t *)>")]public Delegates.delegate5 @close;
}

enum snd_spcm_latency_t // pcm.h (1232, 14)
{
	SND_SPCM_LATENCY_STANDARD  = 0,
	SND_SPCM_LATENCY_MEDIUM  = 1,
	SND_SPCM_LATENCY_REALTIME  = 2,
}

enum snd_spcm_xrun_type_t // pcm.h (1245, 14)
{
	SND_SPCM_XRUN_IGNORE  = 0,
	SND_SPCM_XRUN_STOP  = 1,
}

enum snd_spcm_duplex_type_t // pcm.h (1253, 14)
{
	SND_SPCM_DUPLEX_LIBERAL  = 0,
	SND_SPCM_DUPLEX_PEDANTIC  = 1,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_rawmidi_info_t // rawmidi.h (45, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_rawmidi_params_t // rawmidi.h (47, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_rawmidi_status_t // rawmidi.h (49, 16)
{
}

enum snd_rawmidi_stream_t // rawmidi.h (52, 14)
{
	SND_RAWMIDI_STREAM_OUTPUT  = 0,
	SND_RAWMIDI_STREAM_INPUT  = 1,
	SND_RAWMIDI_STREAM_LAST  = 1,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_rawmidi_t // rawmidi.h (68, 16)
{
}

enum snd_rawmidi_type_t // rawmidi.h (71, 14)
{
	SND_RAWMIDI_TYPE_HW  = 0,
	SND_RAWMIDI_TYPE_SHM  = 1,
	SND_RAWMIDI_TYPE_INET  = 2,
	SND_RAWMIDI_TYPE_VIRTUAL  = 3,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_timer_id_t // timer.h (47, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_timer_ginfo_t // timer.h (49, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_timer_gparams_t // timer.h (51, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_timer_gstatus_t // timer.h (53, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_timer_info_t // timer.h (55, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_timer_params_t // timer.h (57, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_timer_status_t // timer.h (59, 16)
{
}

enum snd_timer_class_t // timer.h (61, 14)
{
	SND_TIMER_CLASS_NONE  = -1,
	SND_TIMER_CLASS_SLAVE  = 0,
	SND_TIMER_CLASS_GLOBAL  = 1,
	SND_TIMER_CLASS_CARD  = 2,
	SND_TIMER_CLASS_PCM  = 3,
	SND_TIMER_CLASS_LAST  = 3,
}

enum snd_timer_slave_class_t // timer.h (71, 14)
{
	SND_TIMER_SCLASS_NONE  = 0,
	SND_TIMER_SCLASS_APPLICATION  = 1,
	SND_TIMER_SCLASS_SEQUENCER  = 2,
	SND_TIMER_SCLASS_OSS_SEQUENCER  = 3,
	SND_TIMER_SCLASS_LAST  = 3,
}

enum snd_timer_event_t // timer.h (80, 14)
{
	SND_TIMER_EVENT_RESOLUTION  = 0,
	SND_TIMER_EVENT_TICK  = 1,
	SND_TIMER_EVENT_START  = 2,
	SND_TIMER_EVENT_STOP  = 3,
	SND_TIMER_EVENT_CONTINUE  = 4,
	SND_TIMER_EVENT_PAUSE  = 5,
	SND_TIMER_EVENT_EARLY  = 6,
	SND_TIMER_EVENT_SUSPEND  = 7,
	SND_TIMER_EVENT_RESUME  = 8,
	SND_TIMER_EVENT_MSTART  = 12,
	SND_TIMER_EVENT_MSTOP  = 13,
	SND_TIMER_EVENT_MCONTINUE  = 14,
	SND_TIMER_EVENT_MPAUSE  = 15,
	SND_TIMER_EVENT_MSUSPEND  = 17,
	SND_TIMER_EVENT_MRESUME  = 18,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_timer_read_t // timer.h (100, 16)
{
	public uint @resolution;
	public uint @ticks;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_timer_tread_t // timer.h (106, 16)
{
	public snd_timer_event_t @event;
	public snd_htimestamp_t @tstamp;
	public uint @val;
}

enum snd_timer_type_t // timer.h (127, 14)
{
	SND_TIMER_TYPE_HW  = 0,
	SND_TIMER_TYPE_SHM  = 1,
	SND_TIMER_TYPE_INET  = 2,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_timer_query_t // timer.h (137, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_timer_t // timer.h (139, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_hwdep_info_t // hwdep.h (45, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_hwdep_dsp_status_t // hwdep.h (48, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_hwdep_dsp_image_t // hwdep.h (51, 16)
{
}

enum snd_hwdep_iface_t // hwdep.h (54, 14)
{
	SND_HWDEP_IFACE_OPL2  = 0,
	SND_HWDEP_IFACE_OPL3  = 1,
	SND_HWDEP_IFACE_OPL4  = 2,
	SND_HWDEP_IFACE_SB16CSP  = 3,
	SND_HWDEP_IFACE_EMU10K1  = 4,
	SND_HWDEP_IFACE_YSS225  = 5,
	SND_HWDEP_IFACE_ICS2115  = 6,
	SND_HWDEP_IFACE_SSCAPE  = 7,
	SND_HWDEP_IFACE_VX  = 8,
	SND_HWDEP_IFACE_MIXART  = 9,
	SND_HWDEP_IFACE_USX2Y  = 10,
	SND_HWDEP_IFACE_EMUX_WAVETABLE  = 11,
	SND_HWDEP_IFACE_BLUETOOTH  = 12,
	SND_HWDEP_IFACE_USX2Y_PCM  = 13,
	SND_HWDEP_IFACE_PCXHR  = 14,
	SND_HWDEP_IFACE_SB_RC  = 15,
	SND_HWDEP_IFACE_HDA  = 16,
	SND_HWDEP_IFACE_USB_STREAM  = 17,
	SND_HWDEP_IFACE_FW_DICE  = 18,
	SND_HWDEP_IFACE_FW_FIREWORKS  = 19,
	SND_HWDEP_IFACE_FW_BEBOB  = 20,
	SND_HWDEP_IFACE_FW_OXFW  = 21,
	SND_HWDEP_IFACE_FW_DIGI00X  = 22,
	SND_HWDEP_IFACE_FW_TASCAM  = 23,
	SND_HWDEP_IFACE_LAST  = 23,
}

enum snd_hwdep_type_t // hwdep.h (93, 14)
{
	SND_HWDEP_TYPE_HW  = 0,
	SND_HWDEP_TYPE_SHM  = 1,
	SND_HWDEP_TYPE_INET  = 2,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_hwdep_t // hwdep.h (103, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_aes_iec958_t // control.h (46, 16)
{
	[MarshalAs (UnmanagedType.ByValArray, SizeConst=24)]
	[CTypeDetails ("ConstArrayOf<byte>")] public byte[] @status;
	[MarshalAs (UnmanagedType.ByValArray, SizeConst=147)]
	[CTypeDetails ("ConstArrayOf<byte>")] public byte[] @subcode;
	public byte @pad;
	[MarshalAs (UnmanagedType.ByValArray, SizeConst=4)]
	[CTypeDetails ("ConstArrayOf<byte>")] public byte[] @dig_subframe;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_ctl_card_info_t // control.h (54, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_ctl_elem_id_t // control.h (57, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_ctl_elem_list_t // control.h (60, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_ctl_elem_info_t // control.h (63, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_ctl_elem_value_t // control.h (66, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_ctl_event_t // control.h (69, 16)
{
}

enum snd_ctl_elem_type_t // control.h (72, 14)
{
	SND_CTL_ELEM_TYPE_NONE  = 0,
	SND_CTL_ELEM_TYPE_BOOLEAN  = 1,
	SND_CTL_ELEM_TYPE_INTEGER  = 2,
	SND_CTL_ELEM_TYPE_ENUMERATED  = 3,
	SND_CTL_ELEM_TYPE_BYTES  = 4,
	SND_CTL_ELEM_TYPE_IEC958  = 5,
	SND_CTL_ELEM_TYPE_INTEGER64  = 6,
	SND_CTL_ELEM_TYPE_LAST  = 6,
}

enum snd_ctl_elem_iface_t // control.h (91, 14)
{
	SND_CTL_ELEM_IFACE_CARD  = 0,
	SND_CTL_ELEM_IFACE_HWDEP  = 1,
	SND_CTL_ELEM_IFACE_MIXER  = 2,
	SND_CTL_ELEM_IFACE_PCM  = 3,
	SND_CTL_ELEM_IFACE_RAWMIDI  = 4,
	SND_CTL_ELEM_IFACE_TIMER  = 5,
	SND_CTL_ELEM_IFACE_SEQUENCER  = 6,
	SND_CTL_ELEM_IFACE_LAST  = 6,
}

enum snd_ctl_event_type_t // control.h (110, 14)
{
	SND_CTL_EVENT_ELEM  = 0,
	SND_CTL_EVENT_LAST  = 0,
}

enum snd_ctl_type_t // control.h (193, 14)
{
	SND_CTL_TYPE_HW  = 0,
	SND_CTL_TYPE_SHM  = 1,
	SND_CTL_TYPE_INET  = 2,
	SND_CTL_TYPE_EXT  = 3,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_ctl_t // control.h (214, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_sctl_t // control.h (220, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_hctl_elem_t // control.h (520, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_hctl_t // control.h (523, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_mixer_t // mixer.h (42, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_mixer_class_t // mixer.h (44, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_mixer_elem_t // mixer.h (46, 16)
{
}

enum snd_mixer_elem_type_t // mixer.h (90, 14)
{
	SND_MIXER_ELEM_SIMPLE  = 0,
	SND_MIXER_ELEM_LAST  = 0,
}

enum snd_mixer_selem_channel_id_t // mixer.h (170, 14)
{
	SND_MIXER_SCHN_UNKNOWN  = -1,
	SND_MIXER_SCHN_FRONT_LEFT  = 0,
	SND_MIXER_SCHN_FRONT_RIGHT  = 1,
	SND_MIXER_SCHN_REAR_LEFT  = 2,
	SND_MIXER_SCHN_REAR_RIGHT  = 3,
	SND_MIXER_SCHN_FRONT_CENTER  = 4,
	SND_MIXER_SCHN_WOOFER  = 5,
	SND_MIXER_SCHN_SIDE_LEFT  = 6,
	SND_MIXER_SCHN_SIDE_RIGHT  = 7,
	SND_MIXER_SCHN_REAR_CENTER  = 8,
	SND_MIXER_SCHN_LAST  = 31,
	SND_MIXER_SCHN_MONO  = 0,
}

enum snd_mixer_selem_regopt_abstract // mixer.h (197, 6)
{
	SND_MIXER_SABSTRACT_NONE  = 0,
	SND_MIXER_SABSTRACT_BASIC  = 1,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_mixer_selem_regopt // mixer.h (205, 8)
{
	public int @ver;
	public snd_mixer_selem_regopt_abstract @abstract;
	[CTypeDetails ("Pointer<byte>")]public System.IntPtr @device;
	[CTypeDetails ("Pointer<snd_pcm_t>")]public System.IntPtr @playback_pcm;
	[CTypeDetails ("Pointer<snd_pcm_t>")]public System.IntPtr @capture_pcm;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_mixer_selem_id_t // mixer.h (219, 16)
{
}

enum snd_seq_event_type // seq_event.h (44, 6)
{
	SND_SEQ_EVENT_SYSTEM  = 0,
	SND_SEQ_EVENT_RESULT  = 1,
	SND_SEQ_EVENT_NOTE  = 5,
	SND_SEQ_EVENT_NOTEON  = 6,
	SND_SEQ_EVENT_NOTEOFF  = 7,
	SND_SEQ_EVENT_KEYPRESS  = 8,
	SND_SEQ_EVENT_CONTROLLER  = 10,
	SND_SEQ_EVENT_PGMCHANGE  = 11,
	SND_SEQ_EVENT_CHANPRESS  = 12,
	SND_SEQ_EVENT_PITCHBEND  = 13,
	SND_SEQ_EVENT_CONTROL14  = 14,
	SND_SEQ_EVENT_NONREGPARAM  = 15,
	SND_SEQ_EVENT_REGPARAM  = 16,
	SND_SEQ_EVENT_SONGPOS  = 20,
	SND_SEQ_EVENT_SONGSEL  = 21,
	SND_SEQ_EVENT_QFRAME  = 22,
	SND_SEQ_EVENT_TIMESIGN  = 23,
	SND_SEQ_EVENT_KEYSIGN  = 24,
	SND_SEQ_EVENT_START  = 30,
	SND_SEQ_EVENT_CONTINUE  = 31,
	SND_SEQ_EVENT_STOP  = 32,
	SND_SEQ_EVENT_SETPOS_TICK  = 33,
	SND_SEQ_EVENT_SETPOS_TIME  = 34,
	SND_SEQ_EVENT_TEMPO  = 35,
	SND_SEQ_EVENT_CLOCK  = 36,
	SND_SEQ_EVENT_TICK  = 37,
	SND_SEQ_EVENT_QUEUE_SKEW  = 38,
	SND_SEQ_EVENT_SYNC_POS  = 39,
	SND_SEQ_EVENT_TUNE_REQUEST  = 40,
	SND_SEQ_EVENT_RESET  = 41,
	SND_SEQ_EVENT_SENSING  = 42,
	SND_SEQ_EVENT_ECHO  = 50,
	SND_SEQ_EVENT_OSS  = 51,
	SND_SEQ_EVENT_CLIENT_START  = 60,
	SND_SEQ_EVENT_CLIENT_EXIT  = 61,
	SND_SEQ_EVENT_CLIENT_CHANGE  = 62,
	SND_SEQ_EVENT_PORT_START  = 63,
	SND_SEQ_EVENT_PORT_EXIT  = 64,
	SND_SEQ_EVENT_PORT_CHANGE  = 65,
	SND_SEQ_EVENT_PORT_SUBSCRIBED  = 66,
	SND_SEQ_EVENT_PORT_UNSUBSCRIBED  = 67,
	SND_SEQ_EVENT_USR0  = 90,
	SND_SEQ_EVENT_USR1  = 91,
	SND_SEQ_EVENT_USR2  = 92,
	SND_SEQ_EVENT_USR3  = 93,
	SND_SEQ_EVENT_USR4  = 94,
	SND_SEQ_EVENT_USR5  = 95,
	SND_SEQ_EVENT_USR6  = 96,
	SND_SEQ_EVENT_USR7  = 97,
	SND_SEQ_EVENT_USR8  = 98,
	SND_SEQ_EVENT_USR9  = 99,
	SND_SEQ_EVENT_SYSEX  = 130,
	SND_SEQ_EVENT_BOUNCE  = 131,
	SND_SEQ_EVENT_USR_VAR0  = 135,
	SND_SEQ_EVENT_USR_VAR1  = 136,
	SND_SEQ_EVENT_USR_VAR2  = 137,
	SND_SEQ_EVENT_USR_VAR3  = 138,
	SND_SEQ_EVENT_USR_VAR4  = 139,
	SND_SEQ_EVENT_NONE  = 255,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_addr_t // seq_event.h (178, 16)
{
	public byte @client;
	public byte @port;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_connect_t // seq_event.h (184, 16)
{
	public snd_seq_addr_t @sender;
	public snd_seq_addr_t @dest;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_real_time_t // seq_event.h (191, 16)
{
	public uint @tv_sec;
	public uint @tv_nsec;
}

[StructLayout (LayoutKind.Explicit)]
struct snd_seq_timestamp_t // seq_event.h (200, 15)
{
	[FieldOffset (0)]
	public uint @tick;
	[FieldOffset (0)]
	public snd_seq_real_time_t @time;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_ev_note_t // seq_event.h (230, 16)
{
	public byte @channel;
	public byte @note;
	public byte @velocity;
	public byte @off_velocity;
	public uint @duration;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_ev_ctrl_t // seq_event.h (239, 16)
{
	public byte @channel;
	[MarshalAs (UnmanagedType.ByValArray, SizeConst=3)]
	[CTypeDetails ("ConstArrayOf<byte>")] public byte[] @unused;
	public uint @param;
	public int @value;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_ev_raw8_t // seq_event.h (247, 16)
{
	[MarshalAs (UnmanagedType.ByValArray, SizeConst=12)]
	[CTypeDetails ("ConstArrayOf<byte>")] public byte[] @d;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_ev_raw32_t // seq_event.h (252, 16)
{
	[MarshalAs (UnmanagedType.ByValArray, SizeConst=3)]
	[CTypeDetails ("ConstArrayOf<uint>")] public uint[] @d;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_ev_ext_t // seq_event.h (257, 8)
{
	public uint @len;
	[CTypeDetails ("Pointer<void>")]public System.IntPtr @ptr;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_result_t // seq_event.h (269, 16)
{
	public int @event;
	public int @result;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_queue_skew_t // seq_event.h (275, 16)
{
	public uint @value;
	public uint @base;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_ev_queue_control_t // seq_event.h (281, 16)
{
	public byte @queue;
	[MarshalAs (UnmanagedType.ByValArray, SizeConst=3)]
	[CTypeDetails ("ConstArrayOf<byte>")] public byte[] @unused;
	public anonymous_type_1 @param;
}

[StructLayout (LayoutKind.Explicit)]
struct anonymous_type_1 // seq_event.h (284, 2)
{
	[FieldOffset (0)]
	public int @value;
	[FieldOffset (0)]
	public snd_seq_timestamp_t @time;
	[FieldOffset (0)]
	public uint @position;
	[FieldOffset (0)]
	public snd_seq_queue_skew_t @skew;
	[MarshalAs (UnmanagedType.ByValArray, SizeConst=2)]
	[FieldOffset (0)]
	[CTypeDetails ("ConstArrayOf<uint>")] public uint[] @d32;
	[MarshalAs (UnmanagedType.ByValArray, SizeConst=8)]
	[FieldOffset (0)]
	[CTypeDetails ("ConstArrayOf<byte>")] public byte[] @d8;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_event_t // seq_event.h (296, 16)
{
	public byte @type;
	public byte @flags;
	public byte @tag;
	public byte @queue;
	public snd_seq_timestamp_t @time;
	public snd_seq_addr_t @source;
	public snd_seq_addr_t @dest;
	// FIXME: some of the struct members are arrays with SizeConsts, but the runtime (either mono or CoreCLR) does not accept them.
	// Therefore it is commented out, but that will result in inconsistent sizing between managed and unmanaged.
	//public anonymous_type_3 @data;
}

[StructLayout (LayoutKind.Explicit)]
struct anonymous_type_3 // seq_event.h (307, 2)
{
	[FieldOffset (0)]
	public snd_seq_ev_note_t @note;
	[FieldOffset (0)]
	public snd_seq_ev_ctrl_t @control;
	[FieldOffset (0)]
	public snd_seq_ev_raw8_t @raw8;
	[FieldOffset (0)]
	public snd_seq_ev_raw32_t @raw32;
	[FieldOffset (0)]
	public snd_seq_ev_ext_t @ext;
	[FieldOffset (0)]
	public snd_seq_ev_queue_control_t @queue;
	[FieldOffset (0)]
	public snd_seq_timestamp_t @time;
	[FieldOffset (0)]
	public snd_seq_addr_t @addr;
	[FieldOffset (0)]
	public snd_seq_connect_t @connect;
	[FieldOffset (0)]
	public snd_seq_result_t @result;
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_t // seq.h (47, 16)
{
}

enum snd_seq_type_t // seq.h (62, 14)
{
	SND_SEQ_TYPE_HW  = 0,
	SND_SEQ_TYPE_SHM  = 1,
	SND_SEQ_TYPE_INET  = 2,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_system_info_t // seq.h (95, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_client_info_t // seq.h (125, 16)
{
}

enum snd_seq_client_type_t // seq.h (128, 14)
{
	SND_SEQ_USER_CLIENT  = 1,
	SND_SEQ_KERNEL_CLIENT  = 2,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_client_pool_t // seq.h (172, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_port_info_t // seq.h (207, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_port_subscribe_t // seq.h (319, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_query_subscribe_t // seq.h (351, 16)
{
}

enum snd_seq_query_subs_type_t // seq.h (354, 9)
{
	SND_SEQ_QUERY_SUBS_READ  = 0,
	SND_SEQ_QUERY_SUBS_WRITE  = 1,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_queue_info_t // seq.h (398, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_queue_status_t // seq.h (400, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_queue_tempo_t // seq.h (402, 16)
{
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_queue_timer_t // seq.h (404, 16)
{
}

enum snd_seq_queue_timer_type_t // seq.h (484, 9)
{
	SND_SEQ_TIMER_ALSA  = 0,
	SND_SEQ_TIMER_MIDI_CLOCK  = 1,
	SND_SEQ_TIMER_MIDI_TICK  = 2,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_seq_remove_events_t // seq.h (535, 16)
{
}

enum anonymous_type_6 // seq.h (600, 1)
{
	SND_SEQ_EVFLG_RESULT  = 0,
	SND_SEQ_EVFLG_NOTE  = 1,
	SND_SEQ_EVFLG_CONTROL  = 2,
	SND_SEQ_EVFLG_QUEUE  = 3,
	SND_SEQ_EVFLG_SYSTEM  = 4,
	SND_SEQ_EVFLG_MESSAGE  = 5,
	SND_SEQ_EVFLG_CONNECTION  = 6,
	SND_SEQ_EVFLG_SAMPLE  = 7,
	SND_SEQ_EVFLG_USERS  = 8,
	SND_SEQ_EVFLG_INSTR  = 9,
	SND_SEQ_EVFLG_QUOTE  = 10,
	SND_SEQ_EVFLG_NONE  = 11,
	SND_SEQ_EVFLG_RAW  = 12,
	SND_SEQ_EVFLG_FIXED  = 13,
	SND_SEQ_EVFLG_VARIABLE  = 14,
	SND_SEQ_EVFLG_VARUSR  = 15,
}

enum anonymous_type_7 // seq.h (619, 1)
{
	SND_SEQ_EVFLG_NOTE_ONEARG  = 0,
	SND_SEQ_EVFLG_NOTE_TWOARG  = 1,
}

enum anonymous_type_8 // seq.h (624, 1)
{
	SND_SEQ_EVFLG_QUEUE_NOARG  = 0,
	SND_SEQ_EVFLG_QUEUE_TICK  = 1,
	SND_SEQ_EVFLG_QUEUE_TIME  = 2,
	SND_SEQ_EVFLG_QUEUE_VALUE  = 3,
}

[StructLayout (LayoutKind.Sequential)]
struct snd_midi_event_t // seq_midi_event.h (43, 16)
{
}

partial class Natives
{
	const string LibraryName = "asound";
	// function snd_asoundlib_version - global.h (47, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_asoundlib_version ();

	// function snd_dlopen - global.h (100, 7)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_dlopen ([CTypeDetails ("Pointer<byte>")]System.IntPtr @file, int @mode);

	// function snd_dlsym - global.h (101, 7)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_dlsym ([CTypeDetails ("Pointer<void>")]System.IntPtr @handle, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, [CTypeDetails ("Pointer<byte>")]System.IntPtr @version);

	// function snd_dlclose - global.h (102, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_dlclose ([CTypeDetails ("Pointer<void>")]System.IntPtr @handle);

	// function snd_async_add_handler - global.h (123, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_async_add_handler ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @handler, int @fd, snd_async_callback_t @callback, [CTypeDetails ("Pointer<void>")]System.IntPtr @private_data);

	// function snd_async_del_handler - global.h (125, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_async_del_handler ([CTypeDetails ("Pointer<snd_async_handler_t>")]System.IntPtr @handler);

	// function snd_async_handler_get_fd - global.h (126, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_async_handler_get_fd ([CTypeDetails ("Pointer<snd_async_handler_t>")]System.IntPtr @handler);

	// function snd_async_handler_get_signo - global.h (127, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_async_handler_get_signo ([CTypeDetails ("Pointer<snd_async_handler_t>")]System.IntPtr @handler);

	// function snd_async_handler_get_callback_private - global.h (128, 7)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_async_handler_get_callback_private ([CTypeDetails ("Pointer<snd_async_handler_t>")]System.IntPtr @handler);

	// function snd_shm_area_create - global.h (130, 22)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_shm_area_create (int @shmid, [CTypeDetails ("Pointer<void>")]System.IntPtr @ptr);

	// function snd_shm_area_share - global.h (131, 22)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_shm_area_share ([CTypeDetails ("Pointer<snd_shm_area>")]System.IntPtr @area);

	// function snd_shm_area_destroy - global.h (132, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_shm_area_destroy ([CTypeDetails ("Pointer<snd_shm_area>")]System.IntPtr @area);

	// function snd_user_file - global.h (134, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_user_file ([CTypeDetails ("Pointer<byte>")]System.IntPtr @file, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @result);

	// function snd_input_stdio_open - input.h (64, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_input_stdio_open ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @inputp, [CTypeDetails ("Pointer<byte>")]System.IntPtr @file, [CTypeDetails ("Pointer<byte>")]System.IntPtr @mode);

	// function snd_input_stdio_attach - input.h (65, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_input_stdio_attach ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @inputp, [CTypeDetails ("Pointer<FILE>")]System.IntPtr @fp, int @_close);

	// function snd_input_buffer_open - input.h (66, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_input_buffer_open ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @inputp, [CTypeDetails ("Pointer<byte>")]System.IntPtr @buffer, int @size);

	// function snd_input_close - input.h (67, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_input_close ([CTypeDetails ("Pointer<snd_input_t>")]System.IntPtr @input);

	// function snd_input_scanf - input.h (68, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_input_scanf ([CTypeDetails ("Pointer<snd_input_t>")]System.IntPtr @input, [CTypeDetails ("Pointer<byte>")]System.IntPtr @format);

	// function snd_input_gets - input.h (73, 7)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_input_gets ([CTypeDetails ("Pointer<snd_input_t>")]System.IntPtr @input, [CTypeDetails ("Pointer<byte>")]System.IntPtr @str, uint @size);

	// function snd_input_getc - input.h (74, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_input_getc ([CTypeDetails ("Pointer<snd_input_t>")]System.IntPtr @input);

	// function snd_input_ungetc - input.h (75, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_input_ungetc ([CTypeDetails ("Pointer<snd_input_t>")]System.IntPtr @input, int @c);

	// function snd_output_stdio_open - output.h (64, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_output_stdio_open ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @outputp, [CTypeDetails ("Pointer<byte>")]System.IntPtr @file, [CTypeDetails ("Pointer<byte>")]System.IntPtr @mode);

	// function snd_output_stdio_attach - output.h (65, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_output_stdio_attach ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @outputp, [CTypeDetails ("Pointer<FILE>")]System.IntPtr @fp, int @_close);

	// function snd_output_buffer_open - output.h (66, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_output_buffer_open ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @outputp);

	// function snd_output_buffer_string - output.h (67, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_output_buffer_string ([CTypeDetails ("Pointer<snd_output_t>")]System.IntPtr @output, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @buf);

	// function snd_output_close - output.h (68, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_output_close ([CTypeDetails ("Pointer<snd_output_t>")]System.IntPtr @output);

	// function snd_output_printf - output.h (69, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_output_printf ([CTypeDetails ("Pointer<snd_output_t>")]System.IntPtr @output, [CTypeDetails ("Pointer<byte>")]System.IntPtr @format);

	// function snd_output_puts - output.h (75, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_output_puts ([CTypeDetails ("Pointer<snd_output_t>")]System.IntPtr @output, [CTypeDetails ("Pointer<byte>")]System.IntPtr @str);

	// function snd_output_putc - output.h (76, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_output_putc ([CTypeDetails ("Pointer<snd_output_t>")]System.IntPtr @output, int @c);

	// function snd_output_flush - output.h (77, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_output_flush ([CTypeDetails ("Pointer<snd_output_t>")]System.IntPtr @output);

	// function snd_strerror - error.h (45, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_strerror (int @errnum);

	// function snd_lib_error_set_handler - error.h (61, 12)
	[DllImport (LibraryName)]
	internal static extern int snd_lib_error_set_handler (snd_lib_error_handler_t @handler);

	// function snd_lib_error_set_local - error.h (82, 27)
//	[DllImport (LibraryName)]
//	internal static extern snd_local_error_handler_t snd_lib_error_set_local (snd_local_error_handler_t @func);

	// function snd_config_top - conf.h (87, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_top ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @config);

	// function snd_config_load - conf.h (89, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_load ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<snd_input_t>")]System.IntPtr @in);

	// function snd_config_load_override - conf.h (90, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_load_override ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<snd_input_t>")]System.IntPtr @in);

	// function snd_config_save - conf.h (91, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_save ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<snd_output_t>")]System.IntPtr @out);

	// function snd_config_update - conf.h (92, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_update ();

	// function snd_config_update_r - conf.h (93, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_update_r ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @top, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @update, [CTypeDetails ("Pointer<byte>")]System.IntPtr @path);

	// function snd_config_update_free - conf.h (94, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_update_free ([CTypeDetails ("Pointer<snd_config_update_t>")]System.IntPtr @update);

	// function snd_config_update_free_global - conf.h (95, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_update_free_global ();

	// function snd_config_update_ref - conf.h (97, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_update_ref ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @top);

	// function snd_config_ref - conf.h (98, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_config_ref ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @top);

	// function snd_config_unref - conf.h (99, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_config_unref ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @top);

	// function snd_config_search - conf.h (101, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_search ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @key, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @result);

	// function snd_config_searchv - conf.h (103, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_searchv ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @result);

	// function snd_config_search_definition - conf.h (105, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_search_definition ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @base, [CTypeDetails ("Pointer<byte>")]System.IntPtr @key, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @result);

	// function snd_config_expand - conf.h (109, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_expand ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @root, [CTypeDetails ("Pointer<byte>")]System.IntPtr @args, [CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @private_data, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @result);

	// function snd_config_evaluate - conf.h (112, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_evaluate ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @root, [CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @private_data, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @result);

	// function snd_config_add - conf.h (115, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_add ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @leaf);

	// function snd_config_delete - conf.h (116, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_delete ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config);

	// function snd_config_delete_compound_members - conf.h (117, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_delete_compound_members ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config);

	// function snd_config_copy - conf.h (118, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_copy ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @src);

	// function snd_config_make - conf.h (120, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_make ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @key, snd_config_type_t @type);

	// function snd_config_make_integer - conf.h (122, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_make_integer ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @key);

	// function snd_config_make_integer64 - conf.h (123, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_make_integer64 ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @key);

	// function snd_config_make_real - conf.h (124, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_make_real ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @key);

	// function snd_config_make_string - conf.h (125, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_make_string ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @key);

	// function snd_config_make_pointer - conf.h (126, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_make_pointer ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @key);

	// function snd_config_make_compound - conf.h (127, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_make_compound ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @key, int @join);

	// function snd_config_imake_integer - conf.h (129, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_imake_integer ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @key, long @value);

	// function snd_config_imake_integer64 - conf.h (130, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_imake_integer64 ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @key, long @value);

	// function snd_config_imake_real - conf.h (131, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_imake_real ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @key, double @value);

	// function snd_config_imake_string - conf.h (132, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_imake_string ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @key, [CTypeDetails ("Pointer<byte>")]System.IntPtr @ascii);

	// function snd_config_imake_safe_string - conf.h (133, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_imake_safe_string ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @key, [CTypeDetails ("Pointer<byte>")]System.IntPtr @ascii);

	// function snd_config_imake_pointer - conf.h (134, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_imake_pointer ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @key, [CTypeDetails ("Pointer<void>")]System.IntPtr @ptr);

	// function snd_config_get_type - conf.h (136, 19)
	[DllImport (LibraryName)]
	internal static extern snd_config_type_t snd_config_get_type ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config);

	// function snd_config_set_id - conf.h (138, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_set_id ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @id);

	// function snd_config_set_integer - conf.h (139, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_set_integer ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, long @value);

	// function snd_config_set_integer64 - conf.h (140, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_set_integer64 ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, long @value);

	// function snd_config_set_real - conf.h (141, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_set_real ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, double @value);

	// function snd_config_set_string - conf.h (142, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_set_string ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @value);

	// function snd_config_set_ascii - conf.h (143, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_set_ascii ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @ascii);

	// function snd_config_set_pointer - conf.h (144, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_set_pointer ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<void>")]System.IntPtr @ptr);

	// function snd_config_get_id - conf.h (145, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_get_id ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @value);

	// function snd_config_get_integer - conf.h (146, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_get_integer ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<long>")]System.IntPtr @value);

	// function snd_config_get_integer64 - conf.h (147, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_get_integer64 ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<long>")]System.IntPtr @value);

	// function snd_config_get_real - conf.h (148, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_get_real ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<double>")]System.IntPtr @value);

	// function snd_config_get_ireal - conf.h (149, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_get_ireal ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<double>")]System.IntPtr @value);

	// function snd_config_get_string - conf.h (150, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_get_string ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @value);

	// function snd_config_get_ascii - conf.h (151, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_get_ascii ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @value);

	// function snd_config_get_pointer - conf.h (152, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_get_pointer ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @value);

	// function snd_config_test_id - conf.h (153, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_test_id ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<byte>")]System.IntPtr @id);

	// function snd_config_iterator_first - conf.h (155, 23)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_config_iterator_first ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @node);

	// function snd_config_iterator_next - conf.h (156, 23)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_config_iterator_next ([CTypeDetails ("Pointer<void>")]System.IntPtr @iterator);

	// function snd_config_iterator_end - conf.h (157, 23)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_config_iterator_end ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @node);

	// function snd_config_iterator_entry - conf.h (158, 15)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_config_iterator_entry ([CTypeDetails ("Pointer<void>")]System.IntPtr @iterator);

	// function snd_config_get_bool_ascii - conf.h (182, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_get_bool_ascii ([CTypeDetails ("Pointer<byte>")]System.IntPtr @ascii);

	// function snd_config_get_bool - conf.h (183, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_get_bool ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @conf);

	// function snd_config_get_ctl_iface_ascii - conf.h (184, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_get_ctl_iface_ascii ([CTypeDetails ("Pointer<byte>")]System.IntPtr @ascii);

	// function snd_config_get_ctl_iface - conf.h (185, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_config_get_ctl_iface ([CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @conf);

	// function snd_names_list - conf.h (203, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_names_list ([CTypeDetails ("Pointer<byte>")]System.IntPtr @iface, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @list);

	// function snd_names_list_free - conf.h (204, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_names_list_free ([CTypeDetails ("Pointer<snd_devname_t>")]System.IntPtr @list);

	// function snd_pcm_open - pcm.h (470, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_open ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, snd_pcm_stream_t @stream, int @mode);

	// function snd_pcm_open_lconf - pcm.h (472, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_open_lconf ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, snd_pcm_stream_t @stream, int @mode, [CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @lconf);

	// function snd_pcm_open_fallback - pcm.h (475, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_open_fallback ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @root, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, [CTypeDetails ("Pointer<byte>")]System.IntPtr @orig_name, snd_pcm_stream_t @stream, int @mode);

	// function snd_pcm_close - pcm.h (479, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_close ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_name - pcm.h (480, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_name ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_type - pcm.h (481, 16)
	[DllImport (LibraryName)]
	internal static extern snd_pcm_type_t snd_pcm_type ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_stream_t - pcm.h (482, 18)
	[DllImport (LibraryName)]
	internal static extern snd_pcm_stream_t snd_pcm_stream_t ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_poll_descriptors_count - pcm.h (483, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_poll_descriptors_count ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_poll_descriptors - pcm.h (484, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_poll_descriptors ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<pollfd>")]System.IntPtr @pfds, uint @space);

	// function snd_pcm_poll_descriptors_revents - pcm.h (485, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_poll_descriptors_revents ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<pollfd>")]System.IntPtr @pfds, uint @nfds, [CTypeDetails ("Pointer<ushort>")]System.IntPtr @revents);

	// function snd_pcm_nonblock - pcm.h (486, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_nonblock ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, int @nonblock);

	// function snd_pcm_abort - pcm.h (487, 23)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_abort ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_async_add_pcm_handler - pcm.h (488, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_async_add_pcm_handler ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @handler, [CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, snd_async_callback_t @callback, [CTypeDetails ("Pointer<void>")]System.IntPtr @private_data);

	// function snd_async_handler_get_pcm - pcm.h (490, 12)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_async_handler_get_pcm ([CTypeDetails ("Pointer<snd_async_handler_t>")]System.IntPtr @handler);

	// function snd_pcm_info - pcm.h (491, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_info ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @info);

	// function snd_pcm_hw_params_current - pcm.h (492, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_current ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params - pcm.h (493, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_free - pcm.h (494, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_free ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_sw_params_current - pcm.h (495, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_current ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params);

	// function snd_pcm_sw_params - pcm.h (496, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params);

	// function snd_pcm_prepare - pcm.h (497, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_prepare ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_reset - pcm.h (498, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_reset ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_status - pcm.h (499, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_status ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_status_t>")]System.IntPtr @status);

	// function snd_pcm_start_t - pcm.h (500, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_start_t ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_drop - pcm.h (501, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_drop ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_drain - pcm.h (502, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_drain ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_pause - pcm.h (503, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_pause ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, int @enable);

	// function snd_pcm_state_t - pcm.h (504, 17)
	[DllImport (LibraryName)]
	internal static extern snd_pcm_state_t snd_pcm_state_t ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_hwsync - pcm.h (505, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hwsync ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_delay - pcm.h (506, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_delay ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<long>")]System.IntPtr @delayp);

	// function snd_pcm_resume - pcm.h (507, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_resume ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_htimestamp - pcm.h (508, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_htimestamp ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @avail, [CTypeDetails ("Pointer<snd_htimestamp_t>")]System.IntPtr @tstamp);

	// function snd_pcm_avail - pcm.h (509, 19)
	[DllImport (LibraryName)]
	internal static extern long snd_pcm_avail ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_avail_update - pcm.h (510, 19)
	[DllImport (LibraryName)]
	internal static extern long snd_pcm_avail_update ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_avail_delay - pcm.h (511, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_avail_delay ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<long>")]System.IntPtr @availp, [CTypeDetails ("Pointer<long>")]System.IntPtr @delayp);

	// function snd_pcm_rewindable - pcm.h (512, 19)
	[DllImport (LibraryName)]
	internal static extern long snd_pcm_rewindable ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_rewind - pcm.h (513, 19)
	[DllImport (LibraryName)]
	internal static extern long snd_pcm_rewind ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, ulong @frames);

	// function snd_pcm_forwardable - pcm.h (514, 19)
	[DllImport (LibraryName)]
	internal static extern long snd_pcm_forwardable ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_forward - pcm.h (515, 19)
	[DllImport (LibraryName)]
	internal static extern long snd_pcm_forward ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, ulong @frames);

	// function snd_pcm_writei - pcm.h (516, 19)
	[DllImport (LibraryName)]
	internal static extern long snd_pcm_writei ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<void>")]System.IntPtr @buffer, ulong @size);

	// function snd_pcm_readi - pcm.h (517, 19)
	[DllImport (LibraryName)]
	internal static extern long snd_pcm_readi ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<void>")]System.IntPtr @buffer, ulong @size);

	// function snd_pcm_writen - pcm.h (518, 19)
	[DllImport (LibraryName)]
	internal static extern long snd_pcm_writen ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @bufs, ulong @size);

	// function snd_pcm_readn - pcm.h (519, 19)
	[DllImport (LibraryName)]
	internal static extern long snd_pcm_readn ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @bufs, ulong @size);

	// function snd_pcm_wait - pcm.h (520, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_wait ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, int @timeout);

	// function snd_pcm_link - pcm.h (522, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_link ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm1, [CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm2);

	// function snd_pcm_unlink - pcm.h (523, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_unlink ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_query_chmaps - pcm.h (600, 25)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_query_chmaps ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_query_chmaps_from_hw - pcm.h (601, 25)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_query_chmaps_from_hw (int @card, int @dev, int @subdev, snd_pcm_stream_t @stream);

	// function snd_pcm_free_chmaps - pcm.h (604, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_free_chmaps ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @maps);

	// function snd_pcm_get_chmap - pcm.h (605, 18)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_get_chmap ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_set_chmap - pcm.h (606, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_set_chmap ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_chmap_t>")]System.IntPtr @map);

	// function snd_pcm_chmap_type_name - pcm.h (608, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_chmap_type_name (snd_pcm_chmap_type @val);

	// function snd_pcm_chmap_name - pcm.h (609, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_chmap_name (snd_pcm_chmap_position @val);

	// function snd_pcm_chmap_long_name - pcm.h (610, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_chmap_long_name (snd_pcm_chmap_position @val);

	// function snd_pcm_chmap_print - pcm.h (611, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_chmap_print ([CTypeDetails ("Pointer<snd_pcm_chmap_t>")]System.IntPtr @map, uint @maxlen, [CTypeDetails ("Pointer<byte>")]System.IntPtr @buf);

	// function snd_pcm_chmap_from_string - pcm.h (612, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_pcm_chmap_from_string ([CTypeDetails ("Pointer<byte>")]System.IntPtr @str);

	// function snd_pcm_chmap_parse_string - pcm.h (613, 18)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_chmap_parse_string ([CTypeDetails ("Pointer<byte>")]System.IntPtr @str);

	// function snd_pcm_recover - pcm.h (622, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_recover ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, int @err, int @silent);

	// function snd_pcm_set_params - pcm.h (623, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_set_params ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, snd_pcm_format_t @format, snd_pcm_access_t @access, uint @channels, uint @rate, int @soft_resample, uint @latency);

	// function snd_pcm_get_params - pcm.h (630, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_get_params ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @buffer_size, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @period_size);

	// function snd_pcm_info_sizeof - pcm.h (643, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_pcm_info_sizeof ();

	// function snd_pcm_info_malloc - pcm.h (649, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_info_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_pcm_info_free - pcm.h (650, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_info_free ([CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @obj);

	// function snd_pcm_info_copy - pcm.h (651, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_info_copy ([CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @src);

	// function snd_pcm_info_get_device - pcm.h (652, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_pcm_info_get_device ([CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @obj);

	// function snd_pcm_info_get_subdevice - pcm.h (653, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_pcm_info_get_subdevice ([CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @obj);

	// function snd_pcm_info_get_stream - pcm.h (654, 18)
	[DllImport (LibraryName)]
	internal static extern snd_pcm_stream_t snd_pcm_info_get_stream ([CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @obj);

	// function snd_pcm_info_get_card - pcm.h (655, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_info_get_card ([CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @obj);

	// function snd_pcm_info_get_id - pcm.h (656, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_info_get_id ([CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @obj);

	// function snd_pcm_info_get_name - pcm.h (657, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_info_get_name ([CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @obj);

	// function snd_pcm_info_get_subdevice_name - pcm.h (658, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_info_get_subdevice_name ([CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @obj);

	// function snd_pcm_info_get_class - pcm.h (659, 17)
	[DllImport (LibraryName)]
	internal static extern snd_pcm_class_t snd_pcm_info_get_class ([CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @obj);

	// function snd_pcm_info_get_subclass - pcm.h (660, 20)
	[DllImport (LibraryName)]
	internal static extern snd_pcm_subclass_t snd_pcm_info_get_subclass ([CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @obj);

	// function snd_pcm_info_get_subdevices_count - pcm.h (661, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_pcm_info_get_subdevices_count ([CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @obj);

	// function snd_pcm_info_get_subdevices_avail - pcm.h (662, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_pcm_info_get_subdevices_avail ([CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @obj);

	// function snd_pcm_info_get_sync - pcm.h (663, 19)
	[DllImport (LibraryName)]
	internal static extern snd_pcm_sync_id_t snd_pcm_info_get_sync ([CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @obj);

	// function snd_pcm_info_set_device - pcm.h (664, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_info_set_device ([CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @obj, uint @val);

	// function snd_pcm_info_set_subdevice - pcm.h (665, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_info_set_subdevice ([CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @obj, uint @val);

	// function snd_pcm_info_set_stream - pcm.h (666, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_info_set_stream ([CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @obj, snd_pcm_stream_t @val);

	// function snd_pcm_hw_params_any - pcm.h (677, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_any ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params_can_mmap_sample_resolution - pcm.h (679, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_can_mmap_sample_resolution ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params_is_double - pcm.h (680, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_is_double ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params_is_batch - pcm.h (681, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_is_batch ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params_is_block_transfer - pcm.h (682, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_is_block_transfer ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params_is_monotonic - pcm.h (683, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_is_monotonic ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params_can_overrange - pcm.h (684, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_can_overrange ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params_can_pause - pcm.h (685, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_can_pause ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params_can_resume - pcm.h (686, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_can_resume ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params_is_half_duplex - pcm.h (687, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_is_half_duplex ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params_is_joint_duplex - pcm.h (688, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_is_joint_duplex ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params_can_sync_start - pcm.h (689, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_can_sync_start ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params_can_disable_period_wakeup - pcm.h (690, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_can_disable_period_wakeup ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params_supports_audio_wallclock_ts - pcm.h (691, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_supports_audio_wallclock_ts ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params_supports_audio_ts_type - pcm.h (692, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_supports_audio_ts_type ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, int @type);

	// function snd_pcm_hw_params_get_rate_numden - pcm.h (693, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_rate_numden ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @rate_num, [CTypeDetails ("Pointer<uint>")]System.IntPtr @rate_den);

	// function snd_pcm_hw_params_get_sbits - pcm.h (696, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_sbits ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params_get_fifo_size - pcm.h (697, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_fifo_size ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params_sizeof - pcm.h (725, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_pcm_hw_params_sizeof ();

	// function snd_pcm_hw_params_malloc - pcm.h (731, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_pcm_hw_params_free - pcm.h (732, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_hw_params_free ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @obj);

	// function snd_pcm_hw_params_copy - pcm.h (733, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_hw_params_copy ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @src);

	// function snd_pcm_hw_params_get_access - pcm.h (737, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_access ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_pcm_access_t>")]System.IntPtr @_access);

	// function snd_pcm_hw_params_test_access - pcm.h (738, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_test_access ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, snd_pcm_access_t @_access);

	// function snd_pcm_hw_params_set_access - pcm.h (739, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_access ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, snd_pcm_access_t @_access);

	// function snd_pcm_hw_params_set_access_first - pcm.h (740, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_access_first ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_pcm_access_t>")]System.IntPtr @_access);

	// function snd_pcm_hw_params_set_access_last - pcm.h (741, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_access_last ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_pcm_access_t>")]System.IntPtr @_access);

	// function snd_pcm_hw_params_set_access_mask - pcm.h (742, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_access_mask ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_pcm_access_mask_t>")]System.IntPtr @mask);

	// function snd_pcm_hw_params_get_access_mask - pcm.h (743, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_access_mask ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_pcm_access_mask_t>")]System.IntPtr @mask);

	// function snd_pcm_hw_params_get_format - pcm.h (745, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_format ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_pcm_format_t>")]System.IntPtr @val);

	// function snd_pcm_hw_params_test_format - pcm.h (746, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_test_format ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, snd_pcm_format_t @val);

	// function snd_pcm_hw_params_set_format - pcm.h (747, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_format ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, snd_pcm_format_t @val);

	// function snd_pcm_hw_params_set_format_first - pcm.h (748, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_format_first ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_pcm_format_t>")]System.IntPtr @format);

	// function snd_pcm_hw_params_set_format_last - pcm.h (749, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_format_last ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_pcm_format_t>")]System.IntPtr @format);

	// function snd_pcm_hw_params_set_format_mask - pcm.h (750, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_format_mask ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_pcm_format_mask_t>")]System.IntPtr @mask);

	// function snd_pcm_hw_params_get_format_mask - pcm.h (751, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_hw_params_get_format_mask ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_pcm_format_mask_t>")]System.IntPtr @mask);

	// function snd_pcm_hw_params_get_subformat - pcm.h (753, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_subformat ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_pcm_subformat_t>")]System.IntPtr @subformat);

	// function snd_pcm_hw_params_test_subformat - pcm.h (754, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_test_subformat ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, snd_pcm_subformat_t @subformat);

	// function snd_pcm_hw_params_set_subformat - pcm.h (755, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_subformat ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, snd_pcm_subformat_t @subformat);

	// function snd_pcm_hw_params_set_subformat_first - pcm.h (756, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_subformat_first ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_pcm_subformat_t>")]System.IntPtr @subformat);

	// function snd_pcm_hw_params_set_subformat_last - pcm.h (757, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_subformat_last ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_pcm_subformat_t>")]System.IntPtr @subformat);

	// function snd_pcm_hw_params_set_subformat_mask - pcm.h (758, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_subformat_mask ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_pcm_subformat_mask_t>")]System.IntPtr @mask);

	// function snd_pcm_hw_params_get_subformat_mask - pcm.h (759, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_hw_params_get_subformat_mask ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_pcm_subformat_mask_t>")]System.IntPtr @mask);

	// function snd_pcm_hw_params_get_channels - pcm.h (761, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_channels ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val);

	// function snd_pcm_hw_params_get_channels_min - pcm.h (762, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_channels_min ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val);

	// function snd_pcm_hw_params_get_channels_max - pcm.h (763, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_channels_max ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val);

	// function snd_pcm_hw_params_test_channels - pcm.h (764, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_test_channels ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, uint @val);

	// function snd_pcm_hw_params_set_channels - pcm.h (765, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_channels ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, uint @val);

	// function snd_pcm_hw_params_set_channels_min - pcm.h (766, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_channels_min ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val);

	// function snd_pcm_hw_params_set_channels_max - pcm.h (767, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_channels_max ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val);

	// function snd_pcm_hw_params_set_channels_minmax - pcm.h (768, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_channels_minmax ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @min, [CTypeDetails ("Pointer<uint>")]System.IntPtr @max);

	// function snd_pcm_hw_params_set_channels_near - pcm.h (769, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_channels_near ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val);

	// function snd_pcm_hw_params_set_channels_first - pcm.h (770, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_channels_first ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val);

	// function snd_pcm_hw_params_set_channels_last - pcm.h (771, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_channels_last ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val);

	// function snd_pcm_hw_params_get_rate - pcm.h (773, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_rate ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_get_rate_min - pcm.h (774, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_rate_min ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_get_rate_max - pcm.h (775, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_rate_max ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_test_rate - pcm.h (776, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_test_rate ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, uint @val, int @dir);

	// function snd_pcm_hw_params_set_rate - pcm.h (777, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_rate ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, uint @val, int @dir);

	// function snd_pcm_hw_params_set_rate_min - pcm.h (778, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_rate_min ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_rate_max - pcm.h (779, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_rate_max ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_rate_minmax - pcm.h (780, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_rate_minmax ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @min, [CTypeDetails ("Pointer<int>")]System.IntPtr @mindir, [CTypeDetails ("Pointer<uint>")]System.IntPtr @max, [CTypeDetails ("Pointer<int>")]System.IntPtr @maxdir);

	// function snd_pcm_hw_params_set_rate_near - pcm.h (781, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_rate_near ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_rate_first - pcm.h (782, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_rate_first ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_rate_last - pcm.h (783, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_rate_last ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_rate_resample - pcm.h (784, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_rate_resample ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, uint @val);

	// function snd_pcm_hw_params_get_rate_resample - pcm.h (785, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_rate_resample ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val);

	// function snd_pcm_hw_params_set_export_buffer - pcm.h (786, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_export_buffer ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, uint @val);

	// function snd_pcm_hw_params_get_export_buffer - pcm.h (787, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_export_buffer ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val);

	// function snd_pcm_hw_params_set_period_wakeup - pcm.h (788, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_period_wakeup ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, uint @val);

	// function snd_pcm_hw_params_get_period_wakeup - pcm.h (789, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_period_wakeup ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val);

	// function snd_pcm_hw_params_get_period_time - pcm.h (791, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_period_time ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_get_period_time_min - pcm.h (792, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_period_time_min ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_get_period_time_max - pcm.h (793, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_period_time_max ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_test_period_time - pcm.h (794, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_test_period_time ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, uint @val, int @dir);

	// function snd_pcm_hw_params_set_period_time - pcm.h (795, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_period_time ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, uint @val, int @dir);

	// function snd_pcm_hw_params_set_period_time_min - pcm.h (796, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_period_time_min ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_period_time_max - pcm.h (797, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_period_time_max ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_period_time_minmax - pcm.h (798, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_period_time_minmax ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @min, [CTypeDetails ("Pointer<int>")]System.IntPtr @mindir, [CTypeDetails ("Pointer<uint>")]System.IntPtr @max, [CTypeDetails ("Pointer<int>")]System.IntPtr @maxdir);

	// function snd_pcm_hw_params_set_period_time_near - pcm.h (799, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_period_time_near ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_period_time_first - pcm.h (800, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_period_time_first ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_period_time_last - pcm.h (801, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_period_time_last ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_get_period_size - pcm.h (803, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_period_size ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @frames, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_get_period_size_min - pcm.h (804, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_period_size_min ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @frames, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_get_period_size_max - pcm.h (805, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_period_size_max ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @frames, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_test_period_size - pcm.h (806, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_test_period_size ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, ulong @val, int @dir);

	// function snd_pcm_hw_params_set_period_size - pcm.h (807, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_period_size ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, ulong @val, int @dir);

	// function snd_pcm_hw_params_set_period_size_min - pcm.h (808, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_period_size_min ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_period_size_max - pcm.h (809, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_period_size_max ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_period_size_minmax - pcm.h (810, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_period_size_minmax ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @min, [CTypeDetails ("Pointer<int>")]System.IntPtr @mindir, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @max, [CTypeDetails ("Pointer<int>")]System.IntPtr @maxdir);

	// function snd_pcm_hw_params_set_period_size_near - pcm.h (811, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_period_size_near ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_period_size_first - pcm.h (812, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_period_size_first ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_period_size_last - pcm.h (813, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_period_size_last ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_period_size_integer - pcm.h (814, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_period_size_integer ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params_get_periods - pcm.h (816, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_periods ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_get_periods_min - pcm.h (817, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_periods_min ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_get_periods_max - pcm.h (818, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_periods_max ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_test_periods - pcm.h (819, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_test_periods ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, uint @val, int @dir);

	// function snd_pcm_hw_params_set_periods - pcm.h (820, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_periods ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, uint @val, int @dir);

	// function snd_pcm_hw_params_set_periods_min - pcm.h (821, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_periods_min ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_periods_max - pcm.h (822, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_periods_max ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_periods_minmax - pcm.h (823, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_periods_minmax ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @min, [CTypeDetails ("Pointer<int>")]System.IntPtr @mindir, [CTypeDetails ("Pointer<uint>")]System.IntPtr @max, [CTypeDetails ("Pointer<int>")]System.IntPtr @maxdir);

	// function snd_pcm_hw_params_set_periods_near - pcm.h (824, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_periods_near ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_periods_first - pcm.h (825, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_periods_first ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_periods_last - pcm.h (826, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_periods_last ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_periods_integer - pcm.h (827, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_periods_integer ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params);

	// function snd_pcm_hw_params_get_buffer_time - pcm.h (829, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_buffer_time ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_get_buffer_time_min - pcm.h (830, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_buffer_time_min ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_get_buffer_time_max - pcm.h (831, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_buffer_time_max ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_test_buffer_time - pcm.h (832, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_test_buffer_time ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, uint @val, int @dir);

	// function snd_pcm_hw_params_set_buffer_time - pcm.h (833, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_buffer_time ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, uint @val, int @dir);

	// function snd_pcm_hw_params_set_buffer_time_min - pcm.h (834, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_buffer_time_min ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_buffer_time_max - pcm.h (835, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_buffer_time_max ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_buffer_time_minmax - pcm.h (836, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_buffer_time_minmax ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @min, [CTypeDetails ("Pointer<int>")]System.IntPtr @mindir, [CTypeDetails ("Pointer<uint>")]System.IntPtr @max, [CTypeDetails ("Pointer<int>")]System.IntPtr @maxdir);

	// function snd_pcm_hw_params_set_buffer_time_near - pcm.h (837, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_buffer_time_near ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_buffer_time_first - pcm.h (838, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_buffer_time_first ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_buffer_time_last - pcm.h (839, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_buffer_time_last ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_get_buffer_size - pcm.h (841, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_buffer_size ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val);

	// function snd_pcm_hw_params_get_buffer_size_min - pcm.h (842, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_buffer_size_min ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val);

	// function snd_pcm_hw_params_get_buffer_size_max - pcm.h (843, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_buffer_size_max ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val);

	// function snd_pcm_hw_params_test_buffer_size - pcm.h (844, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_test_buffer_size ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, ulong @val);

	// function snd_pcm_hw_params_set_buffer_size - pcm.h (845, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_buffer_size ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, ulong @val);

	// function snd_pcm_hw_params_set_buffer_size_min - pcm.h (846, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_buffer_size_min ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val);

	// function snd_pcm_hw_params_set_buffer_size_max - pcm.h (847, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_buffer_size_max ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val);

	// function snd_pcm_hw_params_set_buffer_size_minmax - pcm.h (848, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_buffer_size_minmax ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @min, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @max);

	// function snd_pcm_hw_params_set_buffer_size_near - pcm.h (849, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_buffer_size_near ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val);

	// function snd_pcm_hw_params_set_buffer_size_first - pcm.h (850, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_buffer_size_first ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val);

	// function snd_pcm_hw_params_set_buffer_size_last - pcm.h (851, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_buffer_size_last ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val);

	// function snd_pcm_hw_params_get_min_align - pcm.h (855, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_min_align ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val);

	// function snd_pcm_sw_params_sizeof - pcm.h (866, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_pcm_sw_params_sizeof ();

	// function snd_pcm_sw_params_malloc - pcm.h (872, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_pcm_sw_params_free - pcm.h (873, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_sw_params_free ([CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @obj);

	// function snd_pcm_sw_params_copy - pcm.h (874, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_sw_params_copy ([CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @src);

	// function snd_pcm_sw_params_get_boundary - pcm.h (875, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_get_boundary ([CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val);

	// function snd_pcm_sw_params_set_tstamp_mode - pcm.h (879, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_set_tstamp_mode ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, snd_pcm_tstamp_t @val);

	// function snd_pcm_sw_params_get_tstamp_mode - pcm.h (880, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_get_tstamp_mode ([CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_pcm_tstamp_t>")]System.IntPtr @val);

	// function snd_pcm_sw_params_set_tstamp_type - pcm.h (881, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_set_tstamp_type ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, snd_pcm_tstamp_type_t @val);

	// function snd_pcm_sw_params_get_tstamp_type - pcm.h (882, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_get_tstamp_type ([CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_pcm_tstamp_type_t>")]System.IntPtr @val);

	// function snd_pcm_sw_params_set_avail_min - pcm.h (883, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_set_avail_min ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, ulong @val);

	// function snd_pcm_sw_params_get_avail_min - pcm.h (884, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_get_avail_min ([CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val);

	// function snd_pcm_sw_params_set_period_event - pcm.h (885, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_set_period_event ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, int @val);

	// function snd_pcm_sw_params_get_period_event - pcm.h (886, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_get_period_event ([CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<int>")]System.IntPtr @val);

	// function snd_pcm_sw_params_set_start_threshold - pcm.h (887, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_set_start_threshold ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, ulong @val);

	// function snd_pcm_sw_params_get_start_threshold - pcm.h (888, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_get_start_threshold ([CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @paramsm, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val);

	// function snd_pcm_sw_params_set_stop_threshold - pcm.h (889, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_set_stop_threshold ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, ulong @val);

	// function snd_pcm_sw_params_get_stop_threshold - pcm.h (890, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_get_stop_threshold ([CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val);

	// function snd_pcm_sw_params_set_silence_threshold - pcm.h (891, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_set_silence_threshold ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, ulong @val);

	// function snd_pcm_sw_params_get_silence_threshold - pcm.h (892, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_get_silence_threshold ([CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val);

	// function snd_pcm_sw_params_set_silence_size - pcm.h (893, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_set_silence_size ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, ulong @val);

	// function snd_pcm_sw_params_get_silence_size - pcm.h (894, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_get_silence_size ([CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val);

	// function snd_pcm_access_mask_sizeof - pcm.h (914, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_pcm_access_mask_sizeof ();

	// function snd_pcm_access_mask_malloc - pcm.h (920, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_access_mask_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_pcm_access_mask_free - pcm.h (921, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_access_mask_free ([CTypeDetails ("Pointer<snd_pcm_access_mask_t>")]System.IntPtr @obj);

	// function snd_pcm_access_mask_copy - pcm.h (922, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_access_mask_copy ([CTypeDetails ("Pointer<snd_pcm_access_mask_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_pcm_access_mask_t>")]System.IntPtr @src);

	// function snd_pcm_access_mask_none - pcm.h (923, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_access_mask_none ([CTypeDetails ("Pointer<snd_pcm_access_mask_t>")]System.IntPtr @mask);

	// function snd_pcm_access_mask_any - pcm.h (924, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_access_mask_any ([CTypeDetails ("Pointer<snd_pcm_access_mask_t>")]System.IntPtr @mask);

	// function snd_pcm_access_mask_test - pcm.h (925, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_access_mask_test ([CTypeDetails ("Pointer<snd_pcm_access_mask_t>")]System.IntPtr @mask, snd_pcm_access_t @val);

	// function snd_pcm_access_mask_empty - pcm.h (926, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_access_mask_empty ([CTypeDetails ("Pointer<snd_pcm_access_mask_t>")]System.IntPtr @mask);

	// function snd_pcm_access_mask_set - pcm.h (927, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_access_mask_set ([CTypeDetails ("Pointer<snd_pcm_access_mask_t>")]System.IntPtr @mask, snd_pcm_access_t @val);

	// function snd_pcm_access_mask_reset - pcm.h (928, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_access_mask_reset ([CTypeDetails ("Pointer<snd_pcm_access_mask_t>")]System.IntPtr @mask, snd_pcm_access_t @val);

	// function snd_pcm_format_mask_sizeof - pcm.h (939, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_pcm_format_mask_sizeof ();

	// function snd_pcm_format_mask_malloc - pcm.h (945, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_format_mask_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_pcm_format_mask_free - pcm.h (946, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_format_mask_free ([CTypeDetails ("Pointer<snd_pcm_format_mask_t>")]System.IntPtr @obj);

	// function snd_pcm_format_mask_copy - pcm.h (947, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_format_mask_copy ([CTypeDetails ("Pointer<snd_pcm_format_mask_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_pcm_format_mask_t>")]System.IntPtr @src);

	// function snd_pcm_format_mask_none - pcm.h (948, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_format_mask_none ([CTypeDetails ("Pointer<snd_pcm_format_mask_t>")]System.IntPtr @mask);

	// function snd_pcm_format_mask_any - pcm.h (949, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_format_mask_any ([CTypeDetails ("Pointer<snd_pcm_format_mask_t>")]System.IntPtr @mask);

	// function snd_pcm_format_mask_test - pcm.h (950, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_format_mask_test ([CTypeDetails ("Pointer<snd_pcm_format_mask_t>")]System.IntPtr @mask, snd_pcm_format_t @val);

	// function snd_pcm_format_mask_empty - pcm.h (951, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_format_mask_empty ([CTypeDetails ("Pointer<snd_pcm_format_mask_t>")]System.IntPtr @mask);

	// function snd_pcm_format_mask_set - pcm.h (952, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_format_mask_set ([CTypeDetails ("Pointer<snd_pcm_format_mask_t>")]System.IntPtr @mask, snd_pcm_format_t @val);

	// function snd_pcm_format_mask_reset - pcm.h (953, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_format_mask_reset ([CTypeDetails ("Pointer<snd_pcm_format_mask_t>")]System.IntPtr @mask, snd_pcm_format_t @val);

	// function snd_pcm_subformat_mask_sizeof - pcm.h (964, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_pcm_subformat_mask_sizeof ();

	// function snd_pcm_subformat_mask_malloc - pcm.h (970, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_subformat_mask_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_pcm_subformat_mask_free - pcm.h (971, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_subformat_mask_free ([CTypeDetails ("Pointer<snd_pcm_subformat_mask_t>")]System.IntPtr @obj);

	// function snd_pcm_subformat_mask_copy - pcm.h (972, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_subformat_mask_copy ([CTypeDetails ("Pointer<snd_pcm_subformat_mask_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_pcm_subformat_mask_t>")]System.IntPtr @src);

	// function snd_pcm_subformat_mask_none - pcm.h (973, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_subformat_mask_none ([CTypeDetails ("Pointer<snd_pcm_subformat_mask_t>")]System.IntPtr @mask);

	// function snd_pcm_subformat_mask_any - pcm.h (974, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_subformat_mask_any ([CTypeDetails ("Pointer<snd_pcm_subformat_mask_t>")]System.IntPtr @mask);

	// function snd_pcm_subformat_mask_test - pcm.h (975, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_subformat_mask_test ([CTypeDetails ("Pointer<snd_pcm_subformat_mask_t>")]System.IntPtr @mask, snd_pcm_subformat_t @val);

	// function snd_pcm_subformat_mask_empty - pcm.h (976, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_subformat_mask_empty ([CTypeDetails ("Pointer<snd_pcm_subformat_mask_t>")]System.IntPtr @mask);

	// function snd_pcm_subformat_mask_set - pcm.h (977, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_subformat_mask_set ([CTypeDetails ("Pointer<snd_pcm_subformat_mask_t>")]System.IntPtr @mask, snd_pcm_subformat_t @val);

	// function snd_pcm_subformat_mask_reset - pcm.h (978, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_subformat_mask_reset ([CTypeDetails ("Pointer<snd_pcm_subformat_mask_t>")]System.IntPtr @mask, snd_pcm_subformat_t @val);

	// function snd_pcm_status_sizeof - pcm.h (989, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_pcm_status_sizeof ();

	// function snd_pcm_status_malloc - pcm.h (995, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_status_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_pcm_status_free - pcm.h (996, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_status_free ([CTypeDetails ("Pointer<snd_pcm_status_t>")]System.IntPtr @obj);

	// function snd_pcm_status_copy - pcm.h (997, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_status_copy ([CTypeDetails ("Pointer<snd_pcm_status_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_pcm_status_t>")]System.IntPtr @src);

	// function snd_pcm_status_get_state - pcm.h (998, 17)
	[DllImport (LibraryName)]
	internal static extern snd_pcm_state_t snd_pcm_status_get_state ([CTypeDetails ("Pointer<snd_pcm_status_t>")]System.IntPtr @obj);

	// function snd_pcm_status_get_trigger_tstamp - pcm.h (999, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_status_get_trigger_tstamp ([CTypeDetails ("Pointer<snd_pcm_status_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<snd_timestamp_t>")]System.IntPtr @ptr);

	// function snd_pcm_status_get_trigger_htstamp - pcm.h (1000, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_status_get_trigger_htstamp ([CTypeDetails ("Pointer<snd_pcm_status_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<snd_htimestamp_t>")]System.IntPtr @ptr);

	// function snd_pcm_status_get_tstamp - pcm.h (1001, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_status_get_tstamp ([CTypeDetails ("Pointer<snd_pcm_status_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<snd_timestamp_t>")]System.IntPtr @ptr);

	// function snd_pcm_status_get_htstamp - pcm.h (1002, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_status_get_htstamp ([CTypeDetails ("Pointer<snd_pcm_status_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<snd_htimestamp_t>")]System.IntPtr @ptr);

	// function snd_pcm_status_get_audio_htstamp - pcm.h (1003, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_status_get_audio_htstamp ([CTypeDetails ("Pointer<snd_pcm_status_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<snd_htimestamp_t>")]System.IntPtr @ptr);

	// function snd_pcm_status_get_driver_htstamp - pcm.h (1004, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_status_get_driver_htstamp ([CTypeDetails ("Pointer<snd_pcm_status_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<snd_htimestamp_t>")]System.IntPtr @ptr);

	// function snd_pcm_status_get_audio_htstamp_report - pcm.h (1005, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_status_get_audio_htstamp_report ([CTypeDetails ("Pointer<snd_pcm_status_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<snd_pcm_audio_tstamp_report_t>")]System.IntPtr @audio_tstamp_report);

	// function snd_pcm_status_set_audio_htstamp_config - pcm.h (1007, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_status_set_audio_htstamp_config ([CTypeDetails ("Pointer<snd_pcm_status_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<snd_pcm_audio_tstamp_config_t>")]System.IntPtr @audio_tstamp_config);

	// function snd_pcm_pack_audio_tstamp_config - pcm.h (1010, 20)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_pack_audio_tstamp_config ([CTypeDetails ("Pointer<uint>")]System.IntPtr @data, [CTypeDetails ("Pointer<snd_pcm_audio_tstamp_config_t>")]System.IntPtr @config);

	// function snd_pcm_unpack_audio_tstamp_report - pcm.h (1018, 20)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_unpack_audio_tstamp_report (uint @data, uint @accuracy, [CTypeDetails ("Pointer<snd_pcm_audio_tstamp_report_t>")]System.IntPtr @report);

	// function snd_pcm_status_get_delay - pcm.h (1028, 19)
	[DllImport (LibraryName)]
	internal static extern long snd_pcm_status_get_delay ([CTypeDetails ("Pointer<snd_pcm_status_t>")]System.IntPtr @obj);

	// function snd_pcm_status_get_avail - pcm.h (1029, 19)
	[DllImport (LibraryName)]
	internal static extern ulong snd_pcm_status_get_avail ([CTypeDetails ("Pointer<snd_pcm_status_t>")]System.IntPtr @obj);

	// function snd_pcm_status_get_avail_max - pcm.h (1030, 19)
	[DllImport (LibraryName)]
	internal static extern ulong snd_pcm_status_get_avail_max ([CTypeDetails ("Pointer<snd_pcm_status_t>")]System.IntPtr @obj);

	// function snd_pcm_status_get_overrange - pcm.h (1031, 19)
	[DllImport (LibraryName)]
	internal static extern ulong snd_pcm_status_get_overrange ([CTypeDetails ("Pointer<snd_pcm_status_t>")]System.IntPtr @obj);

	// function snd_pcm_type_name - pcm.h (1042, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_type_name (snd_pcm_type_t @type);

	// function snd_pcm_stream_name - pcm.h (1043, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_stream_name (snd_pcm_stream_t @stream);

	// function snd_pcm_access_name - pcm.h (1044, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_access_name (snd_pcm_access_t @_access);

	// function snd_pcm_format_name - pcm.h (1045, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_format_name (snd_pcm_format_t @format);

	// function snd_pcm_format_description - pcm.h (1046, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_format_description (snd_pcm_format_t @format);

	// function snd_pcm_subformat_name - pcm.h (1047, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_subformat_name (snd_pcm_subformat_t @subformat);

	// function snd_pcm_subformat_description - pcm.h (1048, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_subformat_description (snd_pcm_subformat_t @subformat);

	// function snd_pcm_format_value - pcm.h (1049, 18)
	[DllImport (LibraryName)]
	internal static extern snd_pcm_format_t snd_pcm_format_value ([CTypeDetails ("Pointer<byte>")]System.IntPtr @name);

	// function snd_pcm_tstamp_mode_name - pcm.h (1050, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_tstamp_mode_name (snd_pcm_tstamp_t @mode);

	// function snd_pcm_state_name - pcm.h (1051, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_state_name (snd_pcm_state_t @state);

	// function snd_pcm_dump - pcm.h (1062, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_dump ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_output_t>")]System.IntPtr @out);

	// function snd_pcm_dump_hw_setup - pcm.h (1063, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_dump_hw_setup ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_output_t>")]System.IntPtr @out);

	// function snd_pcm_dump_sw_setup - pcm.h (1064, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_dump_sw_setup ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_output_t>")]System.IntPtr @out);

	// function snd_pcm_dump_setup - pcm.h (1065, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_dump_setup ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_output_t>")]System.IntPtr @out);

	// function snd_pcm_hw_params_dump - pcm.h (1066, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_dump ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_output_t>")]System.IntPtr @out);

	// function snd_pcm_sw_params_dump - pcm.h (1067, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_dump ([CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<snd_output_t>")]System.IntPtr @out);

	// function snd_pcm_status_dump - pcm.h (1068, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_status_dump ([CTypeDetails ("Pointer<snd_pcm_status_t>")]System.IntPtr @status, [CTypeDetails ("Pointer<snd_output_t>")]System.IntPtr @out);

	// function snd_pcm_mmap_begin - pcm.h (1079, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_mmap_begin ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @areas, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @offset, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @frames);

	// function snd_pcm_mmap_commit - pcm.h (1083, 19)
	[DllImport (LibraryName)]
	internal static extern long snd_pcm_mmap_commit ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, ulong @offset, ulong @frames);

	// function snd_pcm_mmap_writei - pcm.h (1086, 19)
	[DllImport (LibraryName)]
	internal static extern long snd_pcm_mmap_writei ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<void>")]System.IntPtr @buffer, ulong @size);

	// function snd_pcm_mmap_readi - pcm.h (1087, 19)
	[DllImport (LibraryName)]
	internal static extern long snd_pcm_mmap_readi ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<void>")]System.IntPtr @buffer, ulong @size);

	// function snd_pcm_mmap_writen - pcm.h (1088, 19)
	[DllImport (LibraryName)]
	internal static extern long snd_pcm_mmap_writen ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @bufs, ulong @size);

	// function snd_pcm_mmap_readn - pcm.h (1089, 19)
	[DllImport (LibraryName)]
	internal static extern long snd_pcm_mmap_readn ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @bufs, ulong @size);

	// function snd_pcm_format_signed - pcm.h (1100, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_format_signed (snd_pcm_format_t @format);

	// function snd_pcm_format_unsigned - pcm.h (1101, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_format_unsigned (snd_pcm_format_t @format);

	// function snd_pcm_format_linear - pcm.h (1102, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_format_linear (snd_pcm_format_t @format);

	// function snd_pcm_format_float - pcm.h (1103, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_format_float (snd_pcm_format_t @format);

	// function snd_pcm_format_little_endian - pcm.h (1104, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_format_little_endian (snd_pcm_format_t @format);

	// function snd_pcm_format_big_endian - pcm.h (1105, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_format_big_endian (snd_pcm_format_t @format);

	// function snd_pcm_format_cpu_endian - pcm.h (1106, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_format_cpu_endian (snd_pcm_format_t @format);

	// function snd_pcm_format_width - pcm.h (1107, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_format_width (snd_pcm_format_t @format);

	// function snd_pcm_format_physical_width - pcm.h (1108, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_format_physical_width (snd_pcm_format_t @format);

	// function snd_pcm_build_linear_format - pcm.h (1109, 18)
	[DllImport (LibraryName)]
	internal static extern snd_pcm_format_t snd_pcm_build_linear_format (int @width, int @pwidth, int @unsignd, int @big_endian);

	// function snd_pcm_format_size - pcm.h (1110, 9)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_format_size (snd_pcm_format_t @format, uint @samples);

	// function snd_pcm_format_silence - pcm.h (1111, 10)
	[DllImport (LibraryName)]
	internal static extern byte snd_pcm_format_silence (snd_pcm_format_t @format);

	// function snd_pcm_format_silence_16 - pcm.h (1112, 11)
	[DllImport (LibraryName)]
	internal static extern ushort snd_pcm_format_silence_16 (snd_pcm_format_t @format);

	// function snd_pcm_format_silence_32 - pcm.h (1113, 11)
	[DllImport (LibraryName)]
	internal static extern uint snd_pcm_format_silence_32 (snd_pcm_format_t @format);

	// function snd_pcm_format_silence_64 - pcm.h (1114, 11)
	[DllImport (LibraryName)]
	internal static extern ulong snd_pcm_format_silence_64 (snd_pcm_format_t @format);

	// function snd_pcm_format_set_silence - pcm.h (1115, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_format_set_silence (snd_pcm_format_t @format, [CTypeDetails ("Pointer<void>")]System.IntPtr @buf, uint @samples);

	// function snd_pcm_bytes_to_frames - pcm.h (1117, 19)
	[DllImport (LibraryName)]
	internal static extern long snd_pcm_bytes_to_frames ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, int @bytes);

	// function snd_pcm_frames_to_bytes - pcm.h (1118, 9)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_frames_to_bytes ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, long @frames);

	// function snd_pcm_bytes_to_samples - pcm.h (1119, 6)
	[DllImport (LibraryName)]
	internal static extern long snd_pcm_bytes_to_samples ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, int @bytes);

	// function snd_pcm_samples_to_bytes - pcm.h (1120, 9)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_samples_to_bytes ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, long @samples);

	// function snd_pcm_area_silence - pcm.h (1122, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_area_silence ([CTypeDetails ("Pointer<snd_pcm_channel_area_t>")]System.IntPtr @dst_channel, ulong @dst_offset, uint @samples, snd_pcm_format_t @format);

	// function snd_pcm_areas_silence - pcm.h (1124, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_areas_silence ([CTypeDetails ("Pointer<snd_pcm_channel_area_t>")]System.IntPtr @dst_channels, ulong @dst_offset, uint @channels, ulong @frames, snd_pcm_format_t @format);

	// function snd_pcm_area_copy - pcm.h (1126, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_area_copy ([CTypeDetails ("Pointer<snd_pcm_channel_area_t>")]System.IntPtr @dst_channel, ulong @dst_offset, [CTypeDetails ("Pointer<snd_pcm_channel_area_t>")]System.IntPtr @src_channel, ulong @src_offset, uint @samples, snd_pcm_format_t @format);

	// function snd_pcm_areas_copy - pcm.h (1129, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_areas_copy ([CTypeDetails ("Pointer<snd_pcm_channel_area_t>")]System.IntPtr @dst_channels, ulong @dst_offset, [CTypeDetails ("Pointer<snd_pcm_channel_area_t>")]System.IntPtr @src_channels, ulong @src_offset, uint @channels, ulong @frames, snd_pcm_format_t @format);

	// function snd_pcm_hook_get_pcm - pcm.h (1154, 12)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_hook_get_pcm ([CTypeDetails ("Pointer<snd_pcm_hook_t>")]System.IntPtr @hook);

	// function snd_pcm_hook_get_private - pcm.h (1155, 7)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_hook_get_private ([CTypeDetails ("Pointer<snd_pcm_hook_t>")]System.IntPtr @hook);

	// function snd_pcm_hook_set_private - pcm.h (1156, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_hook_set_private ([CTypeDetails ("Pointer<snd_pcm_hook_t>")]System.IntPtr @hook, [CTypeDetails ("Pointer<void>")]System.IntPtr @private_data);

	// function snd_pcm_hook_add - pcm.h (1157, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hook_add ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @hookp, [CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, snd_pcm_hook_type_t @type, snd_pcm_hook_func_t @func, [CTypeDetails ("Pointer<void>")]System.IntPtr @private_data);

	// function snd_pcm_hook_remove - pcm.h (1160, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hook_remove ([CTypeDetails ("Pointer<snd_pcm_hook_t>")]System.IntPtr @hook);

	// function snd_pcm_meter_get_bufsize - pcm.h (1203, 19)
	[DllImport (LibraryName)]
	internal static extern ulong snd_pcm_meter_get_bufsize ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_meter_get_channels - pcm.h (1204, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_pcm_meter_get_channels ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_meter_get_rate - pcm.h (1205, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_pcm_meter_get_rate ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_meter_get_now - pcm.h (1206, 19)
	[DllImport (LibraryName)]
	internal static extern ulong snd_pcm_meter_get_now ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_meter_get_boundary - pcm.h (1207, 19)
	[DllImport (LibraryName)]
	internal static extern ulong snd_pcm_meter_get_boundary ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm);

	// function snd_pcm_meter_add_scope - pcm.h (1208, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_meter_add_scope ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_scope_t>")]System.IntPtr @scope);

	// function snd_pcm_meter_search_scope - pcm.h (1209, 18)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_meter_search_scope ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name);

	// function snd_pcm_scope_malloc - pcm.h (1210, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_scope_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_pcm_scope_set_ops - pcm.h (1211, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_scope_set_ops ([CTypeDetails ("Pointer<snd_pcm_scope_t>")]System.IntPtr @scope, [CTypeDetails ("Pointer<snd_pcm_scope_ops_t>")]System.IntPtr @val);

	// function snd_pcm_scope_set_name - pcm.h (1213, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_scope_set_name ([CTypeDetails ("Pointer<snd_pcm_scope_t>")]System.IntPtr @scope, [CTypeDetails ("Pointer<byte>")]System.IntPtr @val);

	// function snd_pcm_scope_get_name - pcm.h (1214, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_scope_get_name ([CTypeDetails ("Pointer<snd_pcm_scope_t>")]System.IntPtr @scope);

	// function snd_pcm_scope_get_callback_private - pcm.h (1215, 7)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_scope_get_callback_private ([CTypeDetails ("Pointer<snd_pcm_scope_t>")]System.IntPtr @scope);

	// function snd_pcm_scope_set_callback_private - pcm.h (1216, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_pcm_scope_set_callback_private ([CTypeDetails ("Pointer<snd_pcm_scope_t>")]System.IntPtr @scope, [CTypeDetails ("Pointer<void>")]System.IntPtr @val);

	// function snd_pcm_scope_s16_open - pcm.h (1217, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_scope_s16_open ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @scopep);

	// function snd_pcm_scope_s16_get_channel_buffer - pcm.h (1219, 10)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_scope_s16_get_channel_buffer ([CTypeDetails ("Pointer<snd_pcm_scope_t>")]System.IntPtr @scope, uint @channel);

	// function snd_spcm_init - pcm.h (1260, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_spcm_init ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, uint @rate, uint @channels, snd_pcm_format_t @format, snd_pcm_subformat_t @subformat, snd_spcm_latency_t @latency, snd_pcm_access_t @_access, snd_spcm_xrun_type_t @xrun_type);

	// function snd_spcm_init_duplex - pcm.h (1269, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_spcm_init_duplex ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @playback_pcm, [CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @capture_pcm, uint @rate, uint @channels, snd_pcm_format_t @format, snd_pcm_subformat_t @subformat, snd_spcm_latency_t @latency, snd_pcm_access_t @_access, snd_spcm_xrun_type_t @xrun_type, snd_spcm_duplex_type_t @duplex_type);

	// function snd_spcm_init_get_params - pcm.h (1280, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_spcm_init_get_params ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<uint>")]System.IntPtr @rate, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @buffer_size, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @period_size);

	// function snd_pcm_start_mode_name - pcm.h (1295, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_start_mode_name (snd_pcm_start_t @mode);

	// function snd_pcm_xrun_mode_name - pcm.h (1296, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_pcm_xrun_mode_name (snd_pcm_xrun_t @mode);

	// function snd_pcm_sw_params_set_start_mode - pcm.h (1297, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_set_start_mode ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, snd_pcm_start_t @val);

	// function snd_pcm_sw_params_get_start_mode - pcm.h (1298, 17)
	[DllImport (LibraryName)]
	internal static extern snd_pcm_start_t snd_pcm_sw_params_get_start_mode ([CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params);

	// function snd_pcm_sw_params_set_xrun_mode - pcm.h (1299, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_set_xrun_mode ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, snd_pcm_xrun_t @val);

	// function snd_pcm_sw_params_get_xrun_mode - pcm.h (1300, 16)
	[DllImport (LibraryName)]
	internal static extern snd_pcm_xrun_t snd_pcm_sw_params_get_xrun_mode ([CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params);

	// function snd_pcm_sw_params_set_xfer_align - pcm.h (1302, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_set_xfer_align ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, ulong @val);

	// function snd_pcm_sw_params_get_xfer_align - pcm.h (1303, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_get_xfer_align ([CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<ulong>")]System.IntPtr @val);

	// function snd_pcm_sw_params_set_sleep_min - pcm.h (1304, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_set_sleep_min ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, uint @val);

	// function snd_pcm_sw_params_get_sleep_min - pcm.h (1305, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_sw_params_get_sleep_min ([CTypeDetails ("Pointer<snd_pcm_sw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val);

	// function snd_pcm_hw_params_get_tick_time - pcm.h (1308, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_tick_time ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_get_tick_time_min - pcm.h (1309, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_tick_time_min ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_get_tick_time_max - pcm.h (1310, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_get_tick_time_max ([CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_test_tick_time - pcm.h (1311, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_test_tick_time ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, uint @val, int @dir);

	// function snd_pcm_hw_params_set_tick_time - pcm.h (1312, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_tick_time ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, uint @val, int @dir);

	// function snd_pcm_hw_params_set_tick_time_min - pcm.h (1313, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_tick_time_min ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_tick_time_max - pcm.h (1314, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_tick_time_max ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_tick_time_minmax - pcm.h (1315, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_tick_time_minmax ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @min, [CTypeDetails ("Pointer<int>")]System.IntPtr @mindir, [CTypeDetails ("Pointer<uint>")]System.IntPtr @max, [CTypeDetails ("Pointer<int>")]System.IntPtr @maxdir);

	// function snd_pcm_hw_params_set_tick_time_near - pcm.h (1316, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_tick_time_near ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_tick_time_first - pcm.h (1317, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_tick_time_first ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_pcm_hw_params_set_tick_time_last - pcm.h (1318, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_pcm_hw_params_set_tick_time_last ([CTypeDetails ("Pointer<snd_pcm_t>")]System.IntPtr @pcm, [CTypeDetails ("Pointer<snd_pcm_hw_params_t>")]System.IntPtr @params, [CTypeDetails ("Pointer<uint>")]System.IntPtr @val, [CTypeDetails ("Pointer<int>")]System.IntPtr @dir);

	// function snd_rawmidi_open - rawmidi.h (82, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_open ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @in_rmidi, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @out_rmidi, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, int @mode);

	// function snd_rawmidi_open_lconf - rawmidi.h (84, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_open_lconf ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @in_rmidi, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @out_rmidi, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, int @mode, [CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @lconf);

	// function snd_rawmidi_close - rawmidi.h (86, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_close ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rmidi);

	// function snd_rawmidi_poll_descriptors_count - rawmidi.h (87, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_poll_descriptors_count ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rmidi);

	// function snd_rawmidi_poll_descriptors - rawmidi.h (88, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_poll_descriptors ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rmidi, [CTypeDetails ("Pointer<pollfd>")]System.IntPtr @pfds, uint @space);

	// function snd_rawmidi_poll_descriptors_revents - rawmidi.h (89, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_poll_descriptors_revents ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rawmidi, [CTypeDetails ("Pointer<pollfd>")]System.IntPtr @pfds, uint @nfds, [CTypeDetails ("Pointer<ushort>")]System.IntPtr @revent);

	// function snd_rawmidi_nonblock - rawmidi.h (90, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_nonblock ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rmidi, int @nonblock);

	// function snd_rawmidi_info_sizeof - rawmidi.h (91, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_rawmidi_info_sizeof ();

	// function snd_rawmidi_info_malloc - rawmidi.h (97, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_info_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_rawmidi_info_free - rawmidi.h (98, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_rawmidi_info_free ([CTypeDetails ("Pointer<snd_rawmidi_info_t>")]System.IntPtr @obj);

	// function snd_rawmidi_info_copy - rawmidi.h (99, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_rawmidi_info_copy ([CTypeDetails ("Pointer<snd_rawmidi_info_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_rawmidi_info_t>")]System.IntPtr @src);

	// function snd_rawmidi_info_get_device - rawmidi.h (100, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_rawmidi_info_get_device ([CTypeDetails ("Pointer<snd_rawmidi_info_t>")]System.IntPtr @obj);

	// function snd_rawmidi_info_get_subdevice - rawmidi.h (101, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_rawmidi_info_get_subdevice ([CTypeDetails ("Pointer<snd_rawmidi_info_t>")]System.IntPtr @obj);

	// function snd_rawmidi_info_get_stream - rawmidi.h (102, 22)
	[DllImport (LibraryName)]
	internal static extern snd_rawmidi_stream_t snd_rawmidi_info_get_stream ([CTypeDetails ("Pointer<snd_rawmidi_info_t>")]System.IntPtr @obj);

	// function snd_rawmidi_info_get_card - rawmidi.h (103, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_info_get_card ([CTypeDetails ("Pointer<snd_rawmidi_info_t>")]System.IntPtr @obj);

	// function snd_rawmidi_info_get_flags - rawmidi.h (104, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_rawmidi_info_get_flags ([CTypeDetails ("Pointer<snd_rawmidi_info_t>")]System.IntPtr @obj);

	// function snd_rawmidi_info_get_id - rawmidi.h (105, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_rawmidi_info_get_id ([CTypeDetails ("Pointer<snd_rawmidi_info_t>")]System.IntPtr @obj);

	// function snd_rawmidi_info_get_name - rawmidi.h (106, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_rawmidi_info_get_name ([CTypeDetails ("Pointer<snd_rawmidi_info_t>")]System.IntPtr @obj);

	// function snd_rawmidi_info_get_subdevice_name - rawmidi.h (107, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_rawmidi_info_get_subdevice_name ([CTypeDetails ("Pointer<snd_rawmidi_info_t>")]System.IntPtr @obj);

	// function snd_rawmidi_info_get_subdevices_count - rawmidi.h (108, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_rawmidi_info_get_subdevices_count ([CTypeDetails ("Pointer<snd_rawmidi_info_t>")]System.IntPtr @obj);

	// function snd_rawmidi_info_get_subdevices_avail - rawmidi.h (109, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_rawmidi_info_get_subdevices_avail ([CTypeDetails ("Pointer<snd_rawmidi_info_t>")]System.IntPtr @obj);

	// function snd_rawmidi_info_set_device - rawmidi.h (110, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_rawmidi_info_set_device ([CTypeDetails ("Pointer<snd_rawmidi_info_t>")]System.IntPtr @obj, uint @val);

	// function snd_rawmidi_info_set_subdevice - rawmidi.h (111, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_rawmidi_info_set_subdevice ([CTypeDetails ("Pointer<snd_rawmidi_info_t>")]System.IntPtr @obj, uint @val);

	// function snd_rawmidi_info_set_stream - rawmidi.h (112, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_rawmidi_info_set_stream ([CTypeDetails ("Pointer<snd_rawmidi_info_t>")]System.IntPtr @obj, snd_rawmidi_stream_t @val);

	// function snd_rawmidi_info - rawmidi.h (113, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_info ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rmidi, [CTypeDetails ("Pointer<snd_rawmidi_info_t>")]System.IntPtr @info);

	// function snd_rawmidi_params_sizeof - rawmidi.h (114, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_rawmidi_params_sizeof ();

	// function snd_rawmidi_params_malloc - rawmidi.h (120, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_params_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_rawmidi_params_free - rawmidi.h (121, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_rawmidi_params_free ([CTypeDetails ("Pointer<snd_rawmidi_params_t>")]System.IntPtr @obj);

	// function snd_rawmidi_params_copy - rawmidi.h (122, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_rawmidi_params_copy ([CTypeDetails ("Pointer<snd_rawmidi_params_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_rawmidi_params_t>")]System.IntPtr @src);

	// function snd_rawmidi_params_set_buffer_size - rawmidi.h (123, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_params_set_buffer_size ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rmidi, [CTypeDetails ("Pointer<snd_rawmidi_params_t>")]System.IntPtr @params, uint @val);

	// function snd_rawmidi_params_get_buffer_size - rawmidi.h (124, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_rawmidi_params_get_buffer_size ([CTypeDetails ("Pointer<snd_rawmidi_params_t>")]System.IntPtr @params);

	// function snd_rawmidi_params_set_avail_min - rawmidi.h (125, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_params_set_avail_min ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rmidi, [CTypeDetails ("Pointer<snd_rawmidi_params_t>")]System.IntPtr @params, uint @val);

	// function snd_rawmidi_params_get_avail_min - rawmidi.h (126, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_rawmidi_params_get_avail_min ([CTypeDetails ("Pointer<snd_rawmidi_params_t>")]System.IntPtr @params);

	// function snd_rawmidi_params_set_no_active_sensing - rawmidi.h (127, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_params_set_no_active_sensing ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rmidi, [CTypeDetails ("Pointer<snd_rawmidi_params_t>")]System.IntPtr @params, int @val);

	// function snd_rawmidi_params_get_no_active_sensing - rawmidi.h (128, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_params_get_no_active_sensing ([CTypeDetails ("Pointer<snd_rawmidi_params_t>")]System.IntPtr @params);

	// function snd_rawmidi_params - rawmidi.h (129, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_params ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rmidi, [CTypeDetails ("Pointer<snd_rawmidi_params_t>")]System.IntPtr @params);

	// function snd_rawmidi_params_current - rawmidi.h (130, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_params_current ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rmidi, [CTypeDetails ("Pointer<snd_rawmidi_params_t>")]System.IntPtr @params);

	// function snd_rawmidi_status_sizeof - rawmidi.h (131, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_rawmidi_status_sizeof ();

	// function snd_rawmidi_status_malloc - rawmidi.h (137, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_status_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_rawmidi_status_free - rawmidi.h (138, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_rawmidi_status_free ([CTypeDetails ("Pointer<snd_rawmidi_status_t>")]System.IntPtr @obj);

	// function snd_rawmidi_status_copy - rawmidi.h (139, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_rawmidi_status_copy ([CTypeDetails ("Pointer<snd_rawmidi_status_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_rawmidi_status_t>")]System.IntPtr @src);

	// function snd_rawmidi_status_get_tstamp - rawmidi.h (140, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_rawmidi_status_get_tstamp ([CTypeDetails ("Pointer<snd_rawmidi_status_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<snd_htimestamp_t>")]System.IntPtr @ptr);

	// function snd_rawmidi_status_get_avail - rawmidi.h (141, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_rawmidi_status_get_avail ([CTypeDetails ("Pointer<snd_rawmidi_status_t>")]System.IntPtr @obj);

	// function snd_rawmidi_status_get_xruns - rawmidi.h (142, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_rawmidi_status_get_xruns ([CTypeDetails ("Pointer<snd_rawmidi_status_t>")]System.IntPtr @obj);

	// function snd_rawmidi_status - rawmidi.h (143, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_status ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rmidi, [CTypeDetails ("Pointer<snd_rawmidi_status_t>")]System.IntPtr @status);

	// function snd_rawmidi_drain - rawmidi.h (144, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_drain ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rmidi);

	// function snd_rawmidi_drop - rawmidi.h (145, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_drop ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rmidi);

	// function snd_rawmidi_write - rawmidi.h (146, 9)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_write ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rmidi, [CTypeDetails ("Pointer<void>")]System.IntPtr @buffer, uint @size);

	// function snd_rawmidi_read - rawmidi.h (147, 9)
	[DllImport (LibraryName)]
	internal static extern int snd_rawmidi_read ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rmidi, [CTypeDetails ("Pointer<void>")]System.IntPtr @buffer, uint @size);

	// function snd_rawmidi_name - rawmidi.h (148, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_rawmidi_name ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rmidi);

	// function snd_rawmidi_type_t - rawmidi.h (149, 20)
	[DllImport (LibraryName)]
	internal static extern snd_rawmidi_type_t snd_rawmidi_type_t ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rmidi);

	// function snd_rawmidi_stream_t - rawmidi.h (150, 22)
	[DllImport (LibraryName)]
	internal static extern snd_rawmidi_stream_t snd_rawmidi_stream_t ([CTypeDetails ("Pointer<snd_rawmidi_t>")]System.IntPtr @rawmidi);

	// function snd_timer_query_open - timer.h (142, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_query_open ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @handle, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, int @mode);

	// function snd_timer_query_open_lconf - timer.h (143, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_query_open_lconf ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @handle, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, int @mode, [CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @lconf);

	// function snd_timer_query_close - timer.h (144, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_query_close ([CTypeDetails ("Pointer<snd_timer_query_t>")]System.IntPtr @handle);

	// function snd_timer_query_next_device - timer.h (145, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_query_next_device ([CTypeDetails ("Pointer<snd_timer_query_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_timer_id_t>")]System.IntPtr @tid);

	// function snd_timer_query_info - timer.h (146, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_query_info ([CTypeDetails ("Pointer<snd_timer_query_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_timer_ginfo_t>")]System.IntPtr @info);

	// function snd_timer_query_params - timer.h (147, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_query_params ([CTypeDetails ("Pointer<snd_timer_query_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_timer_gparams_t>")]System.IntPtr @params);

	// function snd_timer_query_status - timer.h (148, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_query_status ([CTypeDetails ("Pointer<snd_timer_query_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_timer_gstatus_t>")]System.IntPtr @status);

	// function snd_timer_open - timer.h (150, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_open ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @handle, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, int @mode);

	// function snd_timer_open_lconf - timer.h (151, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_open_lconf ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @handle, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, int @mode, [CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @lconf);

	// function snd_timer_close - timer.h (152, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_close ([CTypeDetails ("Pointer<snd_timer_t>")]System.IntPtr @handle);

	// function snd_async_add_timer_handler - timer.h (153, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_async_add_timer_handler ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @handler, [CTypeDetails ("Pointer<snd_timer_t>")]System.IntPtr @timer, snd_async_callback_t @callback, [CTypeDetails ("Pointer<void>")]System.IntPtr @private_data);

	// function snd_async_handler_get_timer - timer.h (155, 14)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_async_handler_get_timer ([CTypeDetails ("Pointer<snd_async_handler_t>")]System.IntPtr @handler);

	// function snd_timer_poll_descriptors_count - timer.h (156, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_poll_descriptors_count ([CTypeDetails ("Pointer<snd_timer_t>")]System.IntPtr @handle);

	// function snd_timer_poll_descriptors - timer.h (157, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_poll_descriptors ([CTypeDetails ("Pointer<snd_timer_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<pollfd>")]System.IntPtr @pfds, uint @space);

	// function snd_timer_poll_descriptors_revents - timer.h (158, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_poll_descriptors_revents ([CTypeDetails ("Pointer<snd_timer_t>")]System.IntPtr @timer, [CTypeDetails ("Pointer<pollfd>")]System.IntPtr @pfds, uint @nfds, [CTypeDetails ("Pointer<ushort>")]System.IntPtr @revents);

	// function snd_timer_info - timer.h (159, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_info ([CTypeDetails ("Pointer<snd_timer_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_timer_info_t>")]System.IntPtr @timer);

	// function snd_timer_params - timer.h (160, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_params ([CTypeDetails ("Pointer<snd_timer_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_timer_params_t>")]System.IntPtr @params);

	// function snd_timer_status - timer.h (161, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_status ([CTypeDetails ("Pointer<snd_timer_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_timer_status_t>")]System.IntPtr @status);

	// function snd_timer_start - timer.h (162, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_start ([CTypeDetails ("Pointer<snd_timer_t>")]System.IntPtr @handle);

	// function snd_timer_stop - timer.h (163, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_stop ([CTypeDetails ("Pointer<snd_timer_t>")]System.IntPtr @handle);

	// function snd_timer_continue - timer.h (164, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_continue ([CTypeDetails ("Pointer<snd_timer_t>")]System.IntPtr @handle);

	// function snd_timer_read_t - timer.h (165, 9)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_read_t ([CTypeDetails ("Pointer<snd_timer_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<void>")]System.IntPtr @buffer, uint @size);

	// function snd_timer_id_sizeof - timer.h (167, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_timer_id_sizeof ();

	// function snd_timer_id_malloc - timer.h (170, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_id_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_timer_id_free - timer.h (171, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_timer_id_free ([CTypeDetails ("Pointer<snd_timer_id_t>")]System.IntPtr @obj);

	// function snd_timer_id_copy - timer.h (172, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_timer_id_copy ([CTypeDetails ("Pointer<snd_timer_id_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_timer_id_t>")]System.IntPtr @src);

	// function snd_timer_id_set_class - timer.h (174, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_timer_id_set_class ([CTypeDetails ("Pointer<snd_timer_id_t>")]System.IntPtr @id, int @dev_class);

	// function snd_timer_id_get_class - timer.h (175, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_id_get_class ([CTypeDetails ("Pointer<snd_timer_id_t>")]System.IntPtr @id);

	// function snd_timer_id_set_sclass - timer.h (176, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_timer_id_set_sclass ([CTypeDetails ("Pointer<snd_timer_id_t>")]System.IntPtr @id, int @dev_sclass);

	// function snd_timer_id_get_sclass - timer.h (177, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_id_get_sclass ([CTypeDetails ("Pointer<snd_timer_id_t>")]System.IntPtr @id);

	// function snd_timer_id_set_card - timer.h (178, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_timer_id_set_card ([CTypeDetails ("Pointer<snd_timer_id_t>")]System.IntPtr @id, int @card);

	// function snd_timer_id_get_card - timer.h (179, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_id_get_card ([CTypeDetails ("Pointer<snd_timer_id_t>")]System.IntPtr @id);

	// function snd_timer_id_set_device - timer.h (180, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_timer_id_set_device ([CTypeDetails ("Pointer<snd_timer_id_t>")]System.IntPtr @id, int @device);

	// function snd_timer_id_get_device - timer.h (181, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_id_get_device ([CTypeDetails ("Pointer<snd_timer_id_t>")]System.IntPtr @id);

	// function snd_timer_id_set_subdevice - timer.h (182, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_timer_id_set_subdevice ([CTypeDetails ("Pointer<snd_timer_id_t>")]System.IntPtr @id, int @subdevice);

	// function snd_timer_id_get_subdevice - timer.h (183, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_id_get_subdevice ([CTypeDetails ("Pointer<snd_timer_id_t>")]System.IntPtr @id);

	// function snd_timer_ginfo_sizeof - timer.h (185, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_timer_ginfo_sizeof ();

	// function snd_timer_ginfo_malloc - timer.h (188, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_ginfo_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_timer_ginfo_free - timer.h (189, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_timer_ginfo_free ([CTypeDetails ("Pointer<snd_timer_ginfo_t>")]System.IntPtr @obj);

	// function snd_timer_ginfo_copy - timer.h (190, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_timer_ginfo_copy ([CTypeDetails ("Pointer<snd_timer_ginfo_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_timer_ginfo_t>")]System.IntPtr @src);

	// function snd_timer_ginfo_set_tid - timer.h (192, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_ginfo_set_tid ([CTypeDetails ("Pointer<snd_timer_ginfo_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<snd_timer_id_t>")]System.IntPtr @tid);

	// function snd_timer_ginfo_get_tid - timer.h (193, 17)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_timer_ginfo_get_tid ([CTypeDetails ("Pointer<snd_timer_ginfo_t>")]System.IntPtr @obj);

	// function snd_timer_ginfo_get_flags - timer.h (194, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_timer_ginfo_get_flags ([CTypeDetails ("Pointer<snd_timer_ginfo_t>")]System.IntPtr @obj);

	// function snd_timer_ginfo_get_card - timer.h (195, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_ginfo_get_card ([CTypeDetails ("Pointer<snd_timer_ginfo_t>")]System.IntPtr @obj);

	// function snd_timer_ginfo_get_id - timer.h (196, 7)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_timer_ginfo_get_id ([CTypeDetails ("Pointer<snd_timer_ginfo_t>")]System.IntPtr @obj);

	// function snd_timer_ginfo_get_name - timer.h (197, 7)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_timer_ginfo_get_name ([CTypeDetails ("Pointer<snd_timer_ginfo_t>")]System.IntPtr @obj);

	// function snd_timer_ginfo_get_resolution - timer.h (198, 15)
	[DllImport (LibraryName)]
	internal static extern ulong snd_timer_ginfo_get_resolution ([CTypeDetails ("Pointer<snd_timer_ginfo_t>")]System.IntPtr @obj);

	// function snd_timer_ginfo_get_resolution_min - timer.h (199, 15)
	[DllImport (LibraryName)]
	internal static extern ulong snd_timer_ginfo_get_resolution_min ([CTypeDetails ("Pointer<snd_timer_ginfo_t>")]System.IntPtr @obj);

	// function snd_timer_ginfo_get_resolution_max - timer.h (200, 15)
	[DllImport (LibraryName)]
	internal static extern ulong snd_timer_ginfo_get_resolution_max ([CTypeDetails ("Pointer<snd_timer_ginfo_t>")]System.IntPtr @obj);

	// function snd_timer_ginfo_get_clients - timer.h (201, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_timer_ginfo_get_clients ([CTypeDetails ("Pointer<snd_timer_ginfo_t>")]System.IntPtr @obj);

	// function snd_timer_info_sizeof - timer.h (203, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_timer_info_sizeof ();

	// function snd_timer_info_malloc - timer.h (206, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_info_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_timer_info_free - timer.h (207, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_timer_info_free ([CTypeDetails ("Pointer<snd_timer_info_t>")]System.IntPtr @obj);

	// function snd_timer_info_copy - timer.h (208, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_timer_info_copy ([CTypeDetails ("Pointer<snd_timer_info_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_timer_info_t>")]System.IntPtr @src);

	// function snd_timer_info_is_slave - timer.h (210, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_info_is_slave ([CTypeDetails ("Pointer<snd_timer_info_t>")]System.IntPtr @info);

	// function snd_timer_info_get_card - timer.h (211, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_info_get_card ([CTypeDetails ("Pointer<snd_timer_info_t>")]System.IntPtr @info);

	// function snd_timer_info_get_id - timer.h (212, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_timer_info_get_id ([CTypeDetails ("Pointer<snd_timer_info_t>")]System.IntPtr @info);

	// function snd_timer_info_get_name - timer.h (213, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_timer_info_get_name ([CTypeDetails ("Pointer<snd_timer_info_t>")]System.IntPtr @info);

	// function snd_timer_info_get_resolution - timer.h (214, 6)
	[DllImport (LibraryName)]
	internal static extern long snd_timer_info_get_resolution ([CTypeDetails ("Pointer<snd_timer_info_t>")]System.IntPtr @info);

	// function snd_timer_params_sizeof - timer.h (216, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_timer_params_sizeof ();

	// function snd_timer_params_malloc - timer.h (219, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_params_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_timer_params_free - timer.h (220, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_timer_params_free ([CTypeDetails ("Pointer<snd_timer_params_t>")]System.IntPtr @obj);

	// function snd_timer_params_copy - timer.h (221, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_timer_params_copy ([CTypeDetails ("Pointer<snd_timer_params_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_timer_params_t>")]System.IntPtr @src);

	// function snd_timer_params_set_auto_start - timer.h (223, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_params_set_auto_start ([CTypeDetails ("Pointer<snd_timer_params_t>")]System.IntPtr @params, int @auto_start);

	// function snd_timer_params_get_auto_start - timer.h (224, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_params_get_auto_start ([CTypeDetails ("Pointer<snd_timer_params_t>")]System.IntPtr @params);

	// function snd_timer_params_set_exclusive - timer.h (225, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_params_set_exclusive ([CTypeDetails ("Pointer<snd_timer_params_t>")]System.IntPtr @params, int @exclusive);

	// function snd_timer_params_get_exclusive - timer.h (226, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_params_get_exclusive ([CTypeDetails ("Pointer<snd_timer_params_t>")]System.IntPtr @params);

	// function snd_timer_params_set_early_event - timer.h (227, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_params_set_early_event ([CTypeDetails ("Pointer<snd_timer_params_t>")]System.IntPtr @params, int @early_event);

	// function snd_timer_params_get_early_event - timer.h (228, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_params_get_early_event ([CTypeDetails ("Pointer<snd_timer_params_t>")]System.IntPtr @params);

	// function snd_timer_params_set_ticks - timer.h (229, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_timer_params_set_ticks ([CTypeDetails ("Pointer<snd_timer_params_t>")]System.IntPtr @params, long @ticks);

	// function snd_timer_params_get_ticks - timer.h (230, 6)
	[DllImport (LibraryName)]
	internal static extern long snd_timer_params_get_ticks ([CTypeDetails ("Pointer<snd_timer_params_t>")]System.IntPtr @params);

	// function snd_timer_params_set_queue_size - timer.h (231, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_timer_params_set_queue_size ([CTypeDetails ("Pointer<snd_timer_params_t>")]System.IntPtr @params, long @queue_size);

	// function snd_timer_params_get_queue_size - timer.h (232, 6)
	[DllImport (LibraryName)]
	internal static extern long snd_timer_params_get_queue_size ([CTypeDetails ("Pointer<snd_timer_params_t>")]System.IntPtr @params);

	// function snd_timer_params_set_filter - timer.h (233, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_timer_params_set_filter ([CTypeDetails ("Pointer<snd_timer_params_t>")]System.IntPtr @params, uint @filter);

	// function snd_timer_params_get_filter - timer.h (234, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_timer_params_get_filter ([CTypeDetails ("Pointer<snd_timer_params_t>")]System.IntPtr @params);

	// function snd_timer_status_sizeof - timer.h (236, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_timer_status_sizeof ();

	// function snd_timer_status_malloc - timer.h (239, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_timer_status_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_timer_status_free - timer.h (240, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_timer_status_free ([CTypeDetails ("Pointer<snd_timer_status_t>")]System.IntPtr @obj);

	// function snd_timer_status_copy - timer.h (241, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_timer_status_copy ([CTypeDetails ("Pointer<snd_timer_status_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_timer_status_t>")]System.IntPtr @src);

	// function snd_timer_status_get_timestamp - timer.h (243, 18)
	[DllImport (LibraryName)]
	internal static extern snd_htimestamp_t snd_timer_status_get_timestamp ([CTypeDetails ("Pointer<snd_timer_status_t>")]System.IntPtr @status);

	// function snd_timer_status_get_resolution - timer.h (244, 6)
	[DllImport (LibraryName)]
	internal static extern long snd_timer_status_get_resolution ([CTypeDetails ("Pointer<snd_timer_status_t>")]System.IntPtr @status);

	// function snd_timer_status_get_lost - timer.h (245, 6)
	[DllImport (LibraryName)]
	internal static extern long snd_timer_status_get_lost ([CTypeDetails ("Pointer<snd_timer_status_t>")]System.IntPtr @status);

	// function snd_timer_status_get_overrun - timer.h (246, 6)
	[DllImport (LibraryName)]
	internal static extern long snd_timer_status_get_overrun ([CTypeDetails ("Pointer<snd_timer_status_t>")]System.IntPtr @status);

	// function snd_timer_status_get_queue - timer.h (247, 6)
	[DllImport (LibraryName)]
	internal static extern long snd_timer_status_get_queue ([CTypeDetails ("Pointer<snd_timer_status_t>")]System.IntPtr @status);

	// function snd_timer_info_get_ticks - timer.h (250, 6)
	[DllImport (LibraryName)]
	internal static extern long snd_timer_info_get_ticks ([CTypeDetails ("Pointer<snd_timer_info_t>")]System.IntPtr @info);

	// function snd_hwdep_open - hwdep.h (105, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hwdep_open ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @hwdep, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, int @mode);

	// function snd_hwdep_close - hwdep.h (106, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hwdep_close ([CTypeDetails ("Pointer<snd_hwdep_t>")]System.IntPtr @hwdep);

	// function snd_hwdep_poll_descriptors - hwdep.h (107, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hwdep_poll_descriptors ([CTypeDetails ("Pointer<snd_hwdep_t>")]System.IntPtr @hwdep, [CTypeDetails ("Pointer<pollfd>")]System.IntPtr @pfds, uint @space);

	// function snd_hwdep_poll_descriptors_count - hwdep.h (108, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hwdep_poll_descriptors_count ([CTypeDetails ("Pointer<snd_hwdep_t>")]System.IntPtr @hwdep);

	// function snd_hwdep_poll_descriptors_revents - hwdep.h (109, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hwdep_poll_descriptors_revents ([CTypeDetails ("Pointer<snd_hwdep_t>")]System.IntPtr @hwdep, [CTypeDetails ("Pointer<pollfd>")]System.IntPtr @pfds, uint @nfds, [CTypeDetails ("Pointer<ushort>")]System.IntPtr @revents);

	// function snd_hwdep_nonblock - hwdep.h (110, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hwdep_nonblock ([CTypeDetails ("Pointer<snd_hwdep_t>")]System.IntPtr @hwdep, int @nonblock);

	// function snd_hwdep_info - hwdep.h (111, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hwdep_info ([CTypeDetails ("Pointer<snd_hwdep_t>")]System.IntPtr @hwdep, [CTypeDetails ("Pointer<snd_hwdep_info_t>")]System.IntPtr @info);

	// function snd_hwdep_dsp_status - hwdep.h (112, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hwdep_dsp_status ([CTypeDetails ("Pointer<snd_hwdep_t>")]System.IntPtr @hwdep, [CTypeDetails ("Pointer<snd_hwdep_dsp_status_t>")]System.IntPtr @status);

	// function snd_hwdep_dsp_load - hwdep.h (113, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hwdep_dsp_load ([CTypeDetails ("Pointer<snd_hwdep_t>")]System.IntPtr @hwdep, [CTypeDetails ("Pointer<snd_hwdep_dsp_image_t>")]System.IntPtr @block);

	// function snd_hwdep_ioctl - hwdep.h (114, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hwdep_ioctl ([CTypeDetails ("Pointer<snd_hwdep_t>")]System.IntPtr @hwdep, uint @request, [CTypeDetails ("Pointer<void>")]System.IntPtr @arg);

	// function snd_hwdep_write - hwdep.h (115, 9)
	[DllImport (LibraryName)]
	internal static extern int snd_hwdep_write ([CTypeDetails ("Pointer<snd_hwdep_t>")]System.IntPtr @hwdep, [CTypeDetails ("Pointer<void>")]System.IntPtr @buffer, uint @size);

	// function snd_hwdep_read - hwdep.h (116, 9)
	[DllImport (LibraryName)]
	internal static extern int snd_hwdep_read ([CTypeDetails ("Pointer<snd_hwdep_t>")]System.IntPtr @hwdep, [CTypeDetails ("Pointer<void>")]System.IntPtr @buffer, uint @size);

	// function snd_hwdep_info_sizeof - hwdep.h (118, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_hwdep_info_sizeof ();

	// function snd_hwdep_info_malloc - hwdep.h (121, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hwdep_info_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_hwdep_info_free - hwdep.h (122, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_hwdep_info_free ([CTypeDetails ("Pointer<snd_hwdep_info_t>")]System.IntPtr @obj);

	// function snd_hwdep_info_copy - hwdep.h (123, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_hwdep_info_copy ([CTypeDetails ("Pointer<snd_hwdep_info_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_hwdep_info_t>")]System.IntPtr @src);

	// function snd_hwdep_info_get_device - hwdep.h (125, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_hwdep_info_get_device ([CTypeDetails ("Pointer<snd_hwdep_info_t>")]System.IntPtr @obj);

	// function snd_hwdep_info_get_card - hwdep.h (126, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hwdep_info_get_card ([CTypeDetails ("Pointer<snd_hwdep_info_t>")]System.IntPtr @obj);

	// function snd_hwdep_info_get_id - hwdep.h (127, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_hwdep_info_get_id ([CTypeDetails ("Pointer<snd_hwdep_info_t>")]System.IntPtr @obj);

	// function snd_hwdep_info_get_name - hwdep.h (128, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_hwdep_info_get_name ([CTypeDetails ("Pointer<snd_hwdep_info_t>")]System.IntPtr @obj);

	// function snd_hwdep_info_get_iface - hwdep.h (129, 19)
	[DllImport (LibraryName)]
	internal static extern snd_hwdep_iface_t snd_hwdep_info_get_iface ([CTypeDetails ("Pointer<snd_hwdep_info_t>")]System.IntPtr @obj);

	// function snd_hwdep_info_set_device - hwdep.h (130, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_hwdep_info_set_device ([CTypeDetails ("Pointer<snd_hwdep_info_t>")]System.IntPtr @obj, uint @val);

	// function snd_hwdep_dsp_status_sizeof - hwdep.h (132, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_hwdep_dsp_status_sizeof ();

	// function snd_hwdep_dsp_status_malloc - hwdep.h (135, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hwdep_dsp_status_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_hwdep_dsp_status_free - hwdep.h (136, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_hwdep_dsp_status_free ([CTypeDetails ("Pointer<snd_hwdep_dsp_status_t>")]System.IntPtr @obj);

	// function snd_hwdep_dsp_status_copy - hwdep.h (137, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_hwdep_dsp_status_copy ([CTypeDetails ("Pointer<snd_hwdep_dsp_status_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_hwdep_dsp_status_t>")]System.IntPtr @src);

	// function snd_hwdep_dsp_status_get_version - hwdep.h (139, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_hwdep_dsp_status_get_version ([CTypeDetails ("Pointer<snd_hwdep_dsp_status_t>")]System.IntPtr @obj);

	// function snd_hwdep_dsp_status_get_id - hwdep.h (140, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_hwdep_dsp_status_get_id ([CTypeDetails ("Pointer<snd_hwdep_dsp_status_t>")]System.IntPtr @obj);

	// function snd_hwdep_dsp_status_get_num_dsps - hwdep.h (141, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_hwdep_dsp_status_get_num_dsps ([CTypeDetails ("Pointer<snd_hwdep_dsp_status_t>")]System.IntPtr @obj);

	// function snd_hwdep_dsp_status_get_dsp_loaded - hwdep.h (142, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_hwdep_dsp_status_get_dsp_loaded ([CTypeDetails ("Pointer<snd_hwdep_dsp_status_t>")]System.IntPtr @obj);

	// function snd_hwdep_dsp_status_get_chip_ready - hwdep.h (143, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_hwdep_dsp_status_get_chip_ready ([CTypeDetails ("Pointer<snd_hwdep_dsp_status_t>")]System.IntPtr @obj);

	// function snd_hwdep_dsp_image_sizeof - hwdep.h (145, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_hwdep_dsp_image_sizeof ();

	// function snd_hwdep_dsp_image_malloc - hwdep.h (148, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hwdep_dsp_image_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_hwdep_dsp_image_free - hwdep.h (149, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_hwdep_dsp_image_free ([CTypeDetails ("Pointer<snd_hwdep_dsp_image_t>")]System.IntPtr @obj);

	// function snd_hwdep_dsp_image_copy - hwdep.h (150, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_hwdep_dsp_image_copy ([CTypeDetails ("Pointer<snd_hwdep_dsp_image_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_hwdep_dsp_image_t>")]System.IntPtr @src);

	// function snd_hwdep_dsp_image_get_index - hwdep.h (152, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_hwdep_dsp_image_get_index ([CTypeDetails ("Pointer<snd_hwdep_dsp_image_t>")]System.IntPtr @obj);

	// function snd_hwdep_dsp_image_get_name - hwdep.h (153, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_hwdep_dsp_image_get_name ([CTypeDetails ("Pointer<snd_hwdep_dsp_image_t>")]System.IntPtr @obj);

	// function snd_hwdep_dsp_image_get_image - hwdep.h (154, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_hwdep_dsp_image_get_image ([CTypeDetails ("Pointer<snd_hwdep_dsp_image_t>")]System.IntPtr @obj);

	// function snd_hwdep_dsp_image_get_length - hwdep.h (155, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_hwdep_dsp_image_get_length ([CTypeDetails ("Pointer<snd_hwdep_dsp_image_t>")]System.IntPtr @obj);

	// function snd_hwdep_dsp_image_set_index - hwdep.h (157, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_hwdep_dsp_image_set_index ([CTypeDetails ("Pointer<snd_hwdep_dsp_image_t>")]System.IntPtr @obj, uint @_index);

	// function snd_hwdep_dsp_image_set_name - hwdep.h (158, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_hwdep_dsp_image_set_name ([CTypeDetails ("Pointer<snd_hwdep_dsp_image_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name);

	// function snd_hwdep_dsp_image_set_image - hwdep.h (159, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_hwdep_dsp_image_set_image ([CTypeDetails ("Pointer<snd_hwdep_dsp_image_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<void>")]System.IntPtr @buffer);

	// function snd_hwdep_dsp_image_set_length - hwdep.h (160, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_hwdep_dsp_image_set_length ([CTypeDetails ("Pointer<snd_hwdep_dsp_image_t>")]System.IntPtr @obj, uint @length);

	// function snd_card_load - control.h (222, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_card_load (int @card);

	// function snd_card_next - control.h (223, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_card_next ([CTypeDetails ("Pointer<int>")]System.IntPtr @card);

	// function snd_card_get_index - control.h (224, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_card_get_index ([CTypeDetails ("Pointer<byte>")]System.IntPtr @name);

	// function snd_card_get_name - control.h (225, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_card_get_name (int @card, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @name);

	// function snd_card_get_longname - control.h (226, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_card_get_longname (int @card, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @name);

	// function snd_device_name_hint - control.h (228, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_device_name_hint (int @card, [CTypeDetails ("Pointer<byte>")]System.IntPtr @iface, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @hints);

	// function snd_device_name_free_hint - control.h (229, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_device_name_free_hint ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @hints);

	// function snd_device_name_get_hint - control.h (230, 7)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_device_name_get_hint ([CTypeDetails ("Pointer<void>")]System.IntPtr @hint, [CTypeDetails ("Pointer<byte>")]System.IntPtr @id);

	// function snd_ctl_open - control.h (232, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_open ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, int @mode);

	// function snd_ctl_open_lconf - control.h (233, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_open_lconf ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, int @mode, [CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @lconf);

	// function snd_ctl_open_fallback - control.h (234, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_open_fallback ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @root, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, [CTypeDetails ("Pointer<byte>")]System.IntPtr @orig_name, int @mode);

	// function snd_ctl_close - control.h (235, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_close ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl);

	// function snd_ctl_nonblock - control.h (236, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_nonblock ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, int @nonblock);

	// function snd_ctl_abort - control.h (237, 23)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_abort ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl);

	// function snd_async_add_ctl_handler - control.h (238, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_async_add_ctl_handler ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @handler, [CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, snd_async_callback_t @callback, [CTypeDetails ("Pointer<void>")]System.IntPtr @private_data);

	// function snd_async_handler_get_ctl - control.h (240, 12)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_async_handler_get_ctl ([CTypeDetails ("Pointer<snd_async_handler_t>")]System.IntPtr @handler);

	// function snd_ctl_poll_descriptors_count - control.h (241, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_poll_descriptors_count ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl);

	// function snd_ctl_poll_descriptors - control.h (242, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_poll_descriptors ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<pollfd>")]System.IntPtr @pfds, uint @space);

	// function snd_ctl_poll_descriptors_revents - control.h (243, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_poll_descriptors_revents ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<pollfd>")]System.IntPtr @pfds, uint @nfds, [CTypeDetails ("Pointer<ushort>")]System.IntPtr @revents);

	// function snd_ctl_subscribe_events - control.h (244, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_subscribe_events ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, int @subscribe);

	// function snd_ctl_card_info - control.h (245, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_card_info ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_card_info_t>")]System.IntPtr @info);

	// function snd_ctl_elem_list - control.h (246, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_list ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_list_t>")]System.IntPtr @list);

	// function snd_ctl_elem_info - control.h (247, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_info ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @info);

	// function snd_ctl_elem_read - control.h (248, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_read ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @data);

	// function snd_ctl_elem_write - control.h (249, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_write ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @data);

	// function snd_ctl_elem_lock - control.h (250, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_lock ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @id);

	// function snd_ctl_elem_unlock - control.h (251, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_unlock ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @id);

	// function snd_ctl_elem_tlv_read - control.h (252, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_tlv_read ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @id, [CTypeDetails ("Pointer<uint>")]System.IntPtr @tlv, uint @tlv_size);

	// function snd_ctl_elem_tlv_write - control.h (254, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_tlv_write ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @id, [CTypeDetails ("Pointer<uint>")]System.IntPtr @tlv);

	// function snd_ctl_elem_tlv_command - control.h (256, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_tlv_command ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @id, [CTypeDetails ("Pointer<uint>")]System.IntPtr @tlv);

	// function snd_ctl_hwdep_next_device - control.h (259, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_hwdep_next_device ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<int>")]System.IntPtr @device);

	// function snd_ctl_hwdep_info - control.h (260, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_hwdep_info ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_hwdep_info_t>")]System.IntPtr @info);

	// function snd_ctl_pcm_next_device - control.h (263, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_pcm_next_device ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<int>")]System.IntPtr @device);

	// function snd_ctl_pcm_info - control.h (264, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_pcm_info ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_pcm_info_t>")]System.IntPtr @info);

	// function snd_ctl_pcm_prefer_subdevice - control.h (265, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_pcm_prefer_subdevice ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, int @subdev);

	// function snd_ctl_rawmidi_next_device - control.h (268, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_rawmidi_next_device ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<int>")]System.IntPtr @device);

	// function snd_ctl_rawmidi_info - control.h (269, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_rawmidi_info ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_rawmidi_info_t>")]System.IntPtr @info);

	// function snd_ctl_rawmidi_prefer_subdevice - control.h (270, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_rawmidi_prefer_subdevice ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, int @subdev);

	// function snd_ctl_set_power_state - control.h (272, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_set_power_state ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, uint @state);

	// function snd_ctl_get_power_state - control.h (273, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_get_power_state ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<uint>")]System.IntPtr @state);

	// function snd_ctl_read - control.h (275, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_read ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_event_t>")]System.IntPtr @event);

	// function snd_ctl_wait - control.h (276, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_wait ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, int @timeout);

	// function snd_ctl_name - control.h (277, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_ctl_name ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl);

	// function snd_ctl_type_t - control.h (278, 16)
	[DllImport (LibraryName)]
	internal static extern snd_ctl_type_t snd_ctl_type_t ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl);

	// function snd_ctl_elem_type_name - control.h (280, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_ctl_elem_type_name (snd_ctl_elem_type_t @type);

	// function snd_ctl_elem_iface_name - control.h (281, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_ctl_elem_iface_name (snd_ctl_elem_iface_t @iface);

	// function snd_ctl_event_type_name - control.h (282, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_ctl_event_type_name (snd_ctl_event_type_t @type);

	// function snd_ctl_event_elem_get_mask - control.h (284, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_event_elem_get_mask ([CTypeDetails ("Pointer<snd_ctl_event_t>")]System.IntPtr @obj);

	// function snd_ctl_event_elem_get_numid - control.h (285, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_event_elem_get_numid ([CTypeDetails ("Pointer<snd_ctl_event_t>")]System.IntPtr @obj);

	// function snd_ctl_event_elem_get_id - control.h (286, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_event_elem_get_id ([CTypeDetails ("Pointer<snd_ctl_event_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @ptr);

	// function snd_ctl_event_elem_get_interface - control.h (287, 22)
	[DllImport (LibraryName)]
	internal static extern snd_ctl_elem_iface_t snd_ctl_event_elem_get_interface ([CTypeDetails ("Pointer<snd_ctl_event_t>")]System.IntPtr @obj);

	// function snd_ctl_event_elem_get_device - control.h (288, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_event_elem_get_device ([CTypeDetails ("Pointer<snd_ctl_event_t>")]System.IntPtr @obj);

	// function snd_ctl_event_elem_get_subdevice - control.h (289, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_event_elem_get_subdevice ([CTypeDetails ("Pointer<snd_ctl_event_t>")]System.IntPtr @obj);

	// function snd_ctl_event_elem_get_name - control.h (290, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_ctl_event_elem_get_name ([CTypeDetails ("Pointer<snd_ctl_event_t>")]System.IntPtr @obj);

	// function snd_ctl_event_elem_get_index - control.h (291, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_event_elem_get_index ([CTypeDetails ("Pointer<snd_ctl_event_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_list_alloc_space - control.h (293, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_list_alloc_space ([CTypeDetails ("Pointer<snd_ctl_elem_list_t>")]System.IntPtr @obj, uint @entries);

	// function snd_ctl_elem_list_free_space - control.h (294, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_list_free_space ([CTypeDetails ("Pointer<snd_ctl_elem_list_t>")]System.IntPtr @obj);

	// function snd_ctl_ascii_elem_id_get - control.h (296, 7)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_ctl_ascii_elem_id_get ([CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @id);

	// function snd_ctl_ascii_elem_id_parse - control.h (297, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_ascii_elem_id_parse ([CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<byte>")]System.IntPtr @str);

	// function snd_ctl_ascii_value_parse - control.h (298, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_ascii_value_parse ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @info, [CTypeDetails ("Pointer<byte>")]System.IntPtr @value);

	// function snd_ctl_elem_id_sizeof - control.h (303, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_id_sizeof ();

	// function snd_ctl_elem_id_malloc - control.h (309, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_id_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_ctl_elem_id_free - control.h (310, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_id_free ([CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_id_clear - control.h (311, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_id_clear ([CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_id_copy - control.h (312, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_id_copy ([CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @src);

	// function snd_ctl_elem_id_get_numid - control.h (313, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_id_get_numid ([CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_id_get_interface - control.h (314, 22)
	[DllImport (LibraryName)]
	internal static extern snd_ctl_elem_iface_t snd_ctl_elem_id_get_interface ([CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_id_get_device - control.h (315, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_id_get_device ([CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_id_get_subdevice - control.h (316, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_id_get_subdevice ([CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_id_get_name - control.h (317, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_ctl_elem_id_get_name ([CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_id_get_index - control.h (318, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_id_get_index ([CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_id_set_numid - control.h (319, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_id_set_numid ([CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @obj, uint @val);

	// function snd_ctl_elem_id_set_interface - control.h (320, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_id_set_interface ([CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @obj, snd_ctl_elem_iface_t @val);

	// function snd_ctl_elem_id_set_device - control.h (321, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_id_set_device ([CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @obj, uint @val);

	// function snd_ctl_elem_id_set_subdevice - control.h (322, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_id_set_subdevice ([CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @obj, uint @val);

	// function snd_ctl_elem_id_set_name - control.h (323, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_id_set_name ([CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<byte>")]System.IntPtr @val);

	// function snd_ctl_elem_id_set_index - control.h (324, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_id_set_index ([CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @obj, uint @val);

	// function snd_ctl_card_info_sizeof - control.h (326, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_card_info_sizeof ();

	// function snd_ctl_card_info_malloc - control.h (332, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_card_info_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_ctl_card_info_free - control.h (333, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_card_info_free ([CTypeDetails ("Pointer<snd_ctl_card_info_t>")]System.IntPtr @obj);

	// function snd_ctl_card_info_clear - control.h (334, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_card_info_clear ([CTypeDetails ("Pointer<snd_ctl_card_info_t>")]System.IntPtr @obj);

	// function snd_ctl_card_info_copy - control.h (335, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_card_info_copy ([CTypeDetails ("Pointer<snd_ctl_card_info_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_ctl_card_info_t>")]System.IntPtr @src);

	// function snd_ctl_card_info_get_card - control.h (336, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_card_info_get_card ([CTypeDetails ("Pointer<snd_ctl_card_info_t>")]System.IntPtr @obj);

	// function snd_ctl_card_info_get_id - control.h (337, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_ctl_card_info_get_id ([CTypeDetails ("Pointer<snd_ctl_card_info_t>")]System.IntPtr @obj);

	// function snd_ctl_card_info_get_driver - control.h (338, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_ctl_card_info_get_driver ([CTypeDetails ("Pointer<snd_ctl_card_info_t>")]System.IntPtr @obj);

	// function snd_ctl_card_info_get_name - control.h (339, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_ctl_card_info_get_name ([CTypeDetails ("Pointer<snd_ctl_card_info_t>")]System.IntPtr @obj);

	// function snd_ctl_card_info_get_longname - control.h (340, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_ctl_card_info_get_longname ([CTypeDetails ("Pointer<snd_ctl_card_info_t>")]System.IntPtr @obj);

	// function snd_ctl_card_info_get_mixername - control.h (341, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_ctl_card_info_get_mixername ([CTypeDetails ("Pointer<snd_ctl_card_info_t>")]System.IntPtr @obj);

	// function snd_ctl_card_info_get_components - control.h (342, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_ctl_card_info_get_components ([CTypeDetails ("Pointer<snd_ctl_card_info_t>")]System.IntPtr @obj);

	// function snd_ctl_event_sizeof - control.h (344, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_event_sizeof ();

	// function snd_ctl_event_malloc - control.h (350, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_event_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_ctl_event_free - control.h (351, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_event_free ([CTypeDetails ("Pointer<snd_ctl_event_t>")]System.IntPtr @obj);

	// function snd_ctl_event_clear - control.h (352, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_event_clear ([CTypeDetails ("Pointer<snd_ctl_event_t>")]System.IntPtr @obj);

	// function snd_ctl_event_copy - control.h (353, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_event_copy ([CTypeDetails ("Pointer<snd_ctl_event_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_ctl_event_t>")]System.IntPtr @src);

	// function snd_ctl_event_get_type - control.h (354, 22)
	[DllImport (LibraryName)]
	internal static extern snd_ctl_event_type_t snd_ctl_event_get_type ([CTypeDetails ("Pointer<snd_ctl_event_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_list_sizeof - control.h (356, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_list_sizeof ();

	// function snd_ctl_elem_list_malloc - control.h (362, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_list_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_ctl_elem_list_free - control.h (363, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_list_free ([CTypeDetails ("Pointer<snd_ctl_elem_list_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_list_clear - control.h (364, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_list_clear ([CTypeDetails ("Pointer<snd_ctl_elem_list_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_list_copy - control.h (365, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_list_copy ([CTypeDetails ("Pointer<snd_ctl_elem_list_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_ctl_elem_list_t>")]System.IntPtr @src);

	// function snd_ctl_elem_list_set_offset - control.h (366, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_list_set_offset ([CTypeDetails ("Pointer<snd_ctl_elem_list_t>")]System.IntPtr @obj, uint @val);

	// function snd_ctl_elem_list_get_used - control.h (367, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_list_get_used ([CTypeDetails ("Pointer<snd_ctl_elem_list_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_list_get_count - control.h (368, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_list_get_count ([CTypeDetails ("Pointer<snd_ctl_elem_list_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_list_get_id - control.h (369, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_list_get_id ([CTypeDetails ("Pointer<snd_ctl_elem_list_t>")]System.IntPtr @obj, uint @idx, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @ptr);

	// function snd_ctl_elem_list_get_numid - control.h (370, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_list_get_numid ([CTypeDetails ("Pointer<snd_ctl_elem_list_t>")]System.IntPtr @obj, uint @idx);

	// function snd_ctl_elem_list_get_interface - control.h (371, 22)
	[DllImport (LibraryName)]
	internal static extern snd_ctl_elem_iface_t snd_ctl_elem_list_get_interface ([CTypeDetails ("Pointer<snd_ctl_elem_list_t>")]System.IntPtr @obj, uint @idx);

	// function snd_ctl_elem_list_get_device - control.h (372, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_list_get_device ([CTypeDetails ("Pointer<snd_ctl_elem_list_t>")]System.IntPtr @obj, uint @idx);

	// function snd_ctl_elem_list_get_subdevice - control.h (373, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_list_get_subdevice ([CTypeDetails ("Pointer<snd_ctl_elem_list_t>")]System.IntPtr @obj, uint @idx);

	// function snd_ctl_elem_list_get_name - control.h (374, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_ctl_elem_list_get_name ([CTypeDetails ("Pointer<snd_ctl_elem_list_t>")]System.IntPtr @obj, uint @idx);

	// function snd_ctl_elem_list_get_index - control.h (375, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_list_get_index ([CTypeDetails ("Pointer<snd_ctl_elem_list_t>")]System.IntPtr @obj, uint @idx);

	// function snd_ctl_elem_info_sizeof - control.h (377, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_info_sizeof ();

	// function snd_ctl_elem_info_malloc - control.h (383, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_info_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_ctl_elem_info_free - control.h (384, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_info_free ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_clear - control.h (385, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_info_clear ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_copy - control.h (386, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_info_copy ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @src);

	// function snd_ctl_elem_info_get_type - control.h (387, 21)
	[DllImport (LibraryName)]
	internal static extern snd_ctl_elem_type_t snd_ctl_elem_info_get_type ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_is_readable - control.h (388, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_info_is_readable ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_is_writable - control.h (389, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_info_is_writable ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_is_volatile - control.h (390, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_info_is_volatile ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_is_inactive - control.h (391, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_info_is_inactive ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_is_locked - control.h (392, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_info_is_locked ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_is_tlv_readable - control.h (393, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_info_is_tlv_readable ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_is_tlv_writable - control.h (394, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_info_is_tlv_writable ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_is_tlv_commandable - control.h (395, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_info_is_tlv_commandable ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_is_owner - control.h (396, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_info_is_owner ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_is_user - control.h (397, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_info_is_user ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_get_owner - control.h (398, 7)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_info_get_owner ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_get_count - control.h (399, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_info_get_count ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_get_min - control.h (400, 6)
	[DllImport (LibraryName)]
	internal static extern long snd_ctl_elem_info_get_min ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_get_max - control.h (401, 6)
	[DllImport (LibraryName)]
	internal static extern long snd_ctl_elem_info_get_max ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_get_step - control.h (402, 6)
	[DllImport (LibraryName)]
	internal static extern long snd_ctl_elem_info_get_step ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_get_min64 - control.h (403, 11)
	[DllImport (LibraryName)]
	internal static extern long snd_ctl_elem_info_get_min64 ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_get_max64 - control.h (404, 11)
	[DllImport (LibraryName)]
	internal static extern long snd_ctl_elem_info_get_max64 ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_get_step64 - control.h (405, 11)
	[DllImport (LibraryName)]
	internal static extern long snd_ctl_elem_info_get_step64 ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_get_items - control.h (406, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_info_get_items ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_set_item - control.h (407, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_info_set_item ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj, uint @val);

	// function snd_ctl_elem_info_get_item_name - control.h (408, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_ctl_elem_info_get_item_name ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_get_dimensions - control.h (409, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_info_get_dimensions ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_get_dimension - control.h (410, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_info_get_dimension ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj, uint @idx);

	// function snd_ctl_elem_info_set_dimension - control.h (411, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_info_set_dimension ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @info, [CTypeDetails ("ConstArrayOf<int>")] int[] @dimension);

	// function snd_ctl_elem_info_get_id - control.h (413, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_info_get_id ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @ptr);

	// function snd_ctl_elem_info_get_numid - control.h (414, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_info_get_numid ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_get_interface - control.h (415, 22)
	[DllImport (LibraryName)]
	internal static extern snd_ctl_elem_iface_t snd_ctl_elem_info_get_interface ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_get_device - control.h (416, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_info_get_device ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_get_subdevice - control.h (417, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_info_get_subdevice ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_get_name - control.h (418, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_ctl_elem_info_get_name ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_get_index - control.h (419, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_info_get_index ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_info_set_id - control.h (420, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_info_set_id ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @ptr);

	// function snd_ctl_elem_info_set_numid - control.h (421, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_info_set_numid ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj, uint @val);

	// function snd_ctl_elem_info_set_interface - control.h (422, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_info_set_interface ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj, snd_ctl_elem_iface_t @val);

	// function snd_ctl_elem_info_set_device - control.h (423, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_info_set_device ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj, uint @val);

	// function snd_ctl_elem_info_set_subdevice - control.h (424, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_info_set_subdevice ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj, uint @val);

	// function snd_ctl_elem_info_set_name - control.h (425, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_info_set_name ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<byte>")]System.IntPtr @val);

	// function snd_ctl_elem_info_set_index - control.h (426, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_info_set_index ([CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @obj, uint @val);

	// function snd_ctl_add_integer_elem_set - control.h (428, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_add_integer_elem_set ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @info, uint @element_count, uint @member_count, long @min, long @max, long @step);

	// function snd_ctl_add_integer64_elem_set - control.h (432, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_add_integer64_elem_set ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @info, uint @element_count, uint @member_count, long @min, long @max, long @step);

	// function snd_ctl_add_boolean_elem_set - control.h (437, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_add_boolean_elem_set ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @info, uint @element_count, uint @member_count);

	// function snd_ctl_add_enumerated_elem_set - control.h (440, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_add_enumerated_elem_set ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @info, uint @element_count, uint @member_count, uint @items, ArrayOf<System.IntPtr> @labels);

	// function snd_ctl_add_bytes_elem_set - control.h (445, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_add_bytes_elem_set ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @info, uint @element_count, uint @member_count);

	// function snd_ctl_elem_add_integer - control.h (449, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_add_integer ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @id, uint @count, long @imin, long @imax, long @istep);

	// function snd_ctl_elem_add_integer64 - control.h (450, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_add_integer64 ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @id, uint @count, long @imin, long @imax, long @istep);

	// function snd_ctl_elem_add_boolean - control.h (451, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_add_boolean ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @id, uint @count);

	// function snd_ctl_elem_add_enumerated - control.h (452, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_add_enumerated ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @id, uint @count, uint @items, ArrayOf<System.IntPtr> @names);

	// function snd_ctl_elem_add_iec958 - control.h (453, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_add_iec958 ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @id);

	// function snd_ctl_elem_remove - control.h (454, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_remove ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @id);

	// function snd_ctl_elem_value_sizeof - control.h (456, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_value_sizeof ();

	// function snd_ctl_elem_value_malloc - control.h (462, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_value_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_ctl_elem_value_free - control.h (463, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_value_free ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_value_clear - control.h (464, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_value_clear ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_value_copy - control.h (465, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_value_copy ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @src);

	// function snd_ctl_elem_value_compare - control.h (466, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_value_compare ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @left, [CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @right);

	// function snd_ctl_elem_value_get_id - control.h (467, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_value_get_id ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @ptr);

	// function snd_ctl_elem_value_get_numid - control.h (468, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_value_get_numid ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_value_get_interface - control.h (469, 22)
	[DllImport (LibraryName)]
	internal static extern snd_ctl_elem_iface_t snd_ctl_elem_value_get_interface ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_value_get_device - control.h (470, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_value_get_device ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_value_get_subdevice - control.h (471, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_value_get_subdevice ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_value_get_name - control.h (472, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_ctl_elem_value_get_name ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_value_get_index - control.h (473, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_value_get_index ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_value_set_id - control.h (474, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_value_set_id ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @ptr);

	// function snd_ctl_elem_value_set_numid - control.h (475, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_value_set_numid ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, uint @val);

	// function snd_ctl_elem_value_set_interface - control.h (476, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_value_set_interface ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, snd_ctl_elem_iface_t @val);

	// function snd_ctl_elem_value_set_device - control.h (477, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_value_set_device ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, uint @val);

	// function snd_ctl_elem_value_set_subdevice - control.h (478, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_value_set_subdevice ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, uint @val);

	// function snd_ctl_elem_value_set_name - control.h (479, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_value_set_name ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<byte>")]System.IntPtr @val);

	// function snd_ctl_elem_value_set_index - control.h (480, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_value_set_index ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, uint @val);

	// function snd_ctl_elem_value_get_boolean - control.h (481, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_elem_value_get_boolean ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, uint @idx);

	// function snd_ctl_elem_value_get_integer - control.h (482, 6)
	[DllImport (LibraryName)]
	internal static extern long snd_ctl_elem_value_get_integer ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, uint @idx);

	// function snd_ctl_elem_value_get_integer64 - control.h (483, 11)
	[DllImport (LibraryName)]
	internal static extern long snd_ctl_elem_value_get_integer64 ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, uint @idx);

	// function snd_ctl_elem_value_get_enumerated - control.h (484, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_ctl_elem_value_get_enumerated ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, uint @idx);

	// function snd_ctl_elem_value_get_byte - control.h (485, 15)
	[DllImport (LibraryName)]
	internal static extern byte snd_ctl_elem_value_get_byte ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, uint @idx);

	// function snd_ctl_elem_value_set_boolean - control.h (486, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_value_set_boolean ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, uint @idx, long @val);

	// function snd_ctl_elem_value_set_integer - control.h (487, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_value_set_integer ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, uint @idx, long @val);

	// function snd_ctl_elem_value_set_integer64 - control.h (488, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_value_set_integer64 ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, uint @idx, long @val);

	// function snd_ctl_elem_value_set_enumerated - control.h (489, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_value_set_enumerated ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, uint @idx, uint @val);

	// function snd_ctl_elem_value_set_byte - control.h (490, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_value_set_byte ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, uint @idx, byte @val);

	// function snd_ctl_elem_set_bytes - control.h (491, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_set_bytes ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<void>")]System.IntPtr @data, uint @size);

	// function snd_ctl_elem_value_get_bytes - control.h (492, 14)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_ctl_elem_value_get_bytes ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj);

	// function snd_ctl_elem_value_get_iec958 - control.h (493, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_value_get_iec958 ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<snd_aes_iec958_t>")]System.IntPtr @ptr);

	// function snd_ctl_elem_value_set_iec958 - control.h (494, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_ctl_elem_value_set_iec958 ([CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<snd_aes_iec958_t>")]System.IntPtr @ptr);

	// function snd_tlv_parse_dB_info - control.h (496, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_tlv_parse_dB_info ([CTypeDetails ("Pointer<uint>")]System.IntPtr @tlv, uint @tlv_size, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @db_tlvp);

	// function snd_tlv_get_dB_range - control.h (498, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_tlv_get_dB_range ([CTypeDetails ("Pointer<uint>")]System.IntPtr @tlv, long @rangemin, long @rangemax, [CTypeDetails ("Pointer<long>")]System.IntPtr @min, [CTypeDetails ("Pointer<long>")]System.IntPtr @max);

	// function snd_tlv_convert_to_dB - control.h (500, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_tlv_convert_to_dB ([CTypeDetails ("Pointer<uint>")]System.IntPtr @tlv, long @rangemin, long @rangemax, long @volume, [CTypeDetails ("Pointer<long>")]System.IntPtr @db_gain);

	// function snd_tlv_convert_from_dB - control.h (502, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_tlv_convert_from_dB ([CTypeDetails ("Pointer<uint>")]System.IntPtr @tlv, long @rangemin, long @rangemax, long @db_gain, [CTypeDetails ("Pointer<long>")]System.IntPtr @value, int @xdir);

	// function snd_ctl_get_dB_range - control.h (504, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_get_dB_range ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @id, [CTypeDetails ("Pointer<long>")]System.IntPtr @min, [CTypeDetails ("Pointer<long>")]System.IntPtr @max);

	// function snd_ctl_convert_to_dB - control.h (506, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_convert_to_dB ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @id, long @volume, [CTypeDetails ("Pointer<long>")]System.IntPtr @db_gain);

	// function snd_ctl_convert_from_dB - control.h (508, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_ctl_convert_from_dB ([CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @id, long @db_gain, [CTypeDetails ("Pointer<long>")]System.IntPtr @value, int @xdir);

	// function snd_hctl_compare_fast - control.h (533, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_compare_fast ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @c1, [CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @c2);

	// function snd_hctl_open - control.h (554, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_open ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @hctl, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, int @mode);

	// function snd_hctl_open_ctl - control.h (555, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_open_ctl ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @hctlp, [CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @ctl);

	// function snd_hctl_close - control.h (556, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_close ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl);

	// function snd_hctl_nonblock - control.h (557, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_nonblock ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl, int @nonblock);

	// function snd_hctl_abort - control.h (558, 23)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_abort ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl);

	// function snd_hctl_poll_descriptors_count - control.h (559, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_poll_descriptors_count ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl);

	// function snd_hctl_poll_descriptors - control.h (560, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_poll_descriptors ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl, [CTypeDetails ("Pointer<pollfd>")]System.IntPtr @pfds, uint @space);

	// function snd_hctl_poll_descriptors_revents - control.h (561, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_poll_descriptors_revents ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<pollfd>")]System.IntPtr @pfds, uint @nfds, [CTypeDetails ("Pointer<ushort>")]System.IntPtr @revents);

	// function snd_hctl_get_count - control.h (562, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_hctl_get_count ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl);

	// function snd_hctl_set_compare - control.h (563, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_set_compare ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl, snd_hctl_compare_t @hsort);

	// function snd_hctl_first_elem - control.h (564, 18)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_hctl_first_elem ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl);

	// function snd_hctl_last_elem - control.h (565, 18)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_hctl_last_elem ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl);

	// function snd_hctl_find_elem - control.h (566, 18)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_hctl_find_elem ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @id);

	// function snd_hctl_set_callback - control.h (567, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_hctl_set_callback ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl, snd_hctl_callback_t @callback);

	// function snd_hctl_set_callback_private - control.h (568, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_hctl_set_callback_private ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl, [CTypeDetails ("Pointer<void>")]System.IntPtr @data);

	// function snd_hctl_get_callback_private - control.h (569, 7)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_hctl_get_callback_private ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl);

	// function snd_hctl_load - control.h (570, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_load ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl);

	// function snd_hctl_free - control.h (571, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_free ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl);

	// function snd_hctl_handle_events - control.h (572, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_handle_events ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl);

	// function snd_hctl_name - control.h (573, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_hctl_name ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl);

	// function snd_hctl_wait - control.h (574, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_wait ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl, int @timeout);

	// function snd_hctl_ctl - control.h (575, 12)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_hctl_ctl ([CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl);

	// function snd_hctl_elem_next - control.h (577, 18)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_hctl_elem_next ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @elem);

	// function snd_hctl_elem_prev - control.h (578, 18)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_hctl_elem_prev ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @elem);

	// function snd_hctl_elem_info - control.h (579, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_elem_info ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @elem, [CTypeDetails ("Pointer<snd_ctl_elem_info_t>")]System.IntPtr @info);

	// function snd_hctl_elem_read - control.h (580, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_elem_read ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @elem, [CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @value);

	// function snd_hctl_elem_write - control.h (581, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_elem_write ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @elem, [CTypeDetails ("Pointer<snd_ctl_elem_value_t>")]System.IntPtr @value);

	// function snd_hctl_elem_tlv_read - control.h (582, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_elem_tlv_read ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @elem, [CTypeDetails ("Pointer<uint>")]System.IntPtr @tlv, uint @tlv_size);

	// function snd_hctl_elem_tlv_write - control.h (583, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_elem_tlv_write ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @elem, [CTypeDetails ("Pointer<uint>")]System.IntPtr @tlv);

	// function snd_hctl_elem_tlv_command - control.h (584, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_hctl_elem_tlv_command ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @elem, [CTypeDetails ("Pointer<uint>")]System.IntPtr @tlv);

	// function snd_hctl_elem_get_hctl - control.h (586, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_hctl_elem_get_hctl ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @elem);

	// function snd_hctl_elem_get_id - control.h (588, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_hctl_elem_get_id ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<snd_ctl_elem_id_t>")]System.IntPtr @ptr);

	// function snd_hctl_elem_get_numid - control.h (589, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_hctl_elem_get_numid ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @obj);

	// function snd_hctl_elem_get_interface - control.h (590, 22)
	[DllImport (LibraryName)]
	internal static extern snd_ctl_elem_iface_t snd_hctl_elem_get_interface ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @obj);

	// function snd_hctl_elem_get_device - control.h (591, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_hctl_elem_get_device ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @obj);

	// function snd_hctl_elem_get_subdevice - control.h (592, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_hctl_elem_get_subdevice ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @obj);

	// function snd_hctl_elem_get_name - control.h (593, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_hctl_elem_get_name ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @obj);

	// function snd_hctl_elem_get_index - control.h (594, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_hctl_elem_get_index ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @obj);

	// function snd_hctl_elem_set_callback - control.h (595, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_hctl_elem_set_callback ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @obj, snd_hctl_elem_callback_t @val);

	// function snd_hctl_elem_get_callback_private - control.h (596, 8)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_hctl_elem_get_callback_private ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @obj);

	// function snd_hctl_elem_set_callback_private - control.h (597, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_hctl_elem_set_callback_private ([CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<void>")]System.IntPtr @val);

	// function snd_sctl_build - control.h (610, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_sctl_build ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ctl, [CTypeDetails ("Pointer<snd_ctl_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @config, [CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @private_data, int @mode);

	// function snd_sctl_free - control.h (612, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_sctl_free ([CTypeDetails ("Pointer<snd_sctl_t>")]System.IntPtr @handle);

	// function snd_sctl_install - control.h (613, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_sctl_install ([CTypeDetails ("Pointer<snd_sctl_t>")]System.IntPtr @handle);

	// function snd_sctl_remove - control.h (614, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_sctl_remove ([CTypeDetails ("Pointer<snd_sctl_t>")]System.IntPtr @handle);

	// function snd_mixer_open - mixer.h (96, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_open ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @mixer, int @mode);

	// function snd_mixer_close - mixer.h (97, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_close ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer);

	// function snd_mixer_first_elem - mixer.h (98, 19)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_mixer_first_elem ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer);

	// function snd_mixer_last_elem - mixer.h (99, 19)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_mixer_last_elem ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer);

	// function snd_mixer_handle_events - mixer.h (100, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_handle_events ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer);

	// function snd_mixer_attach - mixer.h (101, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_attach ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name);

	// function snd_mixer_attach_hctl - mixer.h (102, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_attach_hctl ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer, [CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl);

	// function snd_mixer_detach - mixer.h (103, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_detach ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name);

	// function snd_mixer_detach_hctl - mixer.h (104, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_detach_hctl ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer, [CTypeDetails ("Pointer<snd_hctl_t>")]System.IntPtr @hctl);

	// function snd_mixer_get_hctl - mixer.h (105, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_get_hctl ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @hctl);

	// function snd_mixer_poll_descriptors_count - mixer.h (106, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_poll_descriptors_count ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer);

	// function snd_mixer_poll_descriptors - mixer.h (107, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_poll_descriptors ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer, [CTypeDetails ("Pointer<pollfd>")]System.IntPtr @pfds, uint @space);

	// function snd_mixer_poll_descriptors_revents - mixer.h (108, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_poll_descriptors_revents ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer, [CTypeDetails ("Pointer<pollfd>")]System.IntPtr @pfds, uint @nfds, [CTypeDetails ("Pointer<ushort>")]System.IntPtr @revents);

	// function snd_mixer_load - mixer.h (109, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_load ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer);

	// function snd_mixer_free - mixer.h (110, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_mixer_free ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer);

	// function snd_mixer_wait - mixer.h (111, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_wait ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer, int @timeout);

	// function snd_mixer_set_compare - mixer.h (112, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_set_compare ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer, snd_mixer_compare_t @msort);

	// function snd_mixer_set_callback - mixer.h (113, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_mixer_set_callback ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @obj, snd_mixer_callback_t @val);

	// function snd_mixer_get_callback_private - mixer.h (114, 8)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_mixer_get_callback_private ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @obj);

	// function snd_mixer_set_callback_private - mixer.h (115, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_mixer_set_callback_private ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<void>")]System.IntPtr @val);

	// function snd_mixer_get_count - mixer.h (116, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_mixer_get_count ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @obj);

	// function snd_mixer_class_unregister - mixer.h (117, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_class_unregister ([CTypeDetails ("Pointer<snd_mixer_class_t>")]System.IntPtr @clss);

	// function snd_mixer_elem_next - mixer.h (119, 19)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_mixer_elem_next ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_elem_prev - mixer.h (120, 19)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_mixer_elem_prev ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_elem_set_callback - mixer.h (121, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_mixer_elem_set_callback ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @obj, snd_mixer_elem_callback_t @val);

	// function snd_mixer_elem_get_callback_private - mixer.h (122, 8)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_mixer_elem_get_callback_private ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @obj);

	// function snd_mixer_elem_set_callback_private - mixer.h (123, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_mixer_elem_set_callback_private ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<void>")]System.IntPtr @val);

	// function snd_mixer_elem_get_type - mixer.h (124, 23)
	[DllImport (LibraryName)]
	internal static extern snd_mixer_elem_type_t snd_mixer_elem_get_type ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @obj);

	// function snd_mixer_class_register - mixer.h (126, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_class_register ([CTypeDetails ("Pointer<snd_mixer_class_t>")]System.IntPtr @class_, [CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer);

	// function snd_mixer_elem_new - mixer.h (127, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_elem_new ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @elem, snd_mixer_elem_type_t @type, int @compare_weight, [CTypeDetails ("Pointer<void>")]System.IntPtr @private_data, [CTypeDetails ("Pointer<void (snd_mixer_elem_t *)>")]delegate13 @private_free);

	// function snd_mixer_elem_add - mixer.h (132, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_elem_add ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, [CTypeDetails ("Pointer<snd_mixer_class_t>")]System.IntPtr @class_);

	// function snd_mixer_elem_remove - mixer.h (133, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_elem_remove ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_elem_free - mixer.h (134, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_mixer_elem_free ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_elem_info - mixer.h (135, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_elem_info ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_elem_value - mixer.h (136, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_elem_value ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_elem_attach - mixer.h (137, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_elem_attach ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @melem, [CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @helem);

	// function snd_mixer_elem_detach - mixer.h (138, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_elem_detach ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @melem, [CTypeDetails ("Pointer<snd_hctl_elem_t>")]System.IntPtr @helem);

	// function snd_mixer_elem_empty - mixer.h (139, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_elem_empty ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @melem);

	// function snd_mixer_elem_get_private - mixer.h (140, 7)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_mixer_elem_get_private ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @melem);

	// function snd_mixer_class_sizeof - mixer.h (142, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_mixer_class_sizeof ();

	// function snd_mixer_class_malloc - mixer.h (148, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_class_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_mixer_class_free - mixer.h (149, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_mixer_class_free ([CTypeDetails ("Pointer<snd_mixer_class_t>")]System.IntPtr @obj);

	// function snd_mixer_class_copy - mixer.h (150, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_mixer_class_copy ([CTypeDetails ("Pointer<snd_mixer_class_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_mixer_class_t>")]System.IntPtr @src);

	// function snd_mixer_class_get_mixer - mixer.h (151, 14)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_mixer_class_get_mixer ([CTypeDetails ("Pointer<snd_mixer_class_t>")]System.IntPtr @class_);

	// function snd_mixer_class_get_event - mixer.h (152, 19)
	[DllImport (LibraryName)]
	internal static extern snd_mixer_event_t snd_mixer_class_get_event ([CTypeDetails ("Pointer<snd_mixer_class_t>")]System.IntPtr @class_);

	// function snd_mixer_class_get_private - mixer.h (153, 7)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_mixer_class_get_private ([CTypeDetails ("Pointer<snd_mixer_class_t>")]System.IntPtr @class_);

	// function snd_mixer_class_get_compare - mixer.h (154, 21)
	[DllImport (LibraryName)]
	internal static extern snd_mixer_compare_t snd_mixer_class_get_compare ([CTypeDetails ("Pointer<snd_mixer_class_t>")]System.IntPtr @class_);

	// function snd_mixer_class_set_event - mixer.h (155, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_class_set_event ([CTypeDetails ("Pointer<snd_mixer_class_t>")]System.IntPtr @class_, snd_mixer_event_t @event);

	// function snd_mixer_class_set_private - mixer.h (156, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_class_set_private ([CTypeDetails ("Pointer<snd_mixer_class_t>")]System.IntPtr @class_, [CTypeDetails ("Pointer<void>")]System.IntPtr @private_data);

	// function snd_mixer_class_set_private_free - mixer.h (157, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_class_set_private_free ([CTypeDetails ("Pointer<snd_mixer_class_t>")]System.IntPtr @class_, [CTypeDetails ("Pointer<void (snd_mixer_class_t *)>")]delegate14 @private_free);

	// function snd_mixer_class_set_compare - mixer.h (158, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_class_set_compare ([CTypeDetails ("Pointer<snd_mixer_class_t>")]System.IntPtr @class_, snd_mixer_compare_t @compare);

	// function snd_mixer_selem_channel_name - mixer.h (221, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_mixer_selem_channel_name (snd_mixer_selem_channel_id_t @channel);

	// function snd_mixer_selem_register - mixer.h (223, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_register ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer, [CTypeDetails ("Pointer<snd_mixer_selem_regopt>")]System.IntPtr @options, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @classp);

	// function snd_mixer_selem_get_id - mixer.h (226, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_mixer_selem_get_id ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @element, [CTypeDetails ("Pointer<snd_mixer_selem_id_t>")]System.IntPtr @id);

	// function snd_mixer_selem_get_name - mixer.h (228, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_mixer_selem_get_name ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_get_index - mixer.h (229, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_mixer_selem_get_index ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_find_selem - mixer.h (230, 19)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_mixer_find_selem ([CTypeDetails ("Pointer<snd_mixer_t>")]System.IntPtr @mixer, [CTypeDetails ("Pointer<snd_mixer_selem_id_t>")]System.IntPtr @id);

	// function snd_mixer_selem_is_active - mixer.h (233, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_is_active ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_is_playback_mono - mixer.h (234, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_is_playback_mono ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_has_playback_channel - mixer.h (235, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_has_playback_channel ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @obj, snd_mixer_selem_channel_id_t @channel);

	// function snd_mixer_selem_is_capture_mono - mixer.h (236, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_is_capture_mono ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_has_capture_channel - mixer.h (237, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_has_capture_channel ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @obj, snd_mixer_selem_channel_id_t @channel);

	// function snd_mixer_selem_get_capture_group - mixer.h (238, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_get_capture_group ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_has_common_volume - mixer.h (239, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_has_common_volume ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_has_playback_volume - mixer.h (240, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_has_playback_volume ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_has_playback_volume_joined - mixer.h (241, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_has_playback_volume_joined ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_has_capture_volume - mixer.h (242, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_has_capture_volume ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_has_capture_volume_joined - mixer.h (243, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_has_capture_volume_joined ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_has_common_switch - mixer.h (244, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_has_common_switch ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_has_playback_switch - mixer.h (245, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_has_playback_switch ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_has_playback_switch_joined - mixer.h (246, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_has_playback_switch_joined ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_has_capture_switch - mixer.h (247, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_has_capture_switch ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_has_capture_switch_joined - mixer.h (248, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_has_capture_switch_joined ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_has_capture_switch_exclusive - mixer.h (249, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_has_capture_switch_exclusive ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_ask_playback_vol_dB - mixer.h (251, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_ask_playback_vol_dB ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, long @value, [CTypeDetails ("Pointer<long>")]System.IntPtr @dBvalue);

	// function snd_mixer_selem_ask_capture_vol_dB - mixer.h (252, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_ask_capture_vol_dB ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, long @value, [CTypeDetails ("Pointer<long>")]System.IntPtr @dBvalue);

	// function snd_mixer_selem_ask_playback_dB_vol - mixer.h (253, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_ask_playback_dB_vol ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, long @dBvalue, int @dir, [CTypeDetails ("Pointer<long>")]System.IntPtr @value);

	// function snd_mixer_selem_ask_capture_dB_vol - mixer.h (254, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_ask_capture_dB_vol ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, long @dBvalue, int @dir, [CTypeDetails ("Pointer<long>")]System.IntPtr @value);

	// function snd_mixer_selem_get_playback_volume - mixer.h (255, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_get_playback_volume ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, snd_mixer_selem_channel_id_t @channel, [CTypeDetails ("Pointer<long>")]System.IntPtr @value);

	// function snd_mixer_selem_get_capture_volume - mixer.h (256, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_get_capture_volume ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, snd_mixer_selem_channel_id_t @channel, [CTypeDetails ("Pointer<long>")]System.IntPtr @value);

	// function snd_mixer_selem_get_playback_dB - mixer.h (257, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_get_playback_dB ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, snd_mixer_selem_channel_id_t @channel, [CTypeDetails ("Pointer<long>")]System.IntPtr @value);

	// function snd_mixer_selem_get_capture_dB - mixer.h (258, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_get_capture_dB ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, snd_mixer_selem_channel_id_t @channel, [CTypeDetails ("Pointer<long>")]System.IntPtr @value);

	// function snd_mixer_selem_get_playback_switch - mixer.h (259, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_get_playback_switch ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, snd_mixer_selem_channel_id_t @channel, [CTypeDetails ("Pointer<int>")]System.IntPtr @value);

	// function snd_mixer_selem_get_capture_switch - mixer.h (260, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_get_capture_switch ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, snd_mixer_selem_channel_id_t @channel, [CTypeDetails ("Pointer<int>")]System.IntPtr @value);

	// function snd_mixer_selem_set_playback_volume - mixer.h (261, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_set_playback_volume ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, snd_mixer_selem_channel_id_t @channel, long @value);

	// function snd_mixer_selem_set_capture_volume - mixer.h (262, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_set_capture_volume ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, snd_mixer_selem_channel_id_t @channel, long @value);

	// function snd_mixer_selem_set_playback_dB - mixer.h (263, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_set_playback_dB ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, snd_mixer_selem_channel_id_t @channel, long @value, int @dir);

	// function snd_mixer_selem_set_capture_dB - mixer.h (264, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_set_capture_dB ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, snd_mixer_selem_channel_id_t @channel, long @value, int @dir);

	// function snd_mixer_selem_set_playback_volume_all - mixer.h (265, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_set_playback_volume_all ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, long @value);

	// function snd_mixer_selem_set_capture_volume_all - mixer.h (266, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_set_capture_volume_all ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, long @value);

	// function snd_mixer_selem_set_playback_dB_all - mixer.h (267, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_set_playback_dB_all ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, long @value, int @dir);

	// function snd_mixer_selem_set_capture_dB_all - mixer.h (268, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_set_capture_dB_all ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, long @value, int @dir);

	// function snd_mixer_selem_set_playback_switch - mixer.h (269, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_set_playback_switch ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, snd_mixer_selem_channel_id_t @channel, int @value);

	// function snd_mixer_selem_set_capture_switch - mixer.h (270, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_set_capture_switch ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, snd_mixer_selem_channel_id_t @channel, int @value);

	// function snd_mixer_selem_set_playback_switch_all - mixer.h (271, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_set_playback_switch_all ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, int @value);

	// function snd_mixer_selem_set_capture_switch_all - mixer.h (272, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_set_capture_switch_all ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, int @value);

	// function snd_mixer_selem_get_playback_volume_range - mixer.h (273, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_get_playback_volume_range ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, [CTypeDetails ("Pointer<long>")]System.IntPtr @min, [CTypeDetails ("Pointer<long>")]System.IntPtr @max);

	// function snd_mixer_selem_get_playback_dB_range - mixer.h (275, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_get_playback_dB_range ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, [CTypeDetails ("Pointer<long>")]System.IntPtr @min, [CTypeDetails ("Pointer<long>")]System.IntPtr @max);

	// function snd_mixer_selem_set_playback_volume_range - mixer.h (277, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_set_playback_volume_range ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, long @min, long @max);

	// function snd_mixer_selem_get_capture_volume_range - mixer.h (279, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_get_capture_volume_range ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, [CTypeDetails ("Pointer<long>")]System.IntPtr @min, [CTypeDetails ("Pointer<long>")]System.IntPtr @max);

	// function snd_mixer_selem_get_capture_dB_range - mixer.h (281, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_get_capture_dB_range ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, [CTypeDetails ("Pointer<long>")]System.IntPtr @min, [CTypeDetails ("Pointer<long>")]System.IntPtr @max);

	// function snd_mixer_selem_set_capture_volume_range - mixer.h (283, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_set_capture_volume_range ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, long @min, long @max);

	// function snd_mixer_selem_is_enumerated - mixer.h (286, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_is_enumerated ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_is_enum_playback - mixer.h (287, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_is_enum_playback ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_is_enum_capture - mixer.h (288, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_is_enum_capture ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_get_enum_items - mixer.h (289, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_get_enum_items ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem);

	// function snd_mixer_selem_get_enum_item_name - mixer.h (290, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_get_enum_item_name ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, uint @idx, uint @maxlen, [CTypeDetails ("Pointer<byte>")]System.IntPtr @str);

	// function snd_mixer_selem_get_enum_item - mixer.h (291, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_get_enum_item ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, snd_mixer_selem_channel_id_t @channel, [CTypeDetails ("Pointer<uint>")]System.IntPtr @idxp);

	// function snd_mixer_selem_set_enum_item - mixer.h (292, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_set_enum_item ([CTypeDetails ("Pointer<snd_mixer_elem_t>")]System.IntPtr @elem, snd_mixer_selem_channel_id_t @channel, uint @idx);

	// function snd_mixer_selem_id_sizeof - mixer.h (294, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_mixer_selem_id_sizeof ();

	// function snd_mixer_selem_id_malloc - mixer.h (300, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_mixer_selem_id_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_mixer_selem_id_free - mixer.h (301, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_mixer_selem_id_free ([CTypeDetails ("Pointer<snd_mixer_selem_id_t>")]System.IntPtr @obj);

	// function snd_mixer_selem_id_copy - mixer.h (302, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_mixer_selem_id_copy ([CTypeDetails ("Pointer<snd_mixer_selem_id_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_mixer_selem_id_t>")]System.IntPtr @src);

	// function snd_mixer_selem_id_get_name - mixer.h (303, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_mixer_selem_id_get_name ([CTypeDetails ("Pointer<snd_mixer_selem_id_t>")]System.IntPtr @obj);

	// function snd_mixer_selem_id_get_index - mixer.h (304, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_mixer_selem_id_get_index ([CTypeDetails ("Pointer<snd_mixer_selem_id_t>")]System.IntPtr @obj);

	// function snd_mixer_selem_id_set_name - mixer.h (305, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_mixer_selem_id_set_name ([CTypeDetails ("Pointer<snd_mixer_selem_id_t>")]System.IntPtr @obj, [CTypeDetails ("Pointer<byte>")]System.IntPtr @val);

	// function snd_mixer_selem_id_set_index - mixer.h (306, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_mixer_selem_id_set_index ([CTypeDetails ("Pointer<snd_mixer_selem_id_t>")]System.IntPtr @obj, uint @val);

	// function snd_seq_open - seq.h (78, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_open ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @handle, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, int @streams, int @mode);

	// function snd_seq_open_lconf - seq.h (79, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_open_lconf ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @handle, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, int @streams, int @mode, [CTypeDetails ("Pointer<snd_config_t>")]System.IntPtr @lconf);

	// function snd_seq_name - seq.h (80, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_seq_name ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq);

	// function snd_seq_type_t - seq.h (81, 16)
	[DllImport (LibraryName)]
	internal static extern snd_seq_type_t snd_seq_type ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq);

	// function snd_seq_close - seq.h (82, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_close ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle);

	// function snd_seq_poll_descriptors_count - seq.h (83, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_poll_descriptors_count ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, short @events);

	// function snd_seq_poll_descriptors - seq.h (84, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_poll_descriptors ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<pollfd>")]System.IntPtr @pfds, uint @space, short @events);

	// function snd_seq_poll_descriptors_revents - seq.h (85, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_poll_descriptors_revents ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, [CTypeDetails ("Pointer<pollfd>")]System.IntPtr @pfds, uint @nfds, [CTypeDetails ("Pointer<ushort>")]System.IntPtr @revents);

	// function snd_seq_nonblock - seq.h (86, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_nonblock ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, int @nonblock);

	// function snd_seq_client_id - seq.h (87, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_client_id ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle);

	// function snd_seq_get_output_buffer_size - seq.h (89, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_get_output_buffer_size ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle);

	// function snd_seq_get_input_buffer_size - seq.h (90, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_get_input_buffer_size ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle);

	// function snd_seq_set_output_buffer_size - seq.h (91, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_set_output_buffer_size ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, uint @size);

	// function snd_seq_set_input_buffer_size - seq.h (92, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_set_input_buffer_size ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, uint @size);

	// function snd_seq_system_info_sizeof - seq.h (97, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_system_info_sizeof ();

	// function snd_seq_system_info_malloc - seq.h (101, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_system_info_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_seq_system_info_free - seq.h (102, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_system_info_free ([CTypeDetails ("Pointer<snd_seq_system_info_t>")]System.IntPtr @ptr);

	// function snd_seq_system_info_copy - seq.h (103, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_system_info_copy ([CTypeDetails ("Pointer<snd_seq_system_info_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_seq_system_info_t>")]System.IntPtr @src);

	// function snd_seq_system_info_get_queues - seq.h (105, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_system_info_get_queues ([CTypeDetails ("Pointer<snd_seq_system_info_t>")]System.IntPtr @info);

	// function snd_seq_system_info_get_clients - seq.h (106, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_system_info_get_clients ([CTypeDetails ("Pointer<snd_seq_system_info_t>")]System.IntPtr @info);

	// function snd_seq_system_info_get_ports - seq.h (107, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_system_info_get_ports ([CTypeDetails ("Pointer<snd_seq_system_info_t>")]System.IntPtr @info);

	// function snd_seq_system_info_get_channels - seq.h (108, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_system_info_get_channels ([CTypeDetails ("Pointer<snd_seq_system_info_t>")]System.IntPtr @info);

	// function snd_seq_system_info_get_cur_clients - seq.h (109, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_system_info_get_cur_clients ([CTypeDetails ("Pointer<snd_seq_system_info_t>")]System.IntPtr @info);

	// function snd_seq_system_info_get_cur_queues - seq.h (110, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_system_info_get_cur_queues ([CTypeDetails ("Pointer<snd_seq_system_info_t>")]System.IntPtr @info);

	// function snd_seq_system_info - seq.h (112, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_system_info ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_seq_system_info_t>")]System.IntPtr @info);

	// function snd_seq_client_info_sizeof - seq.h (133, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_client_info_sizeof ();

	// function snd_seq_client_info_malloc - seq.h (137, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_client_info_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_seq_client_info_free - seq.h (138, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_client_info_free ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @ptr);

	// function snd_seq_client_info_copy - seq.h (139, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_client_info_copy ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @src);

	// function snd_seq_client_info_get_client - seq.h (141, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_client_info_get_client ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info);

	// function snd_seq_client_info_get_type - seq.h (142, 23)
	[DllImport (LibraryName)]
	internal static extern snd_seq_client_type_t snd_seq_client_info_get_type ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info);

	// function snd_seq_client_info_get_name - seq.h (143, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_seq_client_info_get_name ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info);

	// function snd_seq_client_info_get_broadcast_filter - seq.h (144, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_client_info_get_broadcast_filter ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info);

	// function snd_seq_client_info_get_error_bounce - seq.h (145, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_client_info_get_error_bounce ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info);

	// function snd_seq_client_info_get_card - seq.h (146, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_client_info_get_card ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info);

	// function snd_seq_client_info_get_pid - seq.h (147, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_client_info_get_pid ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info);

	// function snd_seq_client_info_get_event_filter - seq.h (148, 22)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_seq_client_info_get_event_filter ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info);

	// function snd_seq_client_info_get_num_ports - seq.h (149, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_client_info_get_num_ports ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info);

	// function snd_seq_client_info_get_event_lost - seq.h (150, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_client_info_get_event_lost ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info);

	// function snd_seq_client_info_set_client - seq.h (152, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_client_info_set_client ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info, int @client);

	// function snd_seq_client_info_set_name - seq.h (153, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_client_info_set_name ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name);

	// function snd_seq_client_info_set_broadcast_filter - seq.h (154, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_client_info_set_broadcast_filter ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info, int @val);

	// function snd_seq_client_info_set_error_bounce - seq.h (155, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_client_info_set_error_bounce ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info, int @val);

	// function snd_seq_client_info_set_event_filter - seq.h (156, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_client_info_set_event_filter ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info, [CTypeDetails ("Pointer<byte>")]System.IntPtr @filter);

	// function snd_seq_client_info_event_filter_clear - seq.h (158, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_client_info_event_filter_clear ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info);

	// function snd_seq_client_info_event_filter_add - seq.h (159, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_client_info_event_filter_add ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info, int @event_type);

	// function snd_seq_client_info_event_filter_del - seq.h (160, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_client_info_event_filter_del ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info, int @event_type);

	// function snd_seq_client_info_event_filter_check - seq.h (161, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_client_info_event_filter_check ([CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info, int @event_type);

	// function snd_seq_get_client_info - seq.h (163, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_get_client_info ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info);

	// function snd_seq_get_any_client_info - seq.h (164, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_get_any_client_info ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, int @client, [CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info);

	// function snd_seq_set_client_info - seq.h (165, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_set_client_info ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info);

	// function snd_seq_query_next_client - seq.h (166, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_query_next_client ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_seq_client_info_t>")]System.IntPtr @info);

	// function snd_seq_client_pool_sizeof - seq.h (174, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_client_pool_sizeof ();

	// function snd_seq_client_pool_malloc - seq.h (178, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_client_pool_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_seq_client_pool_free - seq.h (179, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_client_pool_free ([CTypeDetails ("Pointer<snd_seq_client_pool_t>")]System.IntPtr @ptr);

	// function snd_seq_client_pool_copy - seq.h (180, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_client_pool_copy ([CTypeDetails ("Pointer<snd_seq_client_pool_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_seq_client_pool_t>")]System.IntPtr @src);

	// function snd_seq_client_pool_get_client - seq.h (182, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_client_pool_get_client ([CTypeDetails ("Pointer<snd_seq_client_pool_t>")]System.IntPtr @info);

	// function snd_seq_client_pool_get_output_pool - seq.h (183, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_client_pool_get_output_pool ([CTypeDetails ("Pointer<snd_seq_client_pool_t>")]System.IntPtr @info);

	// function snd_seq_client_pool_get_input_pool - seq.h (184, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_client_pool_get_input_pool ([CTypeDetails ("Pointer<snd_seq_client_pool_t>")]System.IntPtr @info);

	// function snd_seq_client_pool_get_output_room - seq.h (185, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_client_pool_get_output_room ([CTypeDetails ("Pointer<snd_seq_client_pool_t>")]System.IntPtr @info);

	// function snd_seq_client_pool_get_output_free - seq.h (186, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_client_pool_get_output_free ([CTypeDetails ("Pointer<snd_seq_client_pool_t>")]System.IntPtr @info);

	// function snd_seq_client_pool_get_input_free - seq.h (187, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_client_pool_get_input_free ([CTypeDetails ("Pointer<snd_seq_client_pool_t>")]System.IntPtr @info);

	// function snd_seq_client_pool_set_output_pool - seq.h (188, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_client_pool_set_output_pool ([CTypeDetails ("Pointer<snd_seq_client_pool_t>")]System.IntPtr @info, uint @size);

	// function snd_seq_client_pool_set_input_pool - seq.h (189, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_client_pool_set_input_pool ([CTypeDetails ("Pointer<snd_seq_client_pool_t>")]System.IntPtr @info, uint @size);

	// function snd_seq_client_pool_set_output_room - seq.h (190, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_client_pool_set_output_room ([CTypeDetails ("Pointer<snd_seq_client_pool_t>")]System.IntPtr @info, uint @size);

	// function snd_seq_get_client_pool - seq.h (192, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_get_client_pool ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_seq_client_pool_t>")]System.IntPtr @info);

	// function snd_seq_set_client_pool - seq.h (193, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_set_client_pool ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_seq_client_pool_t>")]System.IntPtr @info);

	// function snd_seq_port_info_sizeof - seq.h (263, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_port_info_sizeof ();

	// function snd_seq_port_info_malloc - seq.h (267, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_port_info_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_seq_port_info_free - seq.h (268, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_info_free ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @ptr);

	// function snd_seq_port_info_copy - seq.h (269, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_info_copy ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @src);

	// function snd_seq_port_info_get_client - seq.h (271, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_port_info_get_client ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_port_info_get_port - seq.h (272, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_port_info_get_port ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_port_info_get_addr - seq.h (273, 23)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_seq_port_info_get_addr ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_port_info_get_name - seq.h (274, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_seq_port_info_get_name ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_port_info_get_capability - seq.h (275, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_port_info_get_capability ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_port_info_get_type - seq.h (276, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_port_info_get_type ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_port_info_get_midi_channels - seq.h (277, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_port_info_get_midi_channels ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_port_info_get_midi_voices - seq.h (278, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_port_info_get_midi_voices ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_port_info_get_synth_voices - seq.h (279, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_port_info_get_synth_voices ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_port_info_get_read_use - seq.h (280, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_port_info_get_read_use ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_port_info_get_write_use - seq.h (281, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_port_info_get_write_use ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_port_info_get_port_specified - seq.h (282, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_port_info_get_port_specified ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_port_info_get_timestamping - seq.h (283, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_port_info_get_timestamping ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_port_info_get_timestamp_real - seq.h (284, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_port_info_get_timestamp_real ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_port_info_get_timestamp_queue - seq.h (285, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_port_info_get_timestamp_queue ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_port_info_set_client - seq.h (287, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_info_set_client ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info, int @client);

	// function snd_seq_port_info_set_port - seq.h (288, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_info_set_port ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info, int @port);

	// function snd_seq_port_info_set_addr - seq.h (289, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_info_set_addr ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info, [CTypeDetails ("Pointer<snd_seq_addr_t>")]System.IntPtr @addr);

	// function snd_seq_port_info_set_name - seq.h (290, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_info_set_name ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name);

	// function snd_seq_port_info_set_capability - seq.h (291, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_info_set_capability ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info, uint @capability);

	// function snd_seq_port_info_set_type - seq.h (292, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_info_set_type ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info, uint @type);

	// function snd_seq_port_info_set_midi_channels - seq.h (293, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_info_set_midi_channels ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info, int @channels);

	// function snd_seq_port_info_set_midi_voices - seq.h (294, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_info_set_midi_voices ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info, int @voices);

	// function snd_seq_port_info_set_synth_voices - seq.h (295, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_info_set_synth_voices ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info, int @voices);

	// function snd_seq_port_info_set_port_specified - seq.h (296, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_info_set_port_specified ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info, int @val);

	// function snd_seq_port_info_set_timestamping - seq.h (297, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_info_set_timestamping ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info, int @enable);

	// function snd_seq_port_info_set_timestamp_real - seq.h (298, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_info_set_timestamp_real ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info, int @realtime);

	// function snd_seq_port_info_set_timestamp_queue - seq.h (299, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_info_set_timestamp_queue ([CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info, int @queue);

	// function snd_seq_create_port - seq.h (301, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_create_port ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_delete_port - seq.h (302, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_delete_port ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, int @port);

	// function snd_seq_get_port_info - seq.h (303, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_get_port_info ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, int @port, [CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_get_any_port_info - seq.h (304, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_get_any_port_info ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, int @client, int @port, [CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_set_port_info - seq.h (305, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_set_port_info ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, int @port, [CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_query_next_port - seq.h (306, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_query_next_port ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_seq_port_info_t>")]System.IntPtr @info);

	// function snd_seq_port_subscribe_sizeof - seq.h (321, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_port_subscribe_sizeof ();

	// function snd_seq_port_subscribe_malloc - seq.h (325, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_port_subscribe_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_seq_port_subscribe_free - seq.h (326, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_subscribe_free ([CTypeDetails ("Pointer<snd_seq_port_subscribe_t>")]System.IntPtr @ptr);

	// function snd_seq_port_subscribe_copy - seq.h (327, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_subscribe_copy ([CTypeDetails ("Pointer<snd_seq_port_subscribe_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_seq_port_subscribe_t>")]System.IntPtr @src);

	// function snd_seq_port_subscribe_get_sender - seq.h (329, 23)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_seq_port_subscribe_get_sender ([CTypeDetails ("Pointer<snd_seq_port_subscribe_t>")]System.IntPtr @info);

	// function snd_seq_port_subscribe_get_dest - seq.h (330, 23)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_seq_port_subscribe_get_dest ([CTypeDetails ("Pointer<snd_seq_port_subscribe_t>")]System.IntPtr @info);

	// function snd_seq_port_subscribe_get_queue - seq.h (331, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_port_subscribe_get_queue ([CTypeDetails ("Pointer<snd_seq_port_subscribe_t>")]System.IntPtr @info);

	// function snd_seq_port_subscribe_get_exclusive - seq.h (332, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_port_subscribe_get_exclusive ([CTypeDetails ("Pointer<snd_seq_port_subscribe_t>")]System.IntPtr @info);

	// function snd_seq_port_subscribe_get_time_update - seq.h (333, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_port_subscribe_get_time_update ([CTypeDetails ("Pointer<snd_seq_port_subscribe_t>")]System.IntPtr @info);

	// function snd_seq_port_subscribe_get_time_real - seq.h (334, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_port_subscribe_get_time_real ([CTypeDetails ("Pointer<snd_seq_port_subscribe_t>")]System.IntPtr @info);

	// function snd_seq_port_subscribe_set_sender - seq.h (336, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_subscribe_set_sender ([CTypeDetails ("Pointer<snd_seq_port_subscribe_t>")]System.IntPtr @info, [CTypeDetails ("Pointer<snd_seq_addr_t>")]System.IntPtr @addr);

	// function snd_seq_port_subscribe_set_dest - seq.h (337, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_subscribe_set_dest ([CTypeDetails ("Pointer<snd_seq_port_subscribe_t>")]System.IntPtr @info, [CTypeDetails ("Pointer<snd_seq_addr_t>")]System.IntPtr @addr);

	// function snd_seq_port_subscribe_set_queue - seq.h (338, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_subscribe_set_queue ([CTypeDetails ("Pointer<snd_seq_port_subscribe_t>")]System.IntPtr @info, int @q);

	// function snd_seq_port_subscribe_set_exclusive - seq.h (339, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_subscribe_set_exclusive ([CTypeDetails ("Pointer<snd_seq_port_subscribe_t>")]System.IntPtr @info, int @val);

	// function snd_seq_port_subscribe_set_time_update - seq.h (340, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_subscribe_set_time_update ([CTypeDetails ("Pointer<snd_seq_port_subscribe_t>")]System.IntPtr @info, int @val);

	// function snd_seq_port_subscribe_set_time_real - seq.h (341, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_port_subscribe_set_time_real ([CTypeDetails ("Pointer<snd_seq_port_subscribe_t>")]System.IntPtr @info, int @val);

	// function snd_seq_get_port_subscription - seq.h (343, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_get_port_subscription ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_seq_port_subscribe_t>")]System.IntPtr @sub);

	// function snd_seq_subscribe_port - seq.h (344, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_subscribe_port ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_seq_port_subscribe_t>")]System.IntPtr @sub);

	// function snd_seq_unsubscribe_port - seq.h (345, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_unsubscribe_port ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_seq_port_subscribe_t>")]System.IntPtr @sub);

	// function snd_seq_query_subscribe_sizeof - seq.h (359, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_query_subscribe_sizeof ();

	// function snd_seq_query_subscribe_malloc - seq.h (363, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_query_subscribe_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_seq_query_subscribe_free - seq.h (364, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_query_subscribe_free ([CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @ptr);

	// function snd_seq_query_subscribe_copy - seq.h (365, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_query_subscribe_copy ([CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @src);

	// function snd_seq_query_subscribe_get_client - seq.h (367, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_query_subscribe_get_client ([CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @info);

	// function snd_seq_query_subscribe_get_port - seq.h (368, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_query_subscribe_get_port ([CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @info);

	// function snd_seq_query_subscribe_get_root - seq.h (369, 23)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_seq_query_subscribe_get_root ([CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @info);

	// function snd_seq_query_subscribe_get_type - seq.h (370, 27)
	[DllImport (LibraryName)]
	internal static extern snd_seq_query_subs_type_t snd_seq_query_subscribe_get_type ([CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @info);

	// function snd_seq_query_subscribe_get_index - seq.h (371, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_query_subscribe_get_index ([CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @info);

	// function snd_seq_query_subscribe_get_num_subs - seq.h (372, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_query_subscribe_get_num_subs ([CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @info);

	// function snd_seq_query_subscribe_get_addr - seq.h (373, 23)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_seq_query_subscribe_get_addr ([CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @info);

	// function snd_seq_query_subscribe_get_queue - seq.h (374, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_query_subscribe_get_queue ([CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @info);

	// function snd_seq_query_subscribe_get_exclusive - seq.h (375, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_query_subscribe_get_exclusive ([CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @info);

	// function snd_seq_query_subscribe_get_time_update - seq.h (376, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_query_subscribe_get_time_update ([CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @info);

	// function snd_seq_query_subscribe_get_time_real - seq.h (377, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_query_subscribe_get_time_real ([CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @info);

	// function snd_seq_query_subscribe_set_client - seq.h (379, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_query_subscribe_set_client ([CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @info, int @client);

	// function snd_seq_query_subscribe_set_port - seq.h (380, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_query_subscribe_set_port ([CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @info, int @port);

	// function snd_seq_query_subscribe_set_root - seq.h (381, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_query_subscribe_set_root ([CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @info, [CTypeDetails ("Pointer<snd_seq_addr_t>")]System.IntPtr @addr);

	// function snd_seq_query_subscribe_set_type - seq.h (382, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_query_subscribe_set_type ([CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @info, snd_seq_query_subs_type_t @type);

	// function snd_seq_query_subscribe_set_index - seq.h (383, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_query_subscribe_set_index ([CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @info, int @_index);

	// function snd_seq_query_port_subscribers - seq.h (385, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_query_port_subscribers ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, [CTypeDetails ("Pointer<snd_seq_query_subscribe_t>")]System.IntPtr @subs);

	// function snd_seq_queue_info_sizeof - seq.h (409, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_queue_info_sizeof ();

	// function snd_seq_queue_info_malloc - seq.h (413, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_queue_info_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_seq_queue_info_free - seq.h (414, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_info_free ([CTypeDetails ("Pointer<snd_seq_queue_info_t>")]System.IntPtr @ptr);

	// function snd_seq_queue_info_copy - seq.h (415, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_info_copy ([CTypeDetails ("Pointer<snd_seq_queue_info_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_seq_queue_info_t>")]System.IntPtr @src);

	// function snd_seq_queue_info_get_queue - seq.h (417, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_queue_info_get_queue ([CTypeDetails ("Pointer<snd_seq_queue_info_t>")]System.IntPtr @info);

	// function snd_seq_queue_info_get_name - seq.h (418, 13)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_seq_queue_info_get_name ([CTypeDetails ("Pointer<snd_seq_queue_info_t>")]System.IntPtr @info);

	// function snd_seq_queue_info_get_owner - seq.h (419, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_queue_info_get_owner ([CTypeDetails ("Pointer<snd_seq_queue_info_t>")]System.IntPtr @info);

	// function snd_seq_queue_info_get_locked - seq.h (420, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_queue_info_get_locked ([CTypeDetails ("Pointer<snd_seq_queue_info_t>")]System.IntPtr @info);

	// function snd_seq_queue_info_get_flags - seq.h (421, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_queue_info_get_flags ([CTypeDetails ("Pointer<snd_seq_queue_info_t>")]System.IntPtr @info);

	// function snd_seq_queue_info_set_name - seq.h (423, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_info_set_name ([CTypeDetails ("Pointer<snd_seq_queue_info_t>")]System.IntPtr @info, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name);

	// function snd_seq_queue_info_set_owner - seq.h (424, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_info_set_owner ([CTypeDetails ("Pointer<snd_seq_queue_info_t>")]System.IntPtr @info, int @owner);

	// function snd_seq_queue_info_set_locked - seq.h (425, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_info_set_locked ([CTypeDetails ("Pointer<snd_seq_queue_info_t>")]System.IntPtr @info, int @locked);

	// function snd_seq_queue_info_set_flags - seq.h (426, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_info_set_flags ([CTypeDetails ("Pointer<snd_seq_queue_info_t>")]System.IntPtr @info, uint @flags);

	// function snd_seq_create_queue - seq.h (428, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_create_queue ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, [CTypeDetails ("Pointer<snd_seq_queue_info_t>")]System.IntPtr @info);

	// function snd_seq_alloc_named_queue - seq.h (429, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_alloc_named_queue ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name);

	// function snd_seq_alloc_queue - seq.h (430, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_alloc_queue ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle);

	// function snd_seq_free_queue - seq.h (431, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_free_queue ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, int @q);

	// function snd_seq_get_queue_info - seq.h (432, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_get_queue_info ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, int @q, [CTypeDetails ("Pointer<snd_seq_queue_info_t>")]System.IntPtr @info);

	// function snd_seq_set_queue_info - seq.h (433, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_set_queue_info ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, int @q, [CTypeDetails ("Pointer<snd_seq_queue_info_t>")]System.IntPtr @info);

	// function snd_seq_query_named_queue - seq.h (434, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_query_named_queue ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name);

	// function snd_seq_get_queue_usage - seq.h (436, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_get_queue_usage ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, int @q);

	// function snd_seq_set_queue_usage - seq.h (437, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_set_queue_usage ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, int @q, int @used);

	// function snd_seq_queue_status_sizeof - seq.h (441, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_queue_status_sizeof ();

	// function snd_seq_queue_status_malloc - seq.h (445, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_queue_status_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_seq_queue_status_free - seq.h (446, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_status_free ([CTypeDetails ("Pointer<snd_seq_queue_status_t>")]System.IntPtr @ptr);

	// function snd_seq_queue_status_copy - seq.h (447, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_status_copy ([CTypeDetails ("Pointer<snd_seq_queue_status_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_seq_queue_status_t>")]System.IntPtr @src);

	// function snd_seq_queue_status_get_queue - seq.h (449, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_queue_status_get_queue ([CTypeDetails ("Pointer<snd_seq_queue_status_t>")]System.IntPtr @info);

	// function snd_seq_queue_status_get_events - seq.h (450, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_queue_status_get_events ([CTypeDetails ("Pointer<snd_seq_queue_status_t>")]System.IntPtr @info);

	// function snd_seq_queue_status_get_tick_time - seq.h (451, 21)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_queue_status_get_tick_time ([CTypeDetails ("Pointer<snd_seq_queue_status_t>")]System.IntPtr @info);

	// function snd_seq_queue_status_get_real_time - seq.h (452, 28)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_seq_queue_status_get_real_time ([CTypeDetails ("Pointer<snd_seq_queue_status_t>")]System.IntPtr @info);

	// function snd_seq_queue_status_get_status - seq.h (453, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_queue_status_get_status ([CTypeDetails ("Pointer<snd_seq_queue_status_t>")]System.IntPtr @info);

	// function snd_seq_get_queue_status - seq.h (455, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_get_queue_status ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, int @q, [CTypeDetails ("Pointer<snd_seq_queue_status_t>")]System.IntPtr @status);

	// function snd_seq_queue_tempo_sizeof - seq.h (459, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_queue_tempo_sizeof ();

	// function snd_seq_queue_tempo_malloc - seq.h (463, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_queue_tempo_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_seq_queue_tempo_free - seq.h (464, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_tempo_free ([CTypeDetails ("Pointer<snd_seq_queue_tempo_t>")]System.IntPtr @ptr);

	// function snd_seq_queue_tempo_copy - seq.h (465, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_tempo_copy ([CTypeDetails ("Pointer<snd_seq_queue_tempo_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_seq_queue_tempo_t>")]System.IntPtr @src);

	// function snd_seq_queue_tempo_get_queue - seq.h (467, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_queue_tempo_get_queue ([CTypeDetails ("Pointer<snd_seq_queue_tempo_t>")]System.IntPtr @info);

	// function snd_seq_queue_tempo_get_tempo - seq.h (468, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_queue_tempo_get_tempo ([CTypeDetails ("Pointer<snd_seq_queue_tempo_t>")]System.IntPtr @info);

	// function snd_seq_queue_tempo_get_ppq - seq.h (469, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_queue_tempo_get_ppq ([CTypeDetails ("Pointer<snd_seq_queue_tempo_t>")]System.IntPtr @info);

	// function snd_seq_queue_tempo_get_skew - seq.h (470, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_queue_tempo_get_skew ([CTypeDetails ("Pointer<snd_seq_queue_tempo_t>")]System.IntPtr @info);

	// function snd_seq_queue_tempo_get_skew_base - seq.h (471, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_queue_tempo_get_skew_base ([CTypeDetails ("Pointer<snd_seq_queue_tempo_t>")]System.IntPtr @info);

	// function snd_seq_queue_tempo_set_tempo - seq.h (472, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_tempo_set_tempo ([CTypeDetails ("Pointer<snd_seq_queue_tempo_t>")]System.IntPtr @info, uint @tempo);

	// function snd_seq_queue_tempo_set_ppq - seq.h (473, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_tempo_set_ppq ([CTypeDetails ("Pointer<snd_seq_queue_tempo_t>")]System.IntPtr @info, int @ppq);

	// function snd_seq_queue_tempo_set_skew - seq.h (474, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_tempo_set_skew ([CTypeDetails ("Pointer<snd_seq_queue_tempo_t>")]System.IntPtr @info, uint @skew);

	// function snd_seq_queue_tempo_set_skew_base - seq.h (475, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_tempo_set_skew_base ([CTypeDetails ("Pointer<snd_seq_queue_tempo_t>")]System.IntPtr @info, uint @base);

	// function snd_seq_get_queue_tempo - seq.h (477, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_get_queue_tempo ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, int @q, [CTypeDetails ("Pointer<snd_seq_queue_tempo_t>")]System.IntPtr @tempo);

	// function snd_seq_set_queue_tempo - seq.h (478, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_set_queue_tempo ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, int @q, [CTypeDetails ("Pointer<snd_seq_queue_tempo_t>")]System.IntPtr @tempo);

	// function snd_seq_queue_timer_sizeof - seq.h (490, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_queue_timer_sizeof ();

	// function snd_seq_queue_timer_malloc - seq.h (494, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_queue_timer_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_seq_queue_timer_free - seq.h (495, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_timer_free ([CTypeDetails ("Pointer<snd_seq_queue_timer_t>")]System.IntPtr @ptr);

	// function snd_seq_queue_timer_copy - seq.h (496, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_timer_copy ([CTypeDetails ("Pointer<snd_seq_queue_timer_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_seq_queue_timer_t>")]System.IntPtr @src);

	// function snd_seq_queue_timer_get_queue - seq.h (498, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_queue_timer_get_queue ([CTypeDetails ("Pointer<snd_seq_queue_timer_t>")]System.IntPtr @info);

	// function snd_seq_queue_timer_get_type - seq.h (499, 28)
	[DllImport (LibraryName)]
	internal static extern snd_seq_queue_timer_type_t snd_seq_queue_timer_get_type ([CTypeDetails ("Pointer<snd_seq_queue_timer_t>")]System.IntPtr @info);

	// function snd_seq_queue_timer_get_id - seq.h (500, 23)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_seq_queue_timer_get_id ([CTypeDetails ("Pointer<snd_seq_queue_timer_t>")]System.IntPtr @info);

	// function snd_seq_queue_timer_get_resolution - seq.h (501, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_queue_timer_get_resolution ([CTypeDetails ("Pointer<snd_seq_queue_timer_t>")]System.IntPtr @info);

	// function snd_seq_queue_timer_set_type - seq.h (503, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_timer_set_type ([CTypeDetails ("Pointer<snd_seq_queue_timer_t>")]System.IntPtr @info, snd_seq_queue_timer_type_t @type);

	// function snd_seq_queue_timer_set_id - seq.h (504, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_timer_set_id ([CTypeDetails ("Pointer<snd_seq_queue_timer_t>")]System.IntPtr @info, [CTypeDetails ("Pointer<snd_timer_id_t>")]System.IntPtr @id);

	// function snd_seq_queue_timer_set_resolution - seq.h (505, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_queue_timer_set_resolution ([CTypeDetails ("Pointer<snd_seq_queue_timer_t>")]System.IntPtr @info, uint @resolution);

	// function snd_seq_get_queue_timer - seq.h (507, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_get_queue_timer ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, int @q, [CTypeDetails ("Pointer<snd_seq_queue_timer_t>")]System.IntPtr @timer);

	// function snd_seq_set_queue_timer - seq.h (508, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_set_queue_timer ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, int @q, [CTypeDetails ("Pointer<snd_seq_queue_timer_t>")]System.IntPtr @timer);

	// function snd_seq_free_event - seq.h (519, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_free_event ([CTypeDetails ("Pointer<snd_seq_event_t>")]System.IntPtr @ev);

	// function snd_seq_event_length - seq.h (520, 9)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_event_length ([CTypeDetails ("Pointer<snd_seq_event_t>")]System.IntPtr @ev);

	// function snd_seq_event_output - seq.h (521, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_event_output ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_seq_event_t>")]System.IntPtr @ev);

	// function snd_seq_event_output_buffer - seq.h (522, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_event_output_buffer ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_seq_event_t>")]System.IntPtr @ev);

	// function snd_seq_event_output_direct - seq.h (523, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_event_output_direct ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_seq_event_t>")]System.IntPtr @ev);

	// function snd_seq_event_input - seq.h (524, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_event_input ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ev);

	// function snd_seq_event_input_pending - seq.h (525, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_event_input_pending ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, int @fetch_sequencer);

	// function snd_seq_drain_output - seq.h (526, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_drain_output ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle);

	// function snd_seq_event_output_pending - seq.h (527, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_event_output_pending ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq);

	// function snd_seq_extract_output - seq.h (528, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_extract_output ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ev);

	// function snd_seq_drop_output - seq.h (529, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_drop_output ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle);

	// function snd_seq_drop_output_buffer - seq.h (530, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_drop_output_buffer ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle);

	// function snd_seq_drop_input - seq.h (531, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_drop_input ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle);

	// function snd_seq_drop_input_buffer - seq.h (532, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_drop_input_buffer ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle);

	// function snd_seq_remove_events_sizeof - seq.h (549, 8)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_remove_events_sizeof ();

	// function snd_seq_remove_events_malloc - seq.h (553, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_remove_events_malloc ([CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @ptr);

	// function snd_seq_remove_events_free - seq.h (554, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_remove_events_free ([CTypeDetails ("Pointer<snd_seq_remove_events_t>")]System.IntPtr @ptr);

	// function snd_seq_remove_events_copy - seq.h (555, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_remove_events_copy ([CTypeDetails ("Pointer<snd_seq_remove_events_t>")]System.IntPtr @dst, [CTypeDetails ("Pointer<snd_seq_remove_events_t>")]System.IntPtr @src);

	// function snd_seq_remove_events_get_condition - seq.h (557, 14)
	[DllImport (LibraryName)]
	internal static extern uint snd_seq_remove_events_get_condition ([CTypeDetails ("Pointer<snd_seq_remove_events_t>")]System.IntPtr @info);

	// function snd_seq_remove_events_get_queue - seq.h (558, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_remove_events_get_queue ([CTypeDetails ("Pointer<snd_seq_remove_events_t>")]System.IntPtr @info);

	// function snd_seq_remove_events_get_time - seq.h (559, 28)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_seq_remove_events_get_time ([CTypeDetails ("Pointer<snd_seq_remove_events_t>")]System.IntPtr @info);

	// function snd_seq_remove_events_get_dest - seq.h (560, 23)
	[DllImport (LibraryName)]
	internal static extern System.IntPtr snd_seq_remove_events_get_dest ([CTypeDetails ("Pointer<snd_seq_remove_events_t>")]System.IntPtr @info);

	// function snd_seq_remove_events_get_channel - seq.h (561, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_remove_events_get_channel ([CTypeDetails ("Pointer<snd_seq_remove_events_t>")]System.IntPtr @info);

	// function snd_seq_remove_events_get_event_type - seq.h (562, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_remove_events_get_event_type ([CTypeDetails ("Pointer<snd_seq_remove_events_t>")]System.IntPtr @info);

	// function snd_seq_remove_events_get_tag - seq.h (563, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_remove_events_get_tag ([CTypeDetails ("Pointer<snd_seq_remove_events_t>")]System.IntPtr @info);

	// function snd_seq_remove_events_set_condition - seq.h (565, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_remove_events_set_condition ([CTypeDetails ("Pointer<snd_seq_remove_events_t>")]System.IntPtr @info, uint @flags);

	// function snd_seq_remove_events_set_queue - seq.h (566, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_remove_events_set_queue ([CTypeDetails ("Pointer<snd_seq_remove_events_t>")]System.IntPtr @info, int @queue);

	// function snd_seq_remove_events_set_time - seq.h (567, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_remove_events_set_time ([CTypeDetails ("Pointer<snd_seq_remove_events_t>")]System.IntPtr @info, [CTypeDetails ("Pointer<snd_seq_timestamp_t>")]System.IntPtr @time);

	// function snd_seq_remove_events_set_dest - seq.h (568, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_remove_events_set_dest ([CTypeDetails ("Pointer<snd_seq_remove_events_t>")]System.IntPtr @info, [CTypeDetails ("Pointer<snd_seq_addr_t>")]System.IntPtr @addr);

	// function snd_seq_remove_events_set_channel - seq.h (569, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_remove_events_set_channel ([CTypeDetails ("Pointer<snd_seq_remove_events_t>")]System.IntPtr @info, int @channel);

	// function snd_seq_remove_events_set_event_type - seq.h (570, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_remove_events_set_event_type ([CTypeDetails ("Pointer<snd_seq_remove_events_t>")]System.IntPtr @info, int @type);

	// function snd_seq_remove_events_set_tag - seq.h (571, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_remove_events_set_tag ([CTypeDetails ("Pointer<snd_seq_remove_events_t>")]System.IntPtr @info, int @tag);

	// function snd_seq_remove_events - seq.h (573, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_remove_events ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @handle, [CTypeDetails ("Pointer<snd_seq_remove_events_t>")]System.IntPtr @info);

	// function snd_seq_set_bit - seq.h (584, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_set_bit (int @nr, [CTypeDetails ("Pointer<void>")]System.IntPtr @array);

	// function snd_seq_unset_bit - seq.h (585, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_seq_unset_bit (int @nr, [CTypeDetails ("Pointer<void>")]System.IntPtr @array);

	// function snd_seq_change_bit - seq.h (586, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_change_bit (int @nr, [CTypeDetails ("Pointer<void>")]System.IntPtr @array);

	// function snd_seq_get_bit - seq.h (587, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_get_bit (int @nr, [CTypeDetails ("Pointer<void>")]System.IntPtr @array);

	// function snd_seq_control_queue - seqmid.h (288, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_control_queue ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, int @q, int @type, int @value, [CTypeDetails ("Pointer<snd_seq_event_t>")]System.IntPtr @ev);

	// function snd_seq_create_simple_port - seqmid.h (328, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_create_simple_port ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name, uint @caps, uint @type);

	// function snd_seq_delete_simple_port - seqmid.h (331, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_delete_simple_port ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, int @port);

	// function snd_seq_connect_from - seqmid.h (336, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_connect_from ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, int @my_port, int @src_client, int @src_port);

	// function snd_seq_connect_to - seqmid.h (337, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_connect_to ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, int @my_port, int @dest_client, int @dest_port);

	// function snd_seq_disconnect_from - seqmid.h (338, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_disconnect_from ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, int @my_port, int @src_client, int @src_port);

	// function snd_seq_disconnect_to - seqmid.h (339, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_disconnect_to ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, int @my_port, int @dest_client, int @dest_port);

	// function snd_seq_set_client_name - seqmid.h (344, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_set_client_name ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, [CTypeDetails ("Pointer<byte>")]System.IntPtr @name);

	// function snd_seq_set_client_event_filter - seqmid.h (345, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_set_client_event_filter ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, int @event_type);

	// function snd_seq_set_client_pool_output - seqmid.h (346, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_set_client_pool_output ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, uint @size);

	// function snd_seq_set_client_pool_output_room - seqmid.h (347, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_set_client_pool_output_room ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, uint @size);

	// function snd_seq_set_client_pool_input - seqmid.h (348, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_set_client_pool_input ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, uint @size);

	// function snd_seq_sync_output_queue - seqmid.h (350, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_sync_output_queue ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq);

	// function snd_seq_parse_address - seqmid.h (355, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_parse_address ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq, [CTypeDetails ("Pointer<snd_seq_addr_t>")]System.IntPtr @addr, [CTypeDetails ("Pointer<byte>")]System.IntPtr @str);

	// function snd_seq_reset_pool_output - seqmid.h (360, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_reset_pool_output ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq);

	// function snd_seq_reset_pool_input - seqmid.h (361, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_seq_reset_pool_input ([CTypeDetails ("Pointer<snd_seq_t>")]System.IntPtr @seq);

	// function snd_midi_event_new - seq_midi_event.h (45, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_midi_event_new (uint @bufsize, [CTypeDetails ("Pointer<System.IntPtr>")]System.IntPtr @rdev);

	// function snd_midi_event_resize_buffer - seq_midi_event.h (46, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_midi_event_resize_buffer ([CTypeDetails ("Pointer<snd_midi_event_t>")]System.IntPtr @dev, uint @bufsize);

	// function snd_midi_event_free - seq_midi_event.h (47, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_midi_event_free ([CTypeDetails ("Pointer<snd_midi_event_t>")]System.IntPtr @dev);

	// function snd_midi_event_init - seq_midi_event.h (48, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_midi_event_init ([CTypeDetails ("Pointer<snd_midi_event_t>")]System.IntPtr @dev);

	// function snd_midi_event_reset_encode - seq_midi_event.h (49, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_midi_event_reset_encode ([CTypeDetails ("Pointer<snd_midi_event_t>")]System.IntPtr @dev);

	// function snd_midi_event_reset_decode - seq_midi_event.h (50, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_midi_event_reset_decode ([CTypeDetails ("Pointer<snd_midi_event_t>")]System.IntPtr @dev);

	// function snd_midi_event_no_status - seq_midi_event.h (51, 6)
	[DllImport (LibraryName)]
	internal static extern void snd_midi_event_no_status ([CTypeDetails ("Pointer<snd_midi_event_t>")]System.IntPtr @dev, int @on);

	// function snd_midi_event_encode - seq_midi_event.h (53, 6)
	[DllImport (LibraryName)]
	internal static extern long snd_midi_event_encode ([CTypeDetails ("Pointer<snd_midi_event_t>")]System.IntPtr @dev, [CTypeDetails ("Pointer<byte>")]System.IntPtr @buf, long @count, [CTypeDetails ("Pointer<snd_seq_event_t>")]System.IntPtr @ev);

	// function snd_midi_event_encode_byte - seq_midi_event.h (54, 5)
	[DllImport (LibraryName)]
	internal static extern int snd_midi_event_encode_byte ([CTypeDetails ("Pointer<snd_midi_event_t>")]System.IntPtr @dev, int @c, [CTypeDetails ("Pointer<snd_seq_event_t>")]System.IntPtr @ev);

	// function snd_midi_event_decode - seq_midi_event.h (56, 6)
	[DllImport (LibraryName)]
	internal static extern long snd_midi_event_decode ([CTypeDetails ("Pointer<snd_midi_event_t>")]System.IntPtr @dev, [CTypeDetails ("Pointer<byte>")]System.IntPtr @buf, long @count, [CTypeDetails ("Pointer<snd_seq_event_t>")]System.IntPtr @ev);

}

class Delegates
{
public delegate void snd_async_callback_t (System.IntPtr p0);
public delegate void snd_lib_error_handler_t (System.IntPtr p0, System.Int32 p1, System.IntPtr p2, System.Int32 p3, System.IntPtr p4);
//public delegate void snd_local_error_handler_t (System.IntPtr p0, System.Int32 p1, System.IntPtr p2, System.Int32 p3, System.IntPtr p4, AlsaSharp.va_list p5);
public delegate System.Int32 snd_pcm_hook_func_t (System.IntPtr p0);
public delegate int delegate4 (System.IntPtr p0);
public delegate void delegate5 (System.IntPtr p0);
public delegate System.Int32 snd_hctl_compare_t (System.IntPtr p0, System.IntPtr p1);
public delegate System.Int32 snd_hctl_callback_t (System.IntPtr p0, System.UInt32 p1, System.IntPtr p2);
public delegate System.Int32 snd_hctl_elem_callback_t (System.IntPtr p0, System.UInt32 p1);
public delegate System.Int32 snd_mixer_callback_t (System.IntPtr p0, System.UInt32 p1, System.IntPtr p2);
public delegate System.Int32 snd_mixer_elem_callback_t (System.IntPtr p0, System.UInt32 p1);
public delegate System.Int32 snd_mixer_compare_t (System.IntPtr p0, System.IntPtr p1);
public delegate System.Int32 snd_mixer_event_t (System.IntPtr p0, System.UInt32 p1, System.IntPtr p2, System.IntPtr p3);
public delegate void delegate13 (System.IntPtr p0);
public delegate void delegate14 (System.IntPtr p0);
}

public struct Pointer<T>
{
	public IntPtr Handle;
	public static implicit operator IntPtr (Pointer<T> value) { return value.Handle; }
	public static implicit operator Pointer<T> (IntPtr value) { return new Pointer<T> (value); }

	public Pointer (IntPtr handle)
	{
		Handle = handle;
	}

	public override bool Equals (object obj)
	{
		return obj is Pointer<T> && this == (Pointer<T>) obj;
	}

	public override int GetHashCode ()
	{
		return (int) Handle;
	}

	public static bool operator == (Pointer<T> p1, Pointer<T> p2)
	{
		return p1.Handle == p2.Handle;
	}

	public static bool operator != (Pointer<T> p1, Pointer<T> p2)
	{
		return p1.Handle != p2.Handle;
	}
}
public struct ArrayOf<T> {}
public struct ConstArrayOf<T> {}
public class CTypeDetailsAttribute : Attribute
{
	public CTypeDetailsAttribute (string value)
	{
		Value = value;
	}

	public string Value { get; set; }
}

}
